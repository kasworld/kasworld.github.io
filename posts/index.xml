<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 취미로 프로그래밍을 하는 사람입니다.</title>
    <link>https://kasworld.github.io/posts/</link>
    <description>Recent content in Posts on 취미로 프로그래밍을 하는 사람입니다.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Thu, 02 Nov 2023 11:37:54 +0900</lastBuildDate><atom:link href="https://kasworld.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>갤럭시워치6사용기</title>
      <link>https://kasworld.github.io/posts/%EA%B0%A4%EB%9F%AD%EC%8B%9C%EC%9B%8C%EC%B9%986%EC%82%AC%EC%9A%A9%EA%B8%B0/</link>
      <pubDate>Thu, 02 Nov 2023 11:37:54 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/%EA%B0%A4%EB%9F%AD%EC%8B%9C%EC%9B%8C%EC%B9%986%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid>
      <description>운동할때 심박계용도로 사용하기 위해 갤럭시 워치 6 40mm 를 사서 몇달간 사용후
오늘 초기화 하고 창고로 넣으면서 기록으로 남기기위한 글 입니다. 삼성문제인지 구글(wear os)문제인지는 모르지만 둘다 워치에는 전혀 관심 없다는 생각이 듭니다.
몇가지 재밌는?(쓰면서 혈압올리는) 기능 들이 있습니다.
기본(시계) 화면 에서는 버튼들이 아무런 기능/반응을 하지 않습니다.
슬립(aod) 상태에서는 버튼과 터치가 씹힙니다. 슬립을 종료 하는 역할을 하고 입력이 소비됩니다.
손목 돌려 켜기는 체감상 50%정도 실패 합니다. 일단 실패하면 다시 시도해도 또 실패 합니다.</description>
    </item>
    
    <item>
      <title>Ppusim</title>
      <link>https://kasworld.github.io/posts/ppusim/</link>
      <pubDate>Fri, 22 Sep 2023 15:37:15 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/ppusim/</guid>
      <description>세상 잉여로운 작업을 하고 있습니다.
https://github.com/kasworld/ppusim
rust로 할 만한 것이 별로 없다고 한 주제에 우습게도 딱 rust로 해볼 만한 것이 생각났습니다.
실용성은 전혀 없지만 재미로 만들어보긴 좋을 것 같아서 작업을 시작했습니니다.
예전 8bit 게임기나 오락실 게임에서 많이 쓰이던
타일 + 팔렛트 + 스프라이트 + 다중 배경 스크롤 기능의 PPU 를 현대의 CPU로 시뮬레이션 해보기 입니다.
자세한 내용은 위 github 링크에 써두었으니 관심있으신 분은 읽어보시면 됩니다.
아직 미구현 인 부분이 있긴 하지만 만들어진 것의 성능을 이야기하자면</description>
    </item>
    
    <item>
      <title>내가godot엔진을사용하는이유</title>
      <link>https://kasworld.github.io/posts/%EB%82%B4%EA%B0%80godot%EC%97%94%EC%A7%84%EC%9D%84%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EC%9D%B4%EC%9C%A0/</link>
      <pubDate>Fri, 15 Sep 2023 14:06:37 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/%EB%82%B4%EA%B0%80godot%EC%97%94%EC%A7%84%EC%9D%84%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EC%9D%B4%EC%9C%A0/</guid>
      <description>내가 godot 엔진을 사용하는 법(이유?) 물들어온 김에 godot 홍보하기 많은 8bit 키드 들은 공감할 것 같은데 apple 2로 처음 컴퓨터를 배운 나같은 사람은
&amp;ldquo;컴퓨터를 켜고,(basic으로) 프로그램을 작성하고, 실행해본다.&amp;rdquo; 라는 과정이 아주 당연한 느낌으로 남아 있다.
요즘 (windows) pc에서처럼 화면에 동그라미 하나 그리는 프로그램을 짜기 위해 해야 할 일이 (어쩌면 너무나도) 복잡해진 것이 귀찮고 때때로 어렵다고 느낀다.
사용할 언어를 고르고 에디터를 고르고 컴파일러를 고른 다음에 사용할 그래픽 라이이브러를 결정한다. 그리고 나서야 화면에 점하나를 찍는 프로그램작성을 시작해 볼 수 있다.</description>
    </item>
    
    <item>
      <title>Rust를써봤습니다</title>
      <link>https://kasworld.github.io/posts/rust%EB%A5%BC%EC%8D%A8%EB%B4%A4%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Fri, 08 Sep 2023 15:59:06 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/rust%EB%A5%BC%EC%8D%A8%EB%B4%A4%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>이번에 Rust를 잠깐(20여시간 문서읽고, 200-300라인 코딩) 써보고 느낀점들 Rust는 참 잘 만든 언어다.
( 표준 레포지토리인 crates.io 의 namespace 가 flat 한 것만 빼고 )
대신 꽤 무거운 언어라서 쓰기에 즐거운 언어는 아닌것 같다.
( 아니면 C++ 쓸래? 라고 물어보면 Rust가 선녀입니다. 라고 대답 하겠지만 )
prime 계산 프로그램을 만들어 성능 테스트를 go로 만들었던 것과 비교하니
go version : https://github.com/kasworld/primenum
rust version : https://github.com/kasworld/primecalc
(둘다 multi-thread버전이고 내가 할 수 있는 수준에서 최적화를 한 것들)</description>
    </item>
    
    <item>
      <title>블로그를이전해왔습니다</title>
      <link>https://kasworld.github.io/posts/%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC%EC%9D%B4%EC%A0%84%ED%95%B4%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 14 May 2023 16:35:16 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC%EC%9D%B4%EC%A0%84%ED%95%B4%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>별로 보는 사람도없고 글도 뜨문뜨문 올리지만 (구글에 주는 개인 정보량을 줄이려고) 구글블로그에서 이전해왔습니다.
https://kasworld.github.io/
static website engine 인 hugo를 사용했고
blogger(구글블로그) 를 hugo로 이전하기 위해 blogger-to-hugo 1.0.1 를 사용했는데
이 프로젝트가 좀 오래 되어 코드를 약간 수정하는 과정이 필요했습니다.
(홈페이지도 없어졌구요.) pypi로 설치하면 소스 코드도 설치되어 복사해서 수정해 사용했습니다.
기존 블로그는 좀 유지하다가 삭제 할 생각입니다.
수정한 blogger_to_hugo.py 파일</description>
    </item>
    
    <item>
      <title>구글에서 또 재밌는 프로그래밍 언어를 만들고 있다고 합니다.</title>
      <link>https://kasworld.github.io/posts/2022-07-22-%EA%B5%AC%EA%B8%80%EC%97%90%EC%84%9C%EB%98%90%EC%9E%AC%EB%B0%8C%EB%8A%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%96%B8%EC%96%B4%EB%A5%BC%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8B%A4%EA%B3%A0%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Fri, 22 Jul 2022 07:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2022-07-22-%EA%B5%AC%EA%B8%80%EC%97%90%EC%84%9C%EB%98%90%EC%9E%AC%EB%B0%8C%EB%8A%94%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%96%B8%EC%96%B4%EB%A5%BC%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8B%A4%EA%B3%A0%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
      <description>구글에서 또 재밌는 프로그래밍 언어를 만들고 있다고 합니다.
https://github.com/carbon-language/carbon-lang/tree/trunk/docs/design
C/C++ 과 상호 연결이 쉽게 되게 하는 것이 주 목적중 하나라고 하는데 Rust는 좋은 언어지만 C/C++ 상호 연동이 그리 편하지 않아서 새로 만든듯 합니다. 그래서인지 Rust의 syntax를 많이 가져온 듯한 부분이 보입니다. 덕분에 C/C++의 가독성을 떨어 트리는 주범중하나인 변수/인자의 type 선언 형태가 타입이름 변수이름 형태에서 var 변수이름: 타입이름 형태로 바뀌었습니다. (이거 아주 맘에 드는 군요. ) javascript -&amp;gt; dart python -&amp;gt; golang 에 이어서 C/C++ -&amp;gt; carbon 이 될지 기대 됩니다.</description>
    </item>
    
    <item>
      <title>파이널 판타지 15 스팀판 감상기 </title>
      <link>https://kasworld.github.io/posts/2022-07-11-%ED%8C%8C%EC%9D%B4%EB%84%90%ED%8C%90%ED%83%80%EC%A7%8015%EC%8A%A4%ED%8C%80%ED%8C%90%EA%B0%90%EC%83%81%EA%B8%B0/</link>
      <pubDate>Mon, 11 Jul 2022 07:39:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2022-07-11-%ED%8C%8C%EC%9D%B4%EB%84%90%ED%8C%90%ED%83%80%EC%A7%8015%EC%8A%A4%ED%8C%80%ED%8C%90%EA%B0%90%EC%83%81%EA%B8%B0/</guid>
      <description>디테일 하게 &amp;ldquo;못&amp;quot;만든 대작 (수작이나 명작이 아니라는 점 주의) (나름오픈월드같은)필드,낚시,(조작감 나쁜)운전,요리,비행?(있다곤 하는데 보진 못함)등 많은? 콘텐츠를 구현하기 위해 고생한 제작진이 안쓰러움.
중2병 기획진과 자뻑 PD가 만든 환장의 골라보 오글거리는 시작 화면 문구, 굳이 메뉴가 뜰때까지 시간을 끄는 타이틀 화면 애니메이션 (타이틀 화면 메뉴에 들어갔나 나올때 마다 타이틀 애니메이션을 봐야함) 등등 저혈압 치료에 좋다.
8장을 끝내고 9장을 진행하다 게임이 계속 멈춰서 지워 버렸지만 뒷 이야기가 이렇도록 궁굼하지 않은 RPG는 처음
지우고 나서도 생각날때마다 저혈압이 치료 되기에 기록으로 남기고 기억에서 지우기 위해 적음</description>
    </item>
    
    <item>
      <title>아마그래머 (amagrammer) </title>
      <link>https://kasworld.github.io/posts/2022-05-05-%EC%95%84%EB%A7%88%EA%B7%B8%EB%9E%98%EB%A8%B8amagrammer/</link>
      <pubDate>Thu, 05 May 2022 19:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2022-05-05-%EC%95%84%EB%A7%88%EA%B7%B8%EB%9E%98%EB%A8%B8amagrammer/</guid>
      <description>평소에 농담반 진담반으로 프로그래머는 언어(문법)의 전문가라서 프로(pro)-그래머(grammer - grammar) 인것이다. 라고 말하고 다녔는데.
프로와 아마추어의 차이는 실력이라기보다는 일에 임하는 마음 가짐(생업으로 하느냐 하는) 에 있다고 한다면
더이상 생업으로 프로그래밍을 하지 않는 (하지만 취미로는 계속하는) 은퇴한 프로그래머는 아마그래머(amagrammer) 라고 해야 하지 않을까 싶다.</description>
    </item>
    
    <item>
      <title>powershell 7.x vs powershell 5.x </title>
      <link>https://kasworld.github.io/posts/2020-12-25-powershell7xvspowershell5x/</link>
      <pubDate>Fri, 25 Dec 2020 15:45:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-12-25-powershell7xvspowershell5x/</guid>
      <description>방금 겪은 황당한(하지만 생각해보면 당연한 )일 build용으로 잘 실행되던 powershell script가 갑자기 문제를 일으킵니다.
결론만 말하면 linux, powershell 7.x에선 문제가 없는데 powershell 5.1에선
echo &amp;ldquo;package dataversion
const DataVersion = `&amp;quot;${Data_VERSION}`&amp;rdquo;
&amp;quot; &amp;gt; config/dataversion/dataversion_gen.go
식으로 파일을 생성하면 만들어진 파일이 build가 안됩니다.
이유를 찾아보니 powershell 5.x에서는 당연하게도 utf-8 이아닌 utf16le 파일을 생성하기 때문이고 golang은 당연히 입력으로 utf-8을 요구하니 컴파일 에러를 내는 거지요.
디렉토리 구분자로 \ 를 쓰는 것도 그렇고 표준 encoding으로 utf-16le 를 쓰는 것도 그렇고 이리저리 참 불편하게 하는 군요.</description>
    </item>
    
    <item>
      <title>250k packet/sec 달성 </title>
      <link>https://kasworld.github.io/posts/2020-12-04-250kpacketsec%EB%8B%AC%EC%84%B1/</link>
      <pubDate>Fri, 04 Dec 2020 14:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-12-04-250kpacketsec%EB%8B%AC%EC%84%B1/</guid>
      <description>이런 저런 오버헤드들을 좀 줄이고 성능위주로 설정해서 250k packet/sec 을 달성했습니다. 클라이언트 실행 인자 go run .\multiclient.go -ConnectToServer=localhost:8081 -Concurrent=100 -NetType=tcp -PacketIntervalMS=0 *main.MultiClientConfig main.MultiClientConfig ConnectToServer: string localhost:8081 NetType: string tcp PlayerNameBase: string MC_ Concurrent: int 100 AccountPool: int 0 AccountOverlap: int 0 LimitStartCount: int 0 LimitEndCount: int 0 PacketIntervalMS: int 0 exit status 2
서버 실행 결과 *main.ServerConfig main.ServerConfig TcpPort: string :8081 HttpPort: string :8080 HttpFolder: string www http server dir=www port=:8080 , http://localhost:8080/ tcp server port=:8081 Connection:0 Send:total[0 0.</description>
    </item>
    
    <item>
      <title>150000 (150k) packet/sec 를 처리하는 서버 </title>
      <link>https://kasworld.github.io/posts/2020-11-29-150000150kpacketsec%EB%A5%BC%EC%B2%98%EB%A6%AC%ED%95%98%EB%8A%94%EC%84%9C%EB%B2%84/</link>
      <pubDate>Sun, 29 Nov 2020 12:10:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-11-29-150000150kpacketsec%EB%A5%BC%EC%B2%98%EB%A6%AC%ED%95%98%EB%8A%94%EC%84%9C%EB%B2%84/</guid>
      <description>https://github.com/kasworld/massecho
를 조금 더 이리 저리 수정해 봤습니다. 각 connection이 보내는 초당 패킷수를 100으로 고정한 상태에서 connection 수를 1000 과 1500으로 바꿔가며 테스트 할때 marshaler로 표준 라이브러리의 json 이나 gob를 사용하면 AMD Ryzen 3700X (8c16t) 에서 간단한 echo protocol 을 사용해도 // Echo simple echo
type ReqEcho_data struct {
Msg string
}
// Echo simple echo
type RspEcho_data struct {
Msg string
}
98000 (98k) packet/sec정도가 한계입니다. 이를 messagepack (https://github.com/tinylib/msgp) 으로 바꾸면 처리량이 150000 (150k) packet/sec 정도로 증가합니다.</description>
    </item>
    
    <item>
      <title>go 언어로 만든 서버에서 64K connection 만들어 보기 </title>
      <link>https://kasworld.github.io/posts/2020-11-22-go%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%A0%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C64kconnection%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Sun, 22 Nov 2020 17:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-11-22-go%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%A0%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C64kconnection%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</guid>
      <description>재미삼아 만들어본 프로젝트입니다. https://github.com/kasworld/massecho
tcp연결이나 gorilla websocket을 사용해서 테스트 가능합니다. 테스트 전에 준비해야 할것이 대규모의 connection을 테스트 하기위해선 몇가지의 제한을 넘어야 합니다. 1. OS에서 열수있는 파일수의 제한 2. OS에서 client socket 제한 윈도우즈가 주 개발 환경인 상황에서 linux 테스트를 위해 설치한 WSL2 와 virtualbox의 ubuntu에서는 openfile 수의 제한을 올릴수가 없습니다. ( 아니면 방법을 못찾은 듯)
ubuntu를 설치한 노트북에선 같은 방법으로 잘되는 것으로 봐선 그냥 막아둔듯 합니다. linux에서 파일 수 제한을 올리는 방법은 /etc/security/limits.</description>
    </item>
    
    <item>
      <title>goguelike 의 캐릭터(activeobject) 형태를 바꿔 봤습니다. </title>
      <link>https://kasworld.github.io/posts/2020-10-04-goguelike%EC%9D%98%EC%BA%90%EB%A6%AD%ED%84%B0activeobject%ED%98%95%ED%83%9C%EB%A5%BC%EB%B0%94%EA%BF%94%EB%B4%A4%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 04 Oct 2020 12:46:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-10-04-goguelike%EC%9D%98%EC%BA%90%EB%A6%AD%ED%84%B0activeobject%ED%98%95%ED%83%9C%EB%A5%BC%EB%B0%94%EA%BF%94%EB%B4%A4%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
졸라맨 형태같기도 하고 &amp;ldquo;옷&amp;rdquo; 같기도 한 모양입니다만 이런모양이 된것은 제가 threejs 를 사용해서 만들수 있는 가장 사람 과 닮은 형태라서 그렇습니다. 그전에 알파벳 모양일때는 위에서 보기 좋게 누워 있었는데 이제는 그럴필용가 작아져서 누워 있는 것을 일으켜 세웠습니다.
모든 faction의 캐릭터의 모양이 다 같아져서 색만으로 구별해야 하게 되었지만 조금더 그럴 듯하게 보이게 되었습니다. 그 외에 내부적인 변경사항은 terrain script의 업데이트, towermaker의 업데이트, 모든 랜덤을 seed 기반으로 바꾸고 tower config에서 seed를 지정할 수 있게 만들었습니다.</description>
    </item>
    
    <item>
      <title>goguelike 에서  가칭 LightHouse 와 GateKeeper fieldobj 의 동작.</title>
      <link>https://kasworld.github.io/posts/2020-09-06-goguelike%EC%97%90%EC%84%9C%EA%B0%80%EC%B9%ADlighthouse%EC%99%80gatekeeperfieldobj%EC%9D%98%EB%8F%99%EC%9E%91/</link>
      <pubDate>Sun, 06 Sep 2020 16:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-09-06-goguelike%EC%97%90%EC%84%9C%EA%B0%80%EC%B9%ADlighthouse%EC%99%80gatekeeperfieldobj%EC%9D%98%EB%8F%99%EC%9E%91/</guid>
      <description>공격방식의 개선을 통해서 fieldobj 가 AO를 공격하는 것이 가능해졌습니다. 오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
추가로 lighthouse와 gatekeeper를 사용한 플로어의 플레이 테스트
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.</description>
    </item>
    
    <item>
      <title>goguelike 공격방식의 개선 </title>
      <link>https://kasworld.github.io/posts/2020-09-02-goguelike%EA%B3%B5%EA%B2%A9%EB%B0%A9%EC%8B%9D%EC%9D%98%EA%B0%9C%EC%84%A0/</link>
      <pubDate>Wed, 02 Sep 2020 12:55:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-09-02-goguelike%EA%B3%B5%EA%B2%A9%EB%B0%A9%EC%8B%9D%EC%9D%98%EA%B0%9C%EC%84%A0/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
기존에는 active object (캐릭터) 가 자신의 주변 8방향 타일을 향해서만 공격하는 형태였습니다.
이를 확장 개선하여 공격당하는 타일 (danger object)를 정의 하고 공격 행동이 이 DO 들을 만들어 DO manager에 추가 하는 형태로 개선 변경하였습니다.
이를 통해서 바로 옆 타일 하나를 공격하는 기본 공격 뿐아니라 근접 3타일을 공격하는 범위 공격 (wide attack ) , 한쪽 방향으로 3타일 까지 공격하는 장거리 공격( long attack) 의 추가가 가능해 졌습니다.</description>
    </item>
    
    <item>
      <title>goguelike 윈도우 포팅 </title>
      <link>https://kasworld.github.io/posts/2020-08-25-goguelike%EC%9C%88%EB%8F%84%EC%9A%B0%ED%8F%AC%ED%8C%85/</link>
      <pubDate>Tue, 25 Aug 2020 11:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-25-goguelike%EC%9C%88%EB%8F%84%EC%9A%B0%ED%8F%AC%ED%8C%85/</guid>
      <description>윈도우에서 서버실행, 클라이언트실행, 동영상 캡처까지 한 결과물.
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
윈도우를 설치하고 개발 환경까지 설정했으니 윈도우에서도 작동 할 수 있게 포팅작업을 진행했습니다.
ground 서버를 제외한 (towerserver의 프로세스 제어용으로 ps 명령어 실행 및 결과를 문자 파싱해 쓰는 관계로 포팅이 꽤 어려울 것 같습니다. )
towerserver, multiclient, textclient, wasmclient(이건 포팅이 필요없는 거죠.) 등이 작동합니다. ( 아마도 ^^) 컴파일 까진 확인 했는데 작동확인이 된것은 towerserver, wasmclient 입니다.</description>
    </item>
    
    <item>
      <title>대충 10여년간 리눅스를 주력으로 쓰다가 윈도우를 사용하니 보이는 점들 </title>
      <link>https://kasworld.github.io/posts/2020-08-24-%EB%8C%80%EC%B6%A910%EC%97%AC%EB%85%84%EA%B0%84%EB%A6%AC%EB%88%85%EC%8A%A4%EB%A5%BC%EC%A3%BC%EB%A0%A5%EC%9C%BC%EB%A1%9C%EC%93%B0%EB%8B%A4%EA%B0%80%EC%9C%88%EB%8F%84%EC%9A%B0%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%98%EB%8B%88%EB%B3%B4%EC%9D%B4%EB%8A%94%EC%A0%90%EB%93%A4/</link>
      <pubDate>Mon, 24 Aug 2020 17:59:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-24-%EB%8C%80%EC%B6%A910%EC%97%AC%EB%85%84%EA%B0%84%EB%A6%AC%EB%88%85%EC%8A%A4%EB%A5%BC%EC%A3%BC%EB%A0%A5%EC%9C%BC%EB%A1%9C%EC%93%B0%EB%8B%A4%EA%B0%80%EC%9C%88%EB%8F%84%EC%9A%B0%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%98%EB%8B%88%EB%B3%B4%EC%9D%B4%EB%8A%94%EC%A0%90%EB%93%A4/</guid>
      <description>(중간 중간 잠깐씩 윈도우를 사용한 적이 있긴 합니다. ^^)
잊어버리기 전에 기록용으로 적어봅니다. 윈도우 업데이트는 여전히 한숨만 나옵니다. 최근 리눅스를 쓰면서 업데이트로 답답한 적은 전혀 라고 할정도로 없었는데 윈도우는 아직도 이해할수 없을 정도로 업데이트 하는 시간이 오래 걸리는 군요. ( 리눅스도 가끔 이상한 업데이트로 시스템에 말썽을 일으키기는 하지만 업데이트 하는데 걸리는 시간 자체는 빠릅니다. 사용자를 하염없이 기다리게 하거나 리부팅을 몇번식 하게 하는 경우는 더더욱 없지요. )
이제는 사용하는 프로그램이 거의 동일해서 지금 리눅스를 쓰고 있는지 윈도우를 쓰고 있는지 잘 구별되지 않습니다.</description>
    </item>
    
    <item>
      <title>windows 10 wsl2에서 goguelike 빌드 성공. </title>
      <link>https://kasworld.github.io/posts/2020-08-21-windows10wsl2%EC%97%90%EC%84%9Cgoguelike%EB%B9%8C%EB%93%9C%EC%84%B1%EA%B3%B5/</link>
      <pubDate>Fri, 21 Aug 2020 12:53:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-21-windows10wsl2%EC%97%90%EC%84%9Cgoguelike%EB%B9%8C%EB%93%9C%EC%84%B1%EA%B3%B5/</guid>
      <description>약 5시간 걸려서 windows 10 설치, 각종 프로그램( chrome, gimp, blender, 7zip, vscode, libreoffice, notepad++, keepass2, git, wsl2!! , steam ^^ ) 설치후 wsl2에서 goguelike 를 build 하고 windows 의 chrome에서 접속 성공. </description>
    </item>
    
    <item>
      <title>네번째 windows 의 구매 </title>
      <link>https://kasworld.github.io/posts/2020-08-20-%EB%84%A4%EB%B2%88%EC%A7%B8windows%EC%9D%98%EA%B5%AC%EB%A7%A4/</link>
      <pubDate>Thu, 20 Aug 2020 22:04:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-20-%EB%84%A4%EB%B2%88%EC%A7%B8windows%EC%9D%98%EA%B5%AC%EB%A7%A4/</guid>
      <description>리눅스만 사용한다는 녀석이 왜 이리 윈도우가 많아? 라고 하시면 가족들이 쓰는 것이고
새로 구매한 windows 10은 &amp;ldquo;WSL2 를 써보고 싶어서&amp;rdquo; 라고 대답하겠습니다.
그리고 핑계김에 (게다가 새 그래픽 카드도 샀으니 ) flight simulator 도 돌려 보고 싶어서 입니다. ^^</description>
    </item>
    
    <item>
      <title>goguelike map script 업데이트 </title>
      <link>https://kasworld.github.io/posts/2020-08-19-goguelikemapscript%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</link>
      <pubDate>Wed, 19 Aug 2020 15:32:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-19-goguelikemapscript%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</guid>
      <description>map script를 업데이트 했습니다. tile을 사용한 draw 기능들이 추가 되었는데 선, 원, 사각형, 미로 등을 tile로 그릴수 있게 되어 본격적으로 tile을 사용해서 그림을 그릴수 있게 되었습니다.
기존에는 tile로는 못하고 resource tile로만 가능했었습니다.
위 그림에서 첫째, 둘째는 resource tile로 그린 것이고 , 셋째 는 tile로 그린 것입니다.
보기에 비슷해 보이지만 terrain ageing을 할경우 두 지형은 서로 다른 반응을 보입니다.
tile로 그린 경우는 변화된 지형에 tile로 그린 모습이 덧 씌워 지며 resource로 그린 경우는 각 resource의 풍화 로직에 따라 지형이 변화해 갑니다.</description>
    </item>
    
    <item>
      <title>goguelike의 시야범위 linesofsight 를 rework 했습니다. </title>
      <link>https://kasworld.github.io/posts/2020-08-17-goguelike%EC%9D%98%EC%8B%9C%EC%95%BC%EB%B2%94%EC%9C%84linesofsight%EB%A5%BCrework%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Mon, 17 Aug 2020 10:43:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-17-goguelike%EC%9D%98%EC%8B%9C%EC%95%BC%EB%B2%94%EC%9C%84linesofsight%EB%A5%BCrework%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>기존의 코드가 상당히 지저분한 관계로 언젠가는 고쳐야지하고 생각하다가 좋은 알고리즘?이 떠올라 주말에 작업했습니다. 간단히 끝날것으로 생각했었는데 1차 함수의 수식을 대충 생각하고 작업한 부분에 버그가 있어서 주말 내내 머리 싸매고 고민하게 만들었습니다.
고생은 했고 또 실행 결과는 똑같지만 코드가 아주 깨끗해저서 꽤 만족스럽습니다.
내용은 캐릭터의 보는 능력을 시선이 통과하는 타일들이 방해 하는 것 을 계산 해서 어디 까지 볼 수 있는가 하는 것으로 타일과 시선이 겹치는 길이 * 타일의 시선 방해도 를 시선이 지나가는 전체 타일에 적용합니다.</description>
    </item>
    
    <item>
      <title>goguelike 업데이트, 2d client 제거, 타일 투명도 적용등. </title>
      <link>https://kasworld.github.io/posts/2020-08-09-goguelike%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B82dclient%EC%A0%9C%EA%B1%B0%ED%83%80%EC%9D%BC%ED%88%AC%EB%AA%85%EB%8F%84%EC%A0%81%EC%9A%A9%EB%93%B1/</link>
      <pubDate>Sun, 09 Aug 2020 18:05:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-09-goguelike%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B82dclient%EC%A0%9C%EA%B1%B0%ED%83%80%EC%9D%BC%ED%88%AC%EB%AA%85%EB%8F%84%EC%A0%81%EC%9A%A9%EB%93%B1/</guid>
      <description>아래 동영상은 분명히 4K로 캡처했는데 업로드하니 2K 가 되는 군요.
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
3D client에만 적용 가능한 기능들이 있어서 ( condition float 는 실제로 공중으로 띄웁니다. ) 더이상 의미없는 2D client는 제거 해야 할것 같습니다. 그 외에는 tile에 투명도를 적용했습니다. webgl, three.js 에 unicode char 를 표시하는 것이 잘 안되어 ascii char로 바꾸었습니다.</description>
    </item>
    
    <item>
      <title>goguelike glclient에 2d client 기능의 대부분을 구현 했습니다. </title>
      <link>https://kasworld.github.io/posts/2020-08-07-goguelikeglclient%EC%97%902dclient%EA%B8%B0%EB%8A%A5%EC%9D%98%EB%8C%80%EB%B6%80%EB%B6%84%EC%9D%84%EA%B5%AC%ED%98%84%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Fri, 07 Aug 2020 12:34:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-08-07-goguelikeglclient%EC%97%902dclient%EA%B8%B0%EB%8A%A5%EC%9D%98%EB%8C%80%EB%B6%80%EB%B6%84%EC%9D%84%EA%B5%AC%ED%98%84%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>마지막으로 구현한 것이 중앙 상단에 나오는 공지? 메시지입니다. 그 외에 지형 스크립트를 자동으로 만들어 주는 towermaker를 강화해서 100층이나 1000층 짜리 타워를 만들수 있게 되었습니다. 1000층 짜리 타워를 실행하면 CPU도 RAM도 무지막지하게 사용하게 됩니다. 대충 50Gbyte정도의 램과 16개의 cpu를 거의 풀로 사용하더군요. 그리고 작업중인 기능? 으로 대 코로나 시대를 맞이하여? 컨디션과 fieldobj(trap) 에 전염병(Contagion) 을 추가 해보고 있습니다. 이런저런 수치 ( 전염성, 사망율, 자연 회복율) 를 조정해가며 이리 저리 실험해볼 생각입니다.</description>
    </item>
    
    <item>
      <title>goguelike  개발 진행 사항 </title>
      <link>https://kasworld.github.io/posts/2020-07-28-goguelike%EA%B0%9C%EB%B0%9C%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</link>
      <pubDate>Tue, 28 Jul 2020 16:35:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-07-28-goguelike%EA%B0%9C%EB%B0%9C%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
tile들이 모두 3D 로 만들어 지고 타일 들이 높이 맞게 Fieldobj 와 activeobj 들이 배치 및 이동합니다.
그 외에는 towermaker 가 대폭적으로 업데이트 되었습니다. 기존에 손으로 만들었던 starttower 같은 것을 더 쉽게 만들 수 있습니다.</description>
    </item>
    
    <item>
      <title>Arctic Code Vault Contributor</title>
      <link>https://kasworld.github.io/posts/2020-07-18-arcticcodevaultcontributor/</link>
      <pubDate>Sat, 18 Jul 2020 15:13:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-07-18-arcticcodevaultcontributor/</guid>
      <description>아침에 언제나 처럼 작업을 시작 하기 위해 github에 들어가 보니 Arctic Code Vault Contributor 라고 뱃지 가 달렸다는 알림이 왔더군요. 제가 작업한 레포지토리들중 몇개가 북극 어딘가 보존용 창고에 보관되게 되었다는데 어째 선정된 프로젝트들이 다 예전에 만든것들이고 그 품질도 (지금 기준에서 보면 ) 영 별로인 것들이라 기본 좋으면서도 흑역사가 박제 되는 것 같기도 하고 묘한 기분입니다. </description>
    </item>
    
    <item>
      <title>WebGL 버전 goguelike에 타일 애니메이션, 데미지 표현, 행동력 부족 표현 추가 </title>
      <link>https://kasworld.github.io/posts/2020-07-17-webgl%EB%B2%84%EC%A0%84goguelike%EC%97%90%ED%83%80%EC%9D%BC%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EB%8D%B0%EB%AF%B8%EC%A7%80%ED%91%9C%ED%98%84%ED%96%89%EB%8F%99%EB%A0%A5%EB%B6%80%EC%A1%B1%ED%91%9C%ED%98%84%EC%B6%94%EA%B0%80/</link>
      <pubDate>Fri, 17 Jul 2020 14:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-07-17-webgl%EB%B2%84%EC%A0%84goguelike%EC%97%90%ED%83%80%EC%9D%BC%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EB%8D%B0%EB%AF%B8%EC%A7%80%ED%91%9C%ED%98%84%ED%96%89%EB%8F%99%EB%A0%A5%EB%B6%80%EC%A1%B1%ED%91%9C%ED%98%84%EC%B6%94%EA%B0%80/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
개인적으로 가장 그럴듯한 층에서 동영상을 찍어보았습니다.
공격받아 피해를 입는 표현과 행동력 부족으로 행동을 못하는 턴의 표현이 추가 되었고
안개, 물, 마그마등이 시간에 따라 흐르는 표현이 추가 되었습니다.</description>
    </item>
    
    <item>
      <title>goguelike에 카메라 기울임 기능 추가 </title>
      <link>https://kasworld.github.io/posts/2020-07-12-goguelike%EC%97%90%EC%B9%B4%EB%A9%94%EB%9D%BC%EA%B8%B0%EC%9A%B8%EC%9E%84%EA%B8%B0%EB%8A%A5%EC%B6%94%EA%B0%80/</link>
      <pubDate>Sun, 12 Jul 2020 17:25:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-07-12-goguelike%EC%97%90%EC%B9%B4%EB%A9%94%EB%9D%BC%EA%B8%B0%EC%9A%B8%EC%9E%84%EA%B8%B0%EB%8A%A5%EC%B6%94%EA%B0%80/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
카메라 기울임과 줌 기능을 테스트한 동영상입니다.</description>
    </item>
    
    <item>
      <title>goguelike 쿼터 뷰 </title>
      <link>https://kasworld.github.io/posts/2020-07-08-goguelike%EC%BF%BC%ED%84%B0%EB%B7%B0/</link>
      <pubDate>Wed, 08 Jul 2020 15:39:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-07-08-goguelike%EC%BF%BC%ED%84%B0%EB%B7%B0/</guid>
      <description>3D tile 을 적용한 김에 카메라를 살짝 기울여 보았습니다. 확실히 입체감이 늘어나고 필드가 좀더 그럴듯 하게 되었습니다.
다만 가시 범위가 늘어나서 성능을 위해 보이는 부분만 object를 배치한 것이 티나는 군요.</description>
    </item>
    
    <item>
      <title>goguelike WebGL 클라이언트 작업 </title>
      <link>https://kasworld.github.io/posts/2020-06-29-goguelikewebgl%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%9E%91%EC%97%85/</link>
      <pubDate>Mon, 29 Jun 2020 15:56:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-06-29-goguelikewebgl%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%9E%91%EC%97%85/</guid>
      <description>캐릭터 (activeobj) item(CarryObj) 상점,계단,함정들(FieldObj) , 벽,문,창(Wall, Door, Window) 을 3D 화 했습니다.
미로 지형에서 가장 극적으로 보이기에 화면 캡처를 해봤습니다.</description>
    </item>
    
    <item>
      <title>goguelike 의 webgl client 작업</title>
      <link>https://kasworld.github.io/posts/2020-06-16-goguelike%EC%9D%98webglclient%EC%9E%91%EC%97%85/</link>
      <pubDate>Tue, 16 Jun 2020 15:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-06-16-goguelike%EC%9D%98webglclient%EC%9E%91%EC%97%85/</guid>
      <description>webgl 의 CanvasTexture 를 사용한 PlaneBufferGeometry 를 terrain표시용으로 사용하는 gl client 입니다. canvas 만 사용할때는 wrap around 되는 field의 표시를 위해 귀찮은 작업(계산) 을 해야 했는데 CanvasTexture 의 RepeatWrapping 과 repeat 기능을 사용하니 간단히 해결되는 군요. 역시 신기술이 좋은 겁니다. ㅠㅠ</description>
    </item>
    
    <item>
      <title>현실은 몇 turn/sec로 작동하고 있을까? </title>
      <link>https://kasworld.github.io/posts/2020-06-12-%ED%98%84%EC%8B%A4%EC%9D%80%EB%AA%87turnsec%EB%A1%9C%EC%9E%91%EB%8F%99%ED%95%98%EA%B3%A0%EC%9E%88%EC%9D%84%EA%B9%8C/</link>
      <pubDate>Fri, 12 Jun 2020 14:31:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-06-12-%ED%98%84%EC%8B%A4%EC%9D%80%EB%AA%87turnsec%EB%A1%9C%EC%9E%91%EB%8F%99%ED%95%98%EA%B3%A0%EC%9E%88%EC%9D%84%EA%B9%8C/</guid>
      <description>생각의 흐름대로 쓰는 글입니다. ^^
goguelike같은 실시간 턴제 게임을 만들다보면 turn/sec를 얼마로 하는 것이 적당할까? 하는 고민을 늘 하게됩니다.
그런데 우연히 위키에서 온도를 찾아 읽어보다가
절대 영도외에도 (이론상) 절대 최고온도가 존재 한다는 것을 알게 되었습니다. 플랑크 상수 에 의해서 정의되는 온도라기에 링크를 따라다니다 보니 플랑크 단위계 -&amp;gt; 플랑크 길이 -&amp;gt; 플랑크 시간 을 순서대로 읽다가
최소 길이, 최소 시간 이란 것이 정의 될 수 있다 는 것을 알게 되었습니다.
그리고 플랑크 시간 페이지의 마지막 문장을 읽고 글자 그대로 빵 터졌습니다.</description>
    </item>
    
    <item>
      <title>하나의 게임을 두종류의 클라이이언트로 vs 두종류의 게임을 하나의 클라이언트로 </title>
      <link>https://kasworld.github.io/posts/2020-05-28-%ED%95%98%EB%82%98%EC%9D%98%EA%B2%8C%EC%9E%84%EC%9D%84%EB%91%90%EC%A2%85%EB%A5%98%EC%9D%98%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A1%9Cvs%EB%91%90%EC%A2%85%EB%A5%98%EC%9D%98%EA%B2%8C%EC%9E%84%EC%9D%84%ED%95%98%EB%82%98%EC%9D%98%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A1%9C/</link>
      <pubDate>Thu, 28 May 2020 15:28:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-05-28-%ED%95%98%EB%82%98%EC%9D%98%EA%B2%8C%EC%9E%84%EC%9D%84%EB%91%90%EC%A2%85%EB%A5%98%EC%9D%98%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A1%9Cvs%EB%91%90%EC%A2%85%EB%A5%98%EC%9D%98%EA%B2%8C%EC%9E%84%EC%9D%84%ED%95%98%EB%82%98%EC%9D%98%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A1%9C/</guid>
      <description>gowasm2dgame vs gowasm3dgame의 이야깁니다.
gowasm2dgame 에는 두가지 버전(2d, 3d) 의 클라이이언트를 구현 하고
gowasm3dgame 에는 두 종류의 게임(2d stage, 3d stage)을 구현 해보았습니다.
두 프로젝트 모두 게임 로직은 서버의 stage에서 구현하고 있고 클라이언트는 viewer로만 작동하기 때문에 가능한 구조입니다.
현재는 사용자의 게임조작을 서버로 전달하는 부분이 빠저있지만 추가하는 것이 어렵진 않습니다.
gowasm2dgame 은 재미삼아 구현 한 것이고,
gowasm3dgame 은 장기적으로 stage기반의 online게임 프레임워크를 만들수 있지 않을까 하는 생각으로 작업중인 것입니다.
gowasm2dgame html canvas version client</description>
    </item>
    
    <item>
      <title>소수 구하기 프로그램을 만들어 성능테스트</title>
      <link>https://kasworld.github.io/posts/2020-05-19-%EC%86%8C%EC%88%98%EA%B5%AC%ED%95%98%EA%B8%B0%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84%EB%A7%8C%EB%93%A4%EC%96%B4%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Tue, 19 May 2020 15:53:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-05-19-%EC%86%8C%EC%88%98%EA%B5%AC%ED%95%98%EA%B8%B0%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84%EB%A7%8C%EB%93%A4%EC%96%B4%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <description>dos와 turbo-c 시절 부터의 취미인 소수 구하기 프로그램을 만들어 성능테스트 하기 입니다. 16bit 시절 부터 이런 저런 방법으로 소수구하기 프로그램을 짜고 시간측정을 해가며 옵티마이징하는 취미가 있었습니다. 새 컴퓨터 , 새 OS , 새 언어 , 새 cpu, 등이 생기면 항상 그 환경용 으로 작성해서 성능의 변화를 즐기고 있었는데 최근 몇년간은 intel의 삽질로 별다른 변화가 없어서 거의 잊고 있었습니다.
하지만 이번에 AMD 8코어 16 쓰레드 cpu와 새 램(ddr4) 이 생겼으니 테스트를 할 생각이 들어서 작업을 해봤습니다.</description>
    </item>
    
    <item>
      <title>gofieldwar 개발 일기 </title>
      <link>https://kasworld.github.io/posts/2020-05-02-gofieldwar%EA%B0%9C%EB%B0%9C%EC%9D%BC%EA%B8%B0/</link>
      <pubDate>Sat, 02 May 2020 15:32:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-05-02-gofieldwar%EA%B0%9C%EB%B0%9C%EC%9D%BC%EA%B8%B0/</guid>
      <description>색을 조정해서 시인성을 개선한 스크린 샷입니다.
3x3 의 외성과 1x1의 내성으로 진을 짜고 병력을 배치한 상태입니다.
본격적으로 서버에서 받은 정보로 클라이언트가 표시하게 되었습니다.
goguelike 와 같이 gofieldwar도 정해진 영역(field)이 무한 반복되는 형태 입니다. ( 한쪽으로 계속 가면 반대쪽끝으로 나오는 형태)
프로토콜을 정리하고 클라이언트에 UI을 붙일 준비를 하고 있습니다.</description>
    </item>
    
    <item>
      <title>테스트용으로 서비스 중이던 goguelike.iptime.org 서버를 내립니다. </title>
      <link>https://kasworld.github.io/posts/2020-05-02-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9%EC%9C%BC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4%EC%A4%91%EC%9D%B4%EB%8D%98goguelikeiptimeorg%EC%84%9C%EB%B2%84%EB%A5%BC%EB%82%B4%EB%A6%BD%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 02 May 2020 11:22:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-05-02-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9%EC%9C%BC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4%EC%A4%91%EC%9D%B4%EB%8D%98goguelikeiptimeorg%EC%84%9C%EB%B2%84%EB%A5%BC%EB%82%B4%EB%A6%BD%EB%8B%88%EB%8B%A4/</guid>
      <description>소스를 공개한 시점에서 서비스를 유지할 필요가 없다고 생각되어 서비스를 내렸습니다. 플레이 하고 싶으신 분은 https://github.com/kasworld/goguelike 에서 소스를 받아 빌드 해서 사용하시면 되겠습니다. goguelike의 개발이 완료되었거나 종료 되었다는 의미는 아닙니다. ^^
아마 다음에 여는 (테스트)서비스는 gofieldwar가 되지않을까 생각하고 있습니다.</description>
    </item>
    
    <item>
      <title>gofieldwar 프로토타이핑 방어진지</title>
      <link>https://kasworld.github.io/posts/2020-04-29-gofieldwar%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9D%B4%ED%95%91%EB%B0%A9%EC%96%B4%EC%A7%84%EC%A7%80/</link>
      <pubDate>Wed, 29 Apr 2020 11:42:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-04-29-gofieldwar%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9D%B4%ED%95%91%EB%B0%A9%EC%96%B4%EC%A7%84%EC%A7%80/</guid>
      <description>gofieldwar 프로토타입 작업을 진행중에
병력을 사용한 방어 진지 형태를 만들어보았습니다.
X 자 표시가 근거리 공격 , + 자 표시가 원거리 공격의 threaten area 입니다.
3종의 병력은 근거리 공격(바로 옆 셀) , 원거리 공격( 한칸 건너) , 공성(성벽공격) 으로 나누어 집니다.
4종의 자원으로 타운을 번영(levelup)시켜 병력을 뽑고 , 성벽과 성문 을 만들어 공격에 대비 합니다.
갈색네모가 성벽과 성문(성벽중에 일부가 다른색 열린문/닫힌문 ) 입니다.</description>
    </item>
    
    <item>
      <title>가칭 gofieldwar 작업을 시작했습니다.</title>
      <link>https://kasworld.github.io/posts/2020-04-15-%EA%B0%80%EC%B9%ADgofieldwar%EC%9E%91%EC%97%85%EC%9D%84%EC%8B%9C%EC%9E%91%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 15 Apr 2020 12:40:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-04-15-%EA%B0%80%EC%B9%ADgofieldwar%EC%9E%91%EC%97%85%EC%9D%84%EC%8B%9C%EC%9E%91%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>예전에 go-sdl로 만들다 치워둔 프로젝트로 goguelike 가 어느정도 정리 되면 이어서 작업할 생각이었던 프로젝트 입니다.
일단은 MMO RTS 로 생각하고 있습니다만 어떻게 바뀔지는 모르겠습니다.
어쩌면 RTS 라기보다는 땅따먹기 에 가까울 것 같지만 그것도 RTS 의 일종이라고 생각합니다. ^^
goguelike가 완료 되거나 종료 된것 은 아니고 한가지만 하면 지겨우니 기분 전환 삼아 다른 프로젝트도 병행 하는 것입니다.
비슷한 이유로 만들어진것이 gowasm3dgame 이나 gowasm2dgame 입니다.</description>
    </item>
    
    <item>
      <title>6년 가까이 작업해온 goguelike 의 소스 코드를 공개 합니다. </title>
      <link>https://kasworld.github.io/posts/2020-04-08-6%EB%85%84%EA%B0%80%EA%B9%8C%EC%9D%B4%EC%9E%91%EC%97%85%ED%95%B4%EC%98%A8goguelike%EC%9D%98%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C%EB%A5%BC%EA%B3%B5%EA%B0%9C%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 08 Apr 2020 12:54:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-04-08-6%EB%85%84%EA%B0%80%EA%B9%8C%EC%9D%B4%EC%9E%91%EC%97%85%ED%95%B4%EC%98%A8goguelike%EC%9D%98%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C%EB%A5%BC%EA%B3%B5%EA%B0%9C%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
      <description>소스 코드와 문서는 https://github.com/kasworld/goguelike 에 있습니다.
라이센스는 Apache-2.0 으로 했으니 편하게 쓰시면 될 것 같습니다.
게임플레이 URL (play URL) http://goguelike.iptime.org/
( OS 상관없이 web socket, webassembly, unicode 를 지원하는 브라우져면 됩니다. )
실행가능 서버 다운 (download binary) : linux(debian,ubuntu,mint) 용 http://goguelike.iptime.org/download.zip
설치는 설치문서에 적어 두었습니다. https://github.com/kasworld/goguelike/blob/master/INSTALL.md
레포지토리를 공개로 전환하고 설치 테스트를 해보니 의존성 쪽이 이상해서 golang의 module, vendor 를 사용하도록 수정하였습니다. 비공개 버전 goguelike2의 마지막 상태는 5504 commit으로 종료 되었습니다. 기존 작업을 두고 새로 프로젝트를 만들어 옮긴 이유는 이전 코드들이 보여줄만 하지 못하다는 것도 있지만, 누적된 commit이 많아 크기때문에 다운 받는 시간이 길어 진다는 이유도 있습니다.</description>
    </item>
    
    <item>
      <title>roguelike를 MMO로 만들면</title>
      <link>https://kasworld.github.io/posts/2020-03-28-roguelike%EB%A5%BCmmo%EB%A1%9C%EB%A7%8C%EB%93%A4%EB%A9%B4/</link>
      <pubDate>Sat, 28 Mar 2020 14:47:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-03-28-roguelike%EB%A5%BCmmo%EB%A1%9C%EB%A7%8C%EB%93%A4%EB%A9%B4/</guid>
      <description>http://goguelike.iptime.org/
에서 플레이 할 수 있는 두종류의 서버(tower) 플레이 동영상 roguelike tower
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
goguelike tower
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
roguelike 게임들은 턴 기반으로 행동이 이루어 집니다.
내가 행동하기 전까지는 게임이 멈춰서서 기다려 주는 거지요.
그런데 이걸 MMO로 만드려고 하면 모든 플레이어가 행동을 선택하기 전까지 모든 플레이어가 기다려야 한다는 문제가 발생합니다.
그래서 어쩔 수 없이 또 당연히 실시간 턴제가 되었습니다.</description>
    </item>
    
    <item>
      <title>help, 툴팁, 인풋렉, 게임 노티의 개선 </title>
      <link>https://kasworld.github.io/posts/2020-03-17-help%ED%88%B4%ED%8C%81%EC%9D%B8%ED%92%8B%EB%A0%89%EA%B2%8C%EC%9E%84%EB%85%B8%ED%8B%B0%EC%9D%98%EA%B0%9C%EC%84%A0/</link>
      <pubDate>Tue, 17 Mar 2020 13:20:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-03-17-help%ED%88%B4%ED%8C%81%EC%9D%B8%ED%92%8B%EB%A0%89%EA%B2%8C%EC%9E%84%EB%85%B8%ED%8B%B0%EC%9D%98%EA%B0%9C%EC%84%A0/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
goguelike는 서버기반으로 만들어진 게임이고, 클라이언트는 사용자의 입력을 서버로 전달하는 일과 서버가 보내준 시야를 표시하는 일만 합니다.
그로인해서 어쩔 수 없이 사용자 입력과 화면 표시사이에는 시간 차가 발생하게되는데, 그동안에는 한턴당 한번의 사용자 입력만 서버로 보내도록 하고 있었습니다. (서버와 네트웍의 부담을 줄이기 위해서 입니다. )
이를 사용자의 입력이 발생( 정확히는 바뀔때)할때 마다 서버로 보내도록 바꾸었습니다. 서버는 새 턴이 시작하는 시점까지 들어온 사용자 입력중 마지막 입력만을 사용해 다음 턴 사용자의 행동을 결정합니다.</description>
    </item>
    
    <item>
      <title>emoji 를 사용할때 줄간격이 이상해 지는 문제. </title>
      <link>https://kasworld.github.io/posts/2020-03-10-emoji%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C%EC%A4%84%EA%B0%84%EA%B2%A9%EC%9D%B4%EC%9D%B4%EC%83%81%ED%95%B4%EC%A7%80%EB%8A%94%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Tue, 10 Mar 2020 16:12:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-03-10-emoji%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C%EC%A4%84%EA%B0%84%EA%B2%A9%EC%9D%B4%EC%9D%B4%EC%83%81%ED%95%B4%EC%A7%80%EB%8A%94%EB%AC%B8%EC%A0%9C/</guid>
      <description>유니코드 이모지를 아이템 표시용으로 사용하게 되면서 보기 편해져서 그럼 문자 정보 표시에도 적용해 봤습니다.
확실히 그림(글자) 가 표시되니 보기 편해지긴 합니다만 이상하게 줄간격이 들쑥 날쑥 해집니다.
자세히 살펴보면 이모지가 표시된 줄들이 줄간격이 넓어 지는군요.
그리고 또 자세히 살펴보면 한글이 표시된 줄들도 살짝 줄간격이 이상해 지는 것을 알수 있습니다.
일단은 이모지표시가 있는게 보기 좋아서( 줄간은 들쑥날쑥하지만 ) 그대로 두긴 했습니다.</description>
    </item>
    
    <item>
      <title>새 타일 텍스처 적용, 유니코드 타일 , 추가된 함정들 </title>
      <link>https://kasworld.github.io/posts/2020-03-05-%EC%83%88%ED%83%80%EC%9D%BC%ED%85%8D%EC%8A%A4%EC%B2%98%EC%A0%81%EC%9A%A9%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C%ED%83%80%EC%9D%BC%EC%B6%94%EA%B0%80%EB%90%9C%ED%95%A8%EC%A0%95%EB%93%A4/</link>
      <pubDate>Thu, 05 Mar 2020 12:22:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-03-05-%EC%83%88%ED%83%80%EC%9D%BC%ED%85%8D%EC%8A%A4%EC%B2%98%EC%A0%81%EC%9A%A9%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C%ED%83%80%EC%9D%BC%EC%B6%94%EA%B0%80%EB%90%9C%ED%95%A8%EC%A0%95%EB%93%A4/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
이상하게 4k video 를 캡처해서 youtube에 올려도 fhd로만 만들어 주기에 애초에 fhd 60프레임으로 캡처했습니다.
기존에 있던 어딘가에서 주워온 타일 텍스처를 버리고 GIMP로 새로 만든 (브러시를 사용해서) 타일 텍스처로 교체 했습니다.
최근 추가된 함정들의 효과도 포함되었으며
아이템 타일들을 기존의 ASCII 기반 타일에서 unicode emoji 기반 타일로 교체 했습니다.
🔪 Weapon ⛨ Shield 👑 Helmet 👕 Armor 🧤 Gauntlet 👢 Footwear 💍 Ring 🎀 Amulet 🍾 Potion 📜 Scroll 이런게 되니 좋군요.</description>
    </item>
    
    <item>
      <title>새 기계의 성능테스트 의 기록 </title>
      <link>https://kasworld.github.io/posts/2020-02-29-%EC%83%88%EA%B8%B0%EA%B3%84%EC%9D%98%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98%EA%B8%B0%EB%A1%9D/</link>
      <pubDate>Sat, 29 Feb 2020 15:33:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-02-29-%EC%83%88%EA%B8%B0%EA%B3%84%EC%9D%98%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98%EA%B8%B0%EB%A1%9D/</guid>
      <description>새 컴퓨터가 준비 되었으니 당연히 성능테스트를 진행 해봤습니다.
사양은 전에 쓴대로 AMD 라이젠 7 3700X + X570 보드+ 128GB ram 입니다.
goguelike tower(게임) 서버와 다중 접속 테스트용 multiclient 를 사용해서
1000 클라이언트(connection)을 테스트 해보니 전혀 부하가 걸리지 않아서
10000 클라이언트를 걸어 보았습니다. 바로 open file 부족 에러가 나더군요. 까먹고 있던 linux의 서버 설정들을 해주었습니다.
/etc/security/limits.conf 파일에 * soft nofile 999999 * hard nofile 999999 * soft core unlimited * hard core unlimited</description>
    </item>
    
    <item>
      <title>데스크탑 업그레이드 AMD 라이젠 7 3700X &#43; X570 보드&#43; 128GB ram </title>
      <link>https://kasworld.github.io/posts/2020-02-28-%EB%8D%B0%EC%8A%A4%ED%81%AC%ED%83%91%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9Camd%EB%9D%BC%EC%9D%B4%EC%A0%A073700xx570%EB%B3%B4%EB%93%9C128gbram/</link>
      <pubDate>Fri, 28 Feb 2020 10:17:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-02-28-%EB%8D%B0%EC%8A%A4%ED%81%AC%ED%83%91%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9Camd%EB%9D%BC%EC%9D%B4%EC%A0%A073700xx570%EB%B3%B4%EB%93%9C128gbram/</guid>
      <description>요즘엔 노트북도 데스크탑못지 않게 빠르니 앞으로는 데스크탑은 사지 않고 노트북만 쓰겠어! 라고 생각했던 적이 저에게도 있었습니다. ^^;
2년 반 정도 잘 사용해온 한성 노트북이 goguelike 플레이를 녹화 하는데 버벅이더군요.
인텔 i7-7700HQ (4코어 8쓰레드) cpu 에 24GB 램 1T nvme 디스크 로는 모자란가? 하고 호시탐탐 업그레이드를 위한 조사를 몇달간! 진행했습니다.
업그레이드를 하면 적어도 2배는 빨라져야한다. 라는 기준을 세우고 검색을 해봤으나 현재 노트북에서는 극도로 많은 비용( 300만원 이상 ) 을 지불 하기 전에는 2배성능의 기계를 살수 없다는 것을 알았습니다.</description>
    </item>
    
    <item>
      <title>프로그래밍에서 가장? 어렵다는 이름 짓기 </title>
      <link>https://kasworld.github.io/posts/2020-02-18-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%97%90%EC%84%9C%EA%B0%80%EC%9E%A5%EC%96%B4%EB%A0%B5%EB%8B%A4%EB%8A%94%EC%9D%B4%EB%A6%84%EC%A7%93%EA%B8%B0/</link>
      <pubDate>Tue, 18 Feb 2020 14:43:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-02-18-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%97%90%EC%84%9C%EA%B0%80%EC%9E%A5%EC%96%B4%EB%A0%B5%EB%8B%A4%EB%8A%94%EC%9D%B4%EB%A6%84%EC%A7%93%EA%B8%B0/</guid>
      <description>요즘 goguelike에 상태이상을 새로 추가하기 위한 작업을 하고 있습니다.
예를 들면 이런 것들이지요. Blind ,Poisoned ,Invisible ,Weaken ,Slow ,Float , Hallucinate ,Greasy ,Sleep ,Confused 눈멀고 독걸리고 약화되고 느려지고 공중에 떠오르고 , 환각을 보고, 미끄러 떨어 트리고 , 졸리고 , 혼란되고, 등입니다.
이들을 아우르는 용어 ( 타입 이름 ) 을 정하느라 고민을 하고 있었습니다.
보통 상태 라고 하면 state 나 status 등을 자주 사용하곤 합니다만, 뭔가 딱 맞는 느낌이 안드는 거지요.</description>
    </item>
    
    <item>
      <title>goguelike 5000 commit 기념 </title>
      <link>https://kasworld.github.io/posts/2020-01-18-goguelike5000commit%EA%B8%B0%EB%85%90/</link>
      <pubDate>Sat, 18 Jan 2020 16:10:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-01-18-goguelike5000commit%EA%B8%B0%EB%85%90/</guid>
      <description>2014년 ( 블로그 기준 ) 시작한 프로젝트가 드디어 5000 commit을 달성했기에 기록합니다. ^^
첫 포스트 https://kasw.blogspot.com/2014/08/blog-post.html</description>
    </item>
    
    <item>
      <title>2020년 현재 goguelike의 상태 정리 </title>
      <link>https://kasworld.github.io/posts/2020-01-06-2020%EB%85%84%ED%98%84%EC%9E%ACgoguelike%EC%9D%98%EC%83%81%ED%83%9C%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Mon, 06 Jan 2020 11:21:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2020-01-06-2020%EB%85%84%ED%98%84%EC%9E%ACgoguelike%EC%9D%98%EC%83%81%ED%83%9C%EC%A0%95%EB%A6%AC/</guid>
      <description>goguelike - mmo-roguelike golang, websocket, webassembly, htmlcanvas (가능한한) 혼자서 만드는 MMO 서버 관리 서버 ( ground server )
다중 서버 지원
서버는 linux에서 golang으로 개발/실행
클라이언트는 golang으로 webassembly 를 생성
100% 서버 기반 클라이언트는 viewer , 사용자 입력을 서버로 전달 하는 역할
websocket을 사용 연결 유지형 클라이언트
클라이언트를 통한 핵킹/치트 가능성을 원천 봉쇄
클라이언트는 캐릭터의 현재 위치기준으로 시야내의 지형정보만을 받는다. ( 맵핵의 원천 봉쇄)
클라이언트 설치 불필요
webassembly/html5 canvas를 지원하는 web browser 라면 플랫폼 불문하고 플레이 가능</description>
    </item>
    
    <item>
      <title>그저 3d 공간에 공들이 돌아다닐 뿐인 프로젝트</title>
      <link>https://kasworld.github.io/posts/2019-12-15-%EA%B7%B8%EC%A0%803d%EA%B3%B5%EA%B0%84%EC%97%90%EA%B3%B5%EB%93%A4%EC%9D%B4%EB%8F%8C%EC%95%84%EB%8B%A4%EB%8B%90%EB%BF%90%EC%9D%B8%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</link>
      <pubDate>Sun, 15 Dec 2019 14:45:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-12-15-%EA%B7%B8%EC%A0%803d%EA%B3%B5%EA%B0%84%EC%97%90%EA%B3%B5%EB%93%A4%EC%9D%B4%EB%8F%8C%EC%95%84%EB%8B%A4%EB%8B%90%EB%BF%90%EC%9D%B8%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</guid>
      <description>https://github.com/kasworld/gowasm3dgame
꽤 예전에 서버 기반 게임 프레임웍 으로 만들었던 go4game을 remake 한 프로젝트 입니다.
서버 기반 게임 제작을 위한 프레임웍/라이브러리 들인
genprotocol 서버 클라이언트가 사용할 프로토콜 생성, 관리
argdefault : config와 command line arguments
prettystring : struct 의 string 화 / admin web , debug용
genenum : enum 의 생성, 관리
log : 전용 log package의 생성, 사용
signalhandle : signal을 관리해서 프로그램의 linux 서비스화, start,stop,forcestart,
들을 사용해서 만들어 봤습니다.</description>
    </item>
    
    <item>
      <title>go 언어로 만든 배경이 있는 시계/달력 </title>
      <link>https://kasworld.github.io/posts/2019-12-06-go%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%A0%EB%B0%B0%EA%B2%BD%EC%9D%B4%EC%9E%88%EB%8A%94%EC%8B%9C%EA%B3%84%EB%8B%AC%EB%A0%A5/</link>
      <pubDate>Fri, 06 Dec 2019 14:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-12-06-go%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%A0%EB%B0%B0%EA%B2%BD%EC%9D%B4%EC%9E%88%EB%8A%94%EC%8B%9C%EA%B3%84%EB%8B%AC%EB%A0%A5/</guid>
      <description>https://github.com/kasworld/wasmclockcal
go언어의 webassembly 생성 기능을 사용해서 만든 시계/달력 입니다.
build.sh을 실행하면
파일을 http로 서비스 해줄 dir2http 와 실제 index.html을 통해 로딩되어 시계/달력을 표시해줄 wasmclock.wasm 파일이 생성됩니다.
wasm_exec.js 은 wasm을 로딩해서 실행하는 데 사용 됩니다. go를 설치하면 /usr/local/go/misc/wasm 폴더에 설치되어 있습니다. (linux 의 경우 )
dir2http를 실행하면 접속할 클라이언트 url을 보여 줍니다.
dir2http dir=. port=:8080 http://localhost:8080/
open bgclock http://localhost:8080/?bgimg=image open youtube clock http://localhost:8080/?mvid=youtubeid
클라이언트 접속 URL 에
bgimg=이미지이름(url) 을 주면 배경그림이 설정되고</description>
    </item>
    
    <item>
      <title>wxgame2의 go 언어 포팅 gowasm2dgame </title>
      <link>https://kasworld.github.io/posts/2019-12-05-wxgame2%EC%9D%98go%EC%96%B8%EC%96%B4%ED%8F%AC%ED%8C%85gowasm2dgame/</link>
      <pubDate>Thu, 05 Dec 2019 10:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-12-05-wxgame2%EC%9D%98go%EC%96%B8%EC%96%B4%ED%8F%AC%ED%8C%85gowasm2dgame/</guid>
      <description>https://github.com/kasworld/gowasm2dgame
python 2.x 와 wxpython tcp connection 으로 만들었던 wxgame2 를
golang, websocket, wasm 으로 포팅(이라기보단 리메이크)하는 프로젝트 입니다.
python2가 지원이 종료된다니 겸사 겸사 이기도 합니다. (python3로 포팅할 계획은 없습니다.)
goguelike를 만들면서 정리한 go언어 서버 제작 용 라이브러리(프레임웍) 의 총정리 예제이기도 합니다.
중요한 역할을 하는 것들을 정리해보면
genprotocol 서버 클라이언트가 사용할 프로토콜 생성, 관리
argdefault : config와 command line arguments
prettystring : struct 의 string 화 / admin web , debug용</description>
    </item>
    
    <item>
      <title>golang (네트웍) 프로토콜 생성기 </title>
      <link>https://kasworld.github.io/posts/2019-10-09-golang%EB%84%A4%ED%8A%B8%EC%9B%8D%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%83%9D%EC%84%B1%EA%B8%B0/</link>
      <pubDate>Wed, 09 Oct 2019 12:28:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-10-09-golang%EB%84%A4%ED%8A%B8%EC%9B%8D%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%83%9D%EC%84%B1%EA%B8%B0/</guid>
      <description>https://github.com/kasworld/genprotocol
genprotocol - protocol 기반 코드 생성 ( goguelike 프로젝트를 하면서 만들어진 ) 네트웍 등에서 사용하기 위한 protocol 을 작성하는데 필요한 반복적 이고 기계적인 코드들을 자동으로 생성 해주는 프로그램 입니다. https://github.com/kasworld/wasmwebsocket 을 보면 예제를 볼 수 있습니다. 작성 이유는 하나의 프로젝트에서 여러종의 protocol 을 사용할 일이 생겨서 반복된 코드를 작성하다 보니 만들게 되었습니다. goguelike 를 예로 들면 game client - tower server tower server - ground server 의 2종의 protocol이 필요하고 사실상 비슷한데 조금 다른 코드들이 서로 구별 되어 쓰입니다.</description>
    </item>
    
    <item>
      <title>golang 과 golang wasm 사이에 websocket으로 통신하기. </title>
      <link>https://kasworld.github.io/posts/2019-09-09-golang%EA%B3%BCgolangwasm%EC%82%AC%EC%9D%B4%EC%97%90websocket%EC%9C%BC%EB%A1%9C%ED%86%B5%EC%8B%A0%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 09 Sep 2019 18:05:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-09-09-golang%EA%B3%BCgolangwasm%EC%82%AC%EC%9D%B4%EC%97%90websocket%EC%9C%BC%EB%A1%9C%ED%86%B5%EC%8B%A0%ED%95%98%EA%B8%B0/</guid>
      <description>(가끔은 살아있음을 알려줘야 하기에. ) goguelike2의 gopherjs webclient 를 go언에에서 (아직 EXPERIMENTAL 이라고 하지만) 정식으로 지원 하기 시작한 Webassembly 로 포팅하다가 나온 부산 물 입니다.
( 잘 안되서 web socket 관련 코드만 뜯어내서 작동 테스트를 하기 위해 만든 코드들 )
기본적으로 golang websocket server 서버가 정상 작동 하는 지는 테스트 하기 위한 golang websocket client 그리고 주 목적인 golang wasm web client 로 구성 되어 있습니다.
테스트 용으로 뚝딱 뚝딱 만든거라 허접한 부분들도 많지만 일단 읽어보고 카피해 쓸만큼은 정리했다고 생각합니다.</description>
    </item>
    
    <item>
      <title>갤럭시 S 10&#43; 용 Dex/미러링 어댑터? 허브 ? 구입 </title>
      <link>https://kasworld.github.io/posts/2019-05-10-%EA%B0%A4%EB%9F%AD%EC%8B%9Cs10%EC%9A%A9dex%EB%AF%B8%EB%9F%AC%EB%A7%81%EC%96%B4%EB%8C%91%ED%84%B0%ED%97%88%EB%B8%8C%EA%B5%AC%EC%9E%85/</link>
      <pubDate>Fri, 10 May 2019 19:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-05-10-%EA%B0%A4%EB%9F%AD%EC%8B%9Cs10%EC%9A%A9dex%EB%AF%B8%EB%9F%AC%EB%A7%81%EC%96%B4%EB%8C%91%ED%84%B0%ED%97%88%EB%B8%8C%EA%B5%AC%EC%9E%85/</guid>
      <description>올해 초에 약 3년간 쓰던 갤럭시 s7 edge를 (업데이트가 종료 되었다는 핑계로 ) 사용종료 하고, S 10+을 (사전예약으로!!!) 구입했습니다.
s7 은 낀 세대라 모니터 연결이 불가능한데 s8 부터는 dex 라는 것을 지원해서 유선으로 모니터를 연결할수 있다는 것을 알고 있었기에 S10+을 사면서 dex란 것을 사용해 봐야겠다고 생각하고 있었습니다.
간단히 조사해 보니 S10+ 에서는 그냥 USB type C to HDMI 케이블만 연결하면 dex를 사용할수 있다고 ( 이전 모델들도 파이 업데이트 하면 가능한듯 ) 해서 고민이 시작 되었습니다.</description>
    </item>
    
    <item>
      <title>goguelike 2를 개발하면서 만들어진 라이브러리들의 일부를  공개/업데이트 합니다. </title>
      <link>https://kasworld.github.io/posts/2019-05-08-goguelike2%EB%A5%BC%EA%B0%9C%EB%B0%9C%ED%95%98%EB%A9%B4%EC%84%9C%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%84%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%93%A4%EC%9D%98%EC%9D%BC%EB%B6%80%EB%A5%BC%EA%B3%B5%EA%B0%9C%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 08 May 2019 11:12:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-05-08-goguelike2%EB%A5%BC%EA%B0%9C%EB%B0%9C%ED%95%98%EB%A9%B4%EC%84%9C%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%84%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%93%A4%EC%9D%98%EC%9D%BC%EB%B6%80%EB%A5%BC%EA%B3%B5%EA%B0%9C%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
      <description>제 깃허브 https://github.com/kasworld?tab=repositories 에 올리고 있습니다.
기존에 공개한 라이브러리의 업데이트도 있고 새로 공개한 것들도 있습니다.
의존성이 적은 것들 위주로 코드를 좀 정리해서 올리고 있습니다.
설명이 거의 없는 것들이 많은데 설명이 필요 없을 정도로 간단한 것들도 많고 아니면 테스트 코드로 사용 법을 알수 있는 코드들도 있습니다.
그 이상의 설명이 필요하다 싶은 것들은 기분 내키는 대로 이 블로그에 간단히 포스팅 하도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>스카이디지탈 nkey bt61 led 해킹 시도 </title>
      <link>https://kasworld.github.io/posts/2019-05-05-%EC%8A%A4%EC%B9%B4%EC%9D%B4%EB%94%94%EC%A7%80%ED%83%88nkeybt61led%ED%95%B4%ED%82%B9%EC%8B%9C%EB%8F%84/</link>
      <pubDate>Sun, 05 May 2019 16:45:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2019-05-05-%EC%8A%A4%EC%B9%B4%EC%9D%B4%EB%94%94%EC%A7%80%ED%83%88nkeybt61led%ED%95%B4%ED%82%B9%EC%8B%9C%EB%8F%84/</guid>
      <description>2년 전 구입한 (2017년 2월 )
지금은 단종된 블루투스 키보드 입니다. https://kasw.blogspot.com/2017/02/blog-post.html
사진의 아래쪽 하얀 키킵의 키보드 이뻐서 샀는데 키 배치가 아주 이상해서 ( 주변 프로그래머 들에게 이야기 했더니 불량 아니냐고, 기획이 버그라고 할정도. )
봉인 해두고 있었습니다. &amp;ldquo;어쩌면 펌웨어 업데이트를 해줄지도 몰라&amp;quot;라는 헛된 희망을 품고 있었습니다. 시간이 흘러 찾아보니 새 펌웨어를 적용한 키보드가 나왔고, 또 어느새 단종되어 버렸습니다. 당연히 기존 키보드의 업데이트는 없었지요. ( 나쁜 놈들 ) 그래서 버릴까 하다가 재미삼아 뜯어 보았습니다.</description>
    </item>
    
    <item>
      <title>갤럭시 s7e 무선랜 문제 해결 </title>
      <link>https://kasworld.github.io/posts/2018-10-28-%EA%B0%A4%EB%9F%AD%EC%8B%9Cs7e%EB%AC%B4%EC%84%A0%EB%9E%9C%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0/</link>
      <pubDate>Sun, 28 Oct 2018 14:30:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-10-28-%EA%B0%A4%EB%9F%AD%EC%8B%9Cs7e%EB%AC%B4%EC%84%A0%EB%9E%9C%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0/</guid>
      <description>이전에 쓴 글 갤럭시 s7e 오래오 업데이트후 생긴 이상증상들
중 하나의 증상의 원인? 을 찾아서 기록합니다. 오레오 업데이트후 wifi 최고 접속 속도가 866Mbps 에서 433Mbps으로 저하된 증상 ( 그와중에도 노트북은 866Mbps으로 잘 접속되는 상황) 의 해결인데 방법은 공유기의 MU-MIMO beamforming를 끄는 것이었습니다. ( 따라서 어쩌면 오레오 업데이트와 무관한 이슈였을지도 모릅니다. 제가 공유기 설정을 바꾼것과 시점이 비슷할수도 있으니 )
MU-MIMO beamforming을 켜는 것이 속도/효율이 더 좋아지기 위한 신기술이라고 알고 있기에 켜두고 있었는데 역효과가 나는 경우도 생기는 것 같습니다.</description>
    </item>
    
    <item>
      <title>golang gopherjs로 만든 시계와 달력 </title>
      <link>https://kasworld.github.io/posts/2018-10-16-golanggopherjs%EB%A1%9C%EB%A7%8C%EB%93%A0%EC%8B%9C%EA%B3%84%EC%99%80%EB%8B%AC%EB%A0%A5/</link>
      <pubDate>Tue, 16 Oct 2018 09:59:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-10-16-golanggopherjs%EB%A1%9C%EB%A7%8C%EB%93%A0%EC%8B%9C%EA%B3%84%EC%99%80%EB%8B%AC%EB%A0%A5/</guid>
      <description>goguelike 의 webclient를 만들면서 부산물?로 만들어진 시계 와 달력입니다.
코드를 살짝 정리해서 github에 올려 두었습니다. https://github.com/kasworld/gopherjsclockcal
새로운 개발 환경(언어,IDE, OS, GUI )을 배울때 좋은 연습문제중하나가 그 환경에서 작동하는 시계와 달력을 만들어보는 것이라고 생각하기에 web용 goguelike 클라이언트를 만들때도 역시나 만들봤었습니다.
그 결과물을 적당히 정리( 라이브러리 사용을 줄이는 등 ) 한것 입니다.
만들어진 결과물은 마루에서 시계및 달력으로 잘 쓰이고 있기도 합니다. ^^</description>
    </item>
    
    <item>
      <title>goguelike 편향Bias의 color표시 , 지난 1년간 작업량 </title>
      <link>https://kasworld.github.io/posts/2018-10-02-goguelike%ED%8E%B8%ED%96%A5bias%EC%9D%98color%ED%91%9C%EC%8B%9C%EC%A7%80%EB%82%9C1%EB%85%84%EA%B0%84%EC%9E%91%EC%97%85%EB%9F%89/</link>
      <pubDate>Tue, 02 Oct 2018 10:21:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-10-02-goguelike%ED%8E%B8%ED%96%A5bias%EC%9D%98color%ED%91%9C%EC%8B%9C%EC%A7%80%EB%82%9C1%EB%85%84%EA%B0%84%EC%9E%91%EC%97%85%EB%9F%89/</guid>
      <description>goguelike의 성향은 ( 엄밀히 말하면 편향 bais 입니다. 성향 alignment 이 아니고 )
리니지의 1축 (lawful, chaotic) 이나 D&amp;amp;D의 2축 ( good - evil 추가 ) 이 아니고 3축입니다. ( 즉 편향은 3차원 벡터 입니다. ^^ )
성향이 아니고 편향 이기 때문에 축에 특별한 의미를 부여하지는 않았습니다만 대신 각축을 color의 Red , Green, Blue 로 표시 하도록 하였습니다. 색에 - ( 음의 값 ) 은 없으니 중립을 회색으로 정하고 나니 편향을 한개의 색으로 표현할수 있게 되었습니다.</description>
    </item>
    
    <item>
      <title>goguelike 원형 시야의 적용 </title>
      <link>https://kasworld.github.io/posts/2018-09-21-goguelike%EC%9B%90%ED%98%95%EC%8B%9C%EC%95%BC%EC%9D%98%EC%A0%81%EC%9A%A9/</link>
      <pubDate>Fri, 21 Sep 2018 09:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-09-21-goguelike%EC%9B%90%ED%98%95%EC%8B%9C%EC%95%BC%EC%9D%98%EC%A0%81%EC%9A%A9/</guid>
      <description>흰색 사각형이 기존의 사각형 시야 이고 그 주위로 약간 밝게 보이는 것이 새로 적용된 원형 시야 입니다.
기존에 구현 편의상 사각형으로 시야를 만들고 있었는데 ( 2차원 배열 ) 아무래도 맘에 들지 않아 ( 리얼해 보이지도 않고 ) 수정했습니다.
라고 쓰면 간단해보이지만 내부적으로는 꽤나 대규모의 수정 작업이 있었습니다. 약 3일정도 20시간 정도의 작업이 들어갔군요. 덕분에 이제 부터는 비정형 시야 ( 타원 , 별모양등 ) 를 만드는 것도 가능한 구조가 되었습니다. ( 쓸일이야 없겠지만 ^^ )</description>
    </item>
    
    <item>
      <title>다트 구매후 2달 </title>
      <link>https://kasworld.github.io/posts/2018-09-17-%EB%8B%A4%ED%8A%B8%EA%B5%AC%EB%A7%A4%ED%9B%842%EB%8B%AC/</link>
      <pubDate>Mon, 17 Sep 2018 19:40:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-09-17-%EB%8B%A4%ED%8A%B8%EA%B5%AC%EB%A7%A4%ED%9B%842%EB%8B%AC/</guid>
      <description>약 두달전 다트를 구매했습니다. 생각과는 달리 매일 1시간 정도씩 그녀님과 둘이서 게임을 즐기고 있었는데 같이 따라온 소프트 팁을 모두 소비하고 새 팁을 산 것으로 모자라서 ( 일체형 플라이트들이 슬슬 맛이 가는 것 같은 느낌이 들어서 ) 다트 핀도 구입하게 되었습니다. 싸구려를 구입했지만 이왕 사는김에 ( 배송비도 아낄겸 ) 4세트를 구입한 것이 도착 했기에 인증샷을 올립니다.</description>
    </item>
    
    <item>
      <title>goguelike 기억상실, 각종 함정의 추가 </title>
      <link>https://kasworld.github.io/posts/2018-09-14-goguelike%EA%B8%B0%EC%96%B5%EC%83%81%EC%8B%A4%EA%B0%81%EC%A2%85%ED%95%A8%EC%A0%95%EC%9D%98%EC%B6%94%EA%B0%80/</link>
      <pubDate>Fri, 14 Sep 2018 12:31:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-09-14-goguelike%EA%B8%B0%EC%96%B5%EC%83%81%EC%8B%A4%EA%B0%81%EC%A2%85%ED%95%A8%EC%A0%95%EC%9D%98%EC%B6%94%EA%B0%80/</guid>
      <description>꽤 오랫동안 고민하고 준비했던 기억상실 함정을 추가 했습니다. 기억상실 함정은 두종류로 현재 층의 탐험 기억을 잊는 함정과 그동안 탐험한 층 중 하나의 기억을 랜덤하게 잊는 함정입니다. 기억을 잊게 되면 잊은 만큼의 탐험 경험치도 같이 상실 하게 됩니다.
goguelike는 경험치의 성장이 2가지 인데 하나는 전투를 통해서 얻는 전투 경험치로 이것은 사망시에 일정 비율로 상실됩니다. 또 하나는 개척/탐험 경험치로 플로어에 아직 가보지 않은 타일을 탐험하게 되면 얻게 됩니다. 추가적으로 새로운 층(floor) 을 발견 하거나 하나의 층을 완전히 탐험하면 보너스 경험치도 얻습니다.</description>
    </item>
    
    <item>
      <title>goguelike 미니맵의 삭제, 2단 줌의 추가 </title>
      <link>https://kasworld.github.io/posts/2018-09-04-goguelike%EB%AF%B8%EB%8B%88%EB%A7%B5%EC%9D%98%EC%82%AD%EC%A0%9C2%EB%8B%A8%EC%A4%8C%EC%9D%98%EC%B6%94%EA%B0%80/</link>
      <pubDate>Tue, 04 Sep 2018 12:40:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-09-04-goguelike%EB%AF%B8%EB%8B%88%EB%A7%B5%EC%9D%98%EC%82%AD%EC%A0%9C2%EB%8B%A8%EC%A4%8C%EC%9D%98%EC%B6%94%EA%B0%80/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
동영상을 보시면 됩니다.
전부터 구현이 맘에 안들던 minimap을 삭제하고 플레이 뷰와 플로어 뷰 에서 다단 줌을 지원하게 바꿨습니다.
큰 필드에서는 zoom out을 하는 것으로 전체를 볼수 없다는 단점은 있지만 나름 bird eye view 라서 느낌이 확 달라집니다.
꽉 찬 (일반) 플로어 에서 줌 하는 것과 빈공간이 많은 roguelike 플로어에서 줌 해서 보는 것 또한 전혀 다른 느낌을 주는 군요.</description>
    </item>
    
    <item>
      <title>goguelike에 함정추가, webclient에 뷰포트  줌 추가 등. </title>
      <link>https://kasworld.github.io/posts/2018-08-31-goguelike%EC%97%90%ED%95%A8%EC%A0%95%EC%B6%94%EA%B0%80webclient%EC%97%90%EB%B7%B0%ED%8F%AC%ED%8A%B8%EC%A4%8C%EC%B6%94%EA%B0%80%EB%93%B1/</link>
      <pubDate>Fri, 31 Aug 2018 17:39:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-08-31-goguelike%EC%97%90%ED%95%A8%EC%A0%95%EC%B6%94%EA%B0%80webclient%EC%97%90%EB%B7%B0%ED%8F%AC%ED%8A%B8%EC%A4%8C%EC%B6%94%EA%B0%80%EB%93%B1/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
위 동영상은 최근에 추가한 grid 와 뷰포트 줌 기능을 시연한것입니다.
전부터 추가해야 겠다고 생각하고 있던 함정을 추가 했습니다. 함정은 밟기 전까지는 보이지 않으며 일단 밟으면 일정한 효과를 발생합니다. 함정을 추가할 구조를 준비하고 가장 만들고 싶었던 teleport 함정을 만들었습니다. 기존에 있던 자동 진입 포탈 과의 차이점은 포탈은 진입점과 도착 지점이 고정인데 전이함정 은 진입점은 고정이나 도착 지점이 지정된 플로어의 임의의 위치가 됩니다.</description>
    </item>
    
    <item>
      <title>golang 1.11 과 wasm , gopherjs </title>
      <link>https://kasworld.github.io/posts/2018-08-26-golang111%EA%B3%BCwasmgopherjs/</link>
      <pubDate>Sun, 26 Aug 2018 11:50:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-08-26-golang111%EA%B3%BCwasmgopherjs/</guid>
      <description>현재는 goguelike에서 web client를 만들기 위해서 gopherjs를 사용하고 있습니다.
다른 대안도 없고 약간 야매긴 하지만 잘 작동하고 있기에 만족스럽게 사용하고 있긴 합니다만 그래도 정식으로 golang에서 wasm을 지원하는 것이 베스트기에 wasm 을 정식으로 ( 실제로는 experimental port 라고 release note에 명시 ) 지원한다는 소식을 듣고 1.11의 릴리즈 만을 기다리고 있었습니다. 마침내 어제 1.11의 릴리스 소식을 듣고 바로 1.11의 설치를 하고 기존 gopherjs로 되어 있는 webclient를 wasm으로 포팅하는 작업을 시작했는데 .. 결론만 이야기 하면 일단 작업을 모두 정지하고 코드를 gopherjs 로 롤백 했습니다.</description>
    </item>
    
    <item>
      <title>goguelike의 유령 floor </title>
      <link>https://kasworld.github.io/posts/2018-08-23-goguelike%EC%9D%98%EC%9C%A0%EB%A0%B9floor/</link>
      <pubDate>Thu, 23 Aug 2018 15:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-08-23-goguelike%EC%9D%98%EC%9C%A0%EB%A0%B9floor/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
goguelike는 방(room)과 통로(corridor) 의 재질을 여러 가지로 할수 있습니다. 그래서 새로 추가된 유령 층의 방과 통로를 안개(fog)와 연기(smoke) 로 구성해보았습니다.
그리고 통로를 여러 재질로 만들수 있기에 기존 최근에 추가된 goguelike floor 의 통로에 2가지 재질 통로를 적용해 보았습니다.
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.</description>
    </item>
    
    <item>
      <title>goguelike - grid의 부활, 화면 버튼의 간소화, 장비 - 팩션의 연결 </title>
      <link>https://kasworld.github.io/posts/2018-08-21-goguelikegrid%EC%9D%98%EB%B6%80%ED%99%9C%ED%99%94%EB%A9%B4%EB%B2%84%ED%8A%BC%EC%9D%98%EA%B0%84%EC%86%8C%ED%99%94%EC%9E%A5%EB%B9%84%ED%8C%A9%EC%85%98%EC%9D%98%EC%97%B0%EA%B2%B0/</link>
      <pubDate>Tue, 21 Aug 2018 17:01:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-08-21-goguelikegrid%EC%9D%98%EB%B6%80%ED%99%9C%ED%99%94%EB%A9%B4%EB%B2%84%ED%8A%BC%EC%9D%98%EA%B0%84%EC%86%8C%ED%99%94%EC%9E%A5%EB%B9%84%ED%8C%A9%EC%85%98%EC%9D%98%EC%97%B0%EA%B2%B0/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
Dark A-Black [-58 -58 -58] Blood B-Maroon [0 -71 -71] Flame C-Red [57 -58 -58] Wild D-Green [-71 0 -71] Void E-Olive [0 0 -100] Galactic F-DarkOrange [70 7 -71] Brilliant G-Lime [-58 57 -58] Cosmic H-Chartreuse [-1 70 -71] Sun I-Yellow [58 58 -58] Aqua J-Navy [-71 -71 0] Abyssal K-Purple [0 -100 0] Hell L-DeepPink [76 -64 11] Ethereal M-Teal [-100 0 0] Ghost N-Salmon [99 0 -11] Celestial O-SpringGreen [-71 70 -1] Astral P-LightGreen [14 98 14] Moon Q-Khaki [74 67 8] Alchemic R-Blue [-58 -58 57] Infernal S-DarkViolet [13 -83 54] Chaotic T-Magenta [58 -58 58] Shadow U-DodgerBlue [-61 10 79] Dream V-MediumSlateBlue [-4 -21 98] Primal W-Violet [71 1 71] Frost X-Cyan [-58 58 58] Holy Y-Aquamarine [-1 83 55] Star Z-White [58 58 58] 위 목록은 팩션과 장비의 재질 수식어를 연결한 관계 입니다.</description>
    </item>
    
    <item>
      <title>goguelike 각 타워별, 타워 내의 층 별로 다르게 흐르는 시간 </title>
      <link>https://kasworld.github.io/posts/2018-08-15-goguelike%EA%B0%81%ED%83%80%EC%9B%8C%EB%B3%84%ED%83%80%EC%9B%8C%EB%82%B4%EC%9D%98%EC%B8%B5%EB%B3%84%EB%A1%9C%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%9D%90%EB%A5%B4%EB%8A%94%EC%8B%9C%EA%B0%84/</link>
      <pubDate>Wed, 15 Aug 2018 16:25:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-08-15-goguelike%EA%B0%81%ED%83%80%EC%9B%8C%EB%B3%84%ED%83%80%EC%9B%8C%EB%82%B4%EC%9D%98%EC%B8%B5%EB%B3%84%EB%A1%9C%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%9D%90%EB%A5%B4%EB%8A%94%EC%8B%9C%EA%B0%84/</guid>
      <description>시간과 공간의 비밀? 이 숨어 있다는 인트로 설명대로 각 타워별로 그리고 또 타워 내의 층별로 시간의 흐름을 다르게 했습니다.
타워 목록에서 타워 이름에 표시된 수자가 초당 흐르는 사건 수 ( 행동 수 ) 이며 타워 내의 층 별로도 이 흐름은 다르게 흘러갑니다.
그 외의 주요 변경점으로는 뷰 포트를 현재 플레이시점과 미니맵에서 지정한 위치를 보여주는 관찰자 시점간 전환 기능이 들어갔습니다.
장비 이름에 재질 형용사가 장비의 faction을 따르도록 수정했습니다.
서버 AI와 클라이언트 AI의 개선/수정이 있었습니다.</description>
    </item>
    
    <item>
      <title>goguelike 시작타워 (starting tower) 스샷들 </title>
      <link>https://kasworld.github.io/posts/2018-08-15-goguelike%EC%8B%9C%EC%9E%91%ED%83%80%EC%9B%8Cstartingtower%EC%8A%A4%EC%83%B7%EB%93%A4/</link>
      <pubDate>Wed, 15 Aug 2018 16:03:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-08-15-goguelike%EC%8B%9C%EC%9E%91%ED%83%80%EC%9B%8Cstartingtower%EC%8A%A4%EC%83%B7%EB%93%A4/</guid>
      <description>스크립트를 사용해서 매 서버 시작 시 마다 새로운 지형이 생성되므로 매번 다르게 만들어 지긴 합니다만 그래도 각 층별 테마는 유지 됩니다. </description>
    </item>
    
    <item>
      <title>goguelike 개발진행 - 중2병스러운 장비이름등  </title>
      <link>https://kasworld.github.io/posts/2018-08-03-goguelike%EA%B0%9C%EB%B0%9C%EC%A7%84%ED%96%89%EC%A4%912%EB%B3%91%EC%8A%A4%EB%9F%AC%EC%9A%B4%EC%9E%A5%EB%B9%84%EC%9D%B4%EB%A6%84%EB%93%B1/</link>
      <pubDate>Fri, 03 Aug 2018 12:00:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-08-03-goguelike%EA%B0%9C%EB%B0%9C%EC%A7%84%ED%96%89%EC%A4%912%EB%B3%91%EC%8A%A4%EB%9F%AC%EC%9A%B4%EC%9E%A5%EB%B9%84%EC%9D%B4%EB%A6%84%EB%93%B1/</guid>
      <description>약 2주간 진행된 작업 정리 입니다.
아래 동영상은 최신 버전goguelike 의 4배속 플레이 입니다.
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
보이는 변동사항으로는
장비 슬롯의 이름과 기능이 바뀌었습니다. 타일 형태 : 슬롯 이름 : 전투기여 { Weapon : Attack [ Shield : Defence ^ Head : Defence % Armor : Defence
Gauntlet : Defence ; Boots : Defence o Ring : Attack Amulet : Attack 입니다.</description>
    </item>
    
    <item>
      <title>수다스러워진 goguelike, 2배속 플레이 , damping move </title>
      <link>https://kasworld.github.io/posts/2018-07-22-%EC%88%98%EB%8B%A4%EC%8A%A4%EB%9F%AC%EC%9B%8C%EC%A7%84goguelike2%EB%B0%B0%EC%86%8D%ED%94%8C%EB%A0%88%EC%9D%B4dampingmove/</link>
      <pubDate>Sun, 22 Jul 2018 09:10:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-07-22-%EC%88%98%EB%8B%A4%EC%8A%A4%EB%9F%AC%EC%9B%8C%EC%A7%84goguelike2%EB%B0%B0%EC%86%8D%ED%94%8C%EB%A0%88%EC%9D%B4dampingmove/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
동영상은 2배속으로 플레이 ( 초당 4 action ) 한것을 캡쳐 한것입니다.
주요 변경사항으로는
일단 화면에 표시되는 정보가 늘어서 수다스러워 졌습니다. 층이 바뀌고, kill , killed, level up, down, 서버 공지 등의 정보가 뷰포트 아래에 html뿐 아니고 뷰포트 중앙 상단에 크게 표시 됩니다.
그리고 경험치, hp,ap변화가 작게 플레이 캐릭터 위쪽으로 표시 됩니다. 정보량이 많아지면 마치 불이 타오르는 것 같이 보이기도 합니다.</description>
    </item>
    
    <item>
      <title>goguelike 작업 진행 사항, 뷰포트의 변형 테스트 </title>
      <link>https://kasworld.github.io/posts/2018-07-16-goguelike%EC%9E%91%EC%97%85%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD%EB%B7%B0%ED%8F%AC%ED%8A%B8%EC%9D%98%EB%B3%80%ED%98%95%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Mon, 16 Jul 2018 12:27:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-07-16-goguelike%EC%9E%91%EC%97%85%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD%EB%B7%B0%ED%8F%AC%ED%8A%B8%EC%9D%98%EB%B3%80%ED%98%95%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
추가 업데이트로 가속/정속 스크롤 옵션
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
내부적인 개선 작업이 어느정도 진행되어 또다시 webclient 개선 차례가 돌아 왔습니다.
위 동영상은 뷰포트의 시인성을 좀 높여 볼까 하고 테스트 해본 뷰포트 변형 입니다. 중앙부를 크게 주변 부를 작게 보이는 변형을 시도 해 봤는데
&amp;hellip;
&amp;hellip;
멀미 나는 군요. ㅠㅠ
다른 변형들을 좀더 테스트 해봐야 겠습니다.</description>
    </item>
    
    <item>
      <title>goguelike에 역대 플레이어 랭킹 을 추가 했습니다. </title>
      <link>https://kasworld.github.io/posts/2018-07-01-goguelike%EC%97%90%EC%97%AD%EB%8C%80%ED%94%8C%EB%A0%88%EC%9D%B4%EC%96%B4%EB%9E%AD%ED%82%B9%EC%9D%84%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 01 Jul 2018 16:51:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-07-01-goguelike%EC%97%90%EC%97%AD%EB%8C%80%ED%94%8C%EB%A0%88%EC%9D%B4%EC%96%B4%EB%9E%AD%ED%82%B9%EC%9D%84%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>애초에 그라운드 서버( 여러 타워 관리자 )를 만든 중요한 이유중 하나가 모든 타워를 아우르는 플레이어 랭킹을 표시 하고 싶었기 때문입니다.
역시 오락이라면 high score가 기록 되어야지! 하고 생각하기 때문이기도 하지요. ^^
이 플레이어 랭킹은 게임중에 표시되는 랭킹과는 좀 다릅니다. 게임 내에서 표시되는 랭킹은 그 타워 내의 모두 ( npc를 포함) 에서 현재 플레이어 캐릭터의 실시간 랭킹입니다. 그리고 이 high score 는 모든 타워에서 게임을 끝낸 플레이어 들간의 (npc 미포함) 랭킹이 됩니다.</description>
    </item>
    
    <item>
      <title>gogulike에 ground 서버를 추가 했습니다. </title>
      <link>https://kasworld.github.io/posts/2018-06-28-gogulike%EC%97%90ground%EC%84%9C%EB%B2%84%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 28 Jun 2018 09:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-06-28-gogulike%EC%97%90ground%EC%84%9C%EB%B2%84%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>외부로 오픈된 여러개의 tower가 생기니 여러개의 tower 를 관리 ( 시작, 중지 , monitor , 배포 ) 해야 할 필요성이 높아 졌습니다.
그 동안 애써 외면 하고 있었지만 더 미루기는 힘들어서 tower 관리 서버를 만들었습니다.
가장 어렵고 또 중요한 &amp;ldquo;서버 이름&amp;rdquo; 은 ground 서버로 정했습니다.
게임 인트로에 나온 여러개의 탑이 있는 장소 이며 또 탑을 세우거나 없애거나 하는 일도 담당해야 하는 서버라 그 역할에 어울리게 ground 입니다.
외부로 노출될 일은 없을 서버라 ( 노출되면 보안 사고!</description>
    </item>
    
    <item>
      <title>goguelike 인트로 업데이트 , 탑 목록수정, 폰트 변경, 타일 변경 </title>
      <link>https://kasworld.github.io/posts/2018-06-22-goguelike%EC%9D%B8%ED%8A%B8%EB%A1%9C%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%83%91%EB%AA%A9%EB%A1%9D%EC%88%98%EC%A0%95%ED%8F%B0%ED%8A%B8%EB%B3%80%EA%B2%BD%ED%83%80%EC%9D%BC%EB%B3%80%EA%B2%BD/</link>
      <pubDate>Fri, 22 Jun 2018 14:29:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-06-22-goguelike%EC%9D%B8%ED%8A%B8%EB%A1%9C%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%83%91%EB%AA%A9%EB%A1%9D%EC%88%98%EC%A0%95%ED%8F%B0%ED%8A%B8%EB%B3%80%EA%B2%BD%ED%83%80%EC%9D%BC%EB%B3%80%EA%B2%BD/</guid>
      <description>일단 눈에 보이는 변경사항들은 인트로가 조금더 스토리 스럽게 업데이트 되었습니다. 그리고 그에 맞춰서 탑의 목록 표시가 자연스럽게 변경 되었습니다. 탑 목록을 가져 오는 내부 구조는 완전히 새로 만들어졌습니다. 웹 폰트와 오브젝트 타일을 생성할때 사용하는 폰트를 좀더 레트로 스럽게 수정하였습니다.
내부 적으로는 서버 목록 변경, 서버 릴리스 방법 변경 , 지형 생성 스크립트 변경 , 웹 어드민 의 업데이트, 어드민 웹 용 지형 이미지 생성 업데이트, zombie 의 homefloor 변경, 랭킹 시스템 업데이트, 얼음위에서 미끄러짐 변경 등이 있었습니다.</description>
    </item>
    
    <item>
      <title>삼성 갤럭시 s7 edge 오레오 업데이트후 생긴 특이? 이상? 증상들 - 업데이트 </title>
      <link>https://kasworld.github.io/posts/2018-06-19-%EC%82%BC%EC%84%B1%EA%B0%A4%EB%9F%AD%EC%8B%9Cs7edge%EC%98%A4%EB%A0%88%EC%98%A4%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%9B%84%EC%83%9D%EA%B8%B4%ED%8A%B9%EC%9D%B4%EC%9D%B4%EC%83%81%EC%A6%9D%EC%83%81%EB%93%A4%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</link>
      <pubDate>Tue, 19 Jun 2018 12:22:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-06-19-%EC%82%BC%EC%84%B1%EA%B0%A4%EB%9F%AD%EC%8B%9Cs7edge%EC%98%A4%EB%A0%88%EC%98%A4%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%9B%84%EC%83%9D%EA%B8%B4%ED%8A%B9%EC%9D%B4%EC%9D%B4%EC%83%81%EC%A6%9D%EC%83%81%EB%93%A4%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</guid>
      <description>일단은 두가지의 이상 증상이 있었습니다.
첫번째는 이상하게 하루 한번 정도 ( 24시간 좀 넘는 주기로 ) 잠금 화면을 지문으로 해제하려고 할때 암호를 입력하라고 하는 증상입니다.
**아래 방법으로 해결된 것으로 생각했는데 오늘 또 물어보더군요. ** **해결 방법 찾습니다. **
처음에는 잠자는 사이에 기기 재부팅이 있었나? 하고 넘어갔는데 ( 재부팅후 첫번째 잠금 해제시는 암호를 물어니까 ) 재부팅이 없어도 증상이 계속되었습니다. 이 증상이 상당히 짜증이 나는 것이 언제 암호를 물어 볼지 미리 예측할 수 가 없는 관계로 급히 폰의 잠금을 해제해서 사용하려 할때 물어보면 시간과 행동을 방해 받기 때문입니다.</description>
    </item>
    
    <item>
      <title>goguelike에 zombie를 추가 했습니다. </title>
      <link>https://kasworld.github.io/posts/2018-06-14-goguelike%EC%97%90zombie%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 14 Jun 2018 08:23:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-06-14-goguelike%EC%97%90zombie%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>goguelike는 로그라이크게임치고는 꽤나 여유로운? 플레이가 가능한 편입니다. 그 이유는 진성 로그라이크와는 달리 플레이중 죽어도 이어서? 플레이가 가능하기 때문입니다. ( 로그라이크의 특징중 하나가 죽으면 새로 시작입니다. ) ( 자비로운? goguelike는 경험치가 좀 깍이고, 아이템을 좀 드랍하는 정도로? 끝납니다. -어디서 많이 본듯하지만 - )
다만 공개한적 없는 전용 클라이언트(linux - sdl용) 에서 플레이할때와는 달리 웹 클라이언트로 포팅된후 생긴 문제가 하나 있습니다.
브라우저 페이지를 실수로 reload ( F5를 누르거나 모바일에서 아래로 당겼다가 놓거나 ) 하는 경우 게임이 끝나 버린다는 거지요.</description>
    </item>
    
    <item>
      <title>goguelike 뷰포트 모드 전환 </title>
      <link>https://kasworld.github.io/posts/2018-06-10-goguelike%EB%B7%B0%ED%8F%AC%ED%8A%B8%EB%AA%A8%EB%93%9C%EC%A0%84%ED%99%98/</link>
      <pubDate>Sun, 10 Jun 2018 15:51:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-06-10-goguelike%EB%B7%B0%ED%8F%AC%ED%8A%B8%EB%AA%A8%EB%93%9C%EC%A0%84%ED%99%98/</guid>
      <description>명령버튼을 누르기 편하도록 뷰포트가 차지하는 공간을 선택할수 있도록 했습니다. 실제로는 가로 모드와 세로 모드도 동적으로 변환되는데 동영상 캡쳐가 안되어서 따로 캡쳐했습니다. 오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
그 외에 추가로 웹 쿠키 를 사용하여 플레이용 닉네임을 기억하도록 하였습니다.
roguelike 라는 장르의 특성상 게임 플레이가 끝나면 사용자가 플레이한 캐릭터도 사라지기 때문에 기본적으로 goguelike는 사용자 정보를 서버에 저장하지 않습니다.</description>
    </item>
    
    <item>
      <title>goguelike 가로모드, 인트로 추가</title>
      <link>https://kasworld.github.io/posts/2018-06-09-goguelike%EA%B0%80%EB%A1%9C%EB%AA%A8%EB%93%9C%EC%9D%B8%ED%8A%B8%EB%A1%9C%EC%B6%94%EA%B0%80/</link>
      <pubDate>Sat, 09 Jun 2018 15:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-06-09-goguelike%EA%B0%80%EB%A1%9C%EB%AA%A8%EB%93%9C%EC%9D%B8%ED%8A%B8%EB%A1%9C%EC%B6%94%EA%B0%80/</guid>
      <description>눈에 띄는 변화는 가로 세로 모드를 지원합니다. css grid와 Responsive Web Design 이란것을 적용한것인데 의외로 쓸만했습니다.
휴대폰에서도 크롬을 사용하면 플레이가 가능한데 화면이 보기 불편해서 뷰포트를 기존 wide(16:9?)에서 정사각형이 되도록 조정하고 추가로 landscape 모드도 지원하게 했습니다. 즉 뷰포트는 정사각형이고 그외 명령, 정보 공간들이 아래와 오른쪽으로 이동합니다.
명령버튼들을 사용하여 키보드 없이도 터치와 버튼을 사용하여 플레이가 가능하도록 모든 명령을 화면 버튼으로 실행가능하도록 했습니다.
그리고 간단하게나마 인트로가 생겼습니다.
그리고 자세히 보면 보입니다만 ^^ 플레이 할수 있는 탑이 2개 입니다.</description>
    </item>
    
    <item>
      <title>goguelike2에 sound effect를 추가 했습니다. </title>
      <link>https://kasworld.github.io/posts/2018-05-31-goguelike2%EC%97%90soundeffect%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 31 May 2018 18:05:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-05-31-goguelike2%EC%97%90soundeffect%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>그냥 링크를 들어가서 버튼만 누르면 게임 화면을 볼수 있다고 생각해서 그림한장 없이 소개글을 썼더라구요. 그래서 간단한 스샷 입니다. 사용한 사운드 파일들은 ( 19개나 됩니다. ) 적당한 것을 ( 라이선스 문제도 있고 해서 ) 찾기 힘들어서 일단 리눅스 민트에 있는 효과음들을 사용했습니다. 그래도 어울리는 곳에 사용하긴 했는데 역시 어설픕니다. 그리고 소리 파일들 때문에 접속시 다운받는 용량이 500kbyte정도 늘어났습니다.
플레이 링크는 여전히 http://goguelike.iptime.org/?authkey=659b63f3-4c3d-9327-5c29-069de2d8b4f0 입니다.</description>
    </item>
    
    <item>
      <title>Goguelike2 pre-alpha 테스트 플레이 오픈합니다. </title>
      <link>https://kasworld.github.io/posts/2018-05-30-goguelike2prealpha%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%94%8C%EB%A0%88%EC%9D%B4%EC%98%A4%ED%94%88%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 30 May 2018 10:05:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-05-30-goguelike2prealpha%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%94%8C%EB%A0%88%EC%9D%B4%EC%98%A4%ED%94%88%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
      <description>( 동일한 글이 제 블로그 http://kasw.blogspot.com/2018/05/goguelike2-pre-alpha.html 에도 올라가 있습니다. )
Goguelike2 pre-alpha 테스트 플레이 설명
그동안 혼자서 만드는 MMO 라는 목적으로 작업한 goguelike2 가 프리 알파 정도 상태긴 하지만 일단 테스트 플레이가 가능한 수준이 되어서? 공개합니다.
MMO 지만 MMORPG 는 아닙니다. roguelike를 MMO 로 만들어보는 것이라 MMORLG 라고 할수 있습니다.
접속 방법은 브라우저를 사용해서 아래있는 링크로 접속하시면 됩니다. 접속시 10Mbyte 좀 넘는 데이터를 다운 받게 되니 주의해주세요.
다만 firefox 는 느려서 잘 안되는 것 같고 개발에 사용중인 chrome에서는 잘됩니다.</description>
    </item>
    
    <item>
      <title>udp와 network jitter </title>
      <link>https://kasworld.github.io/posts/2018-04-06-udp%EC%99%80networkjitter/</link>
      <pubDate>Fri, 06 Apr 2018 14:36:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-04-06-udp%EC%99%80networkjitter/</guid>
      <description>지난글 http://kasw.blogspot.com/2018/01/tcp-udp.html
이후로 goguelike2에 udp 지원을 넣기 위해 작업을 계속하고 있었는데 드디어 오늘 udp로 goguelike2 server 와client을 연결 tcp와 똑같이 작동시키는데 성공했습니다.
udp 작업만 한것은 아니고 필요한 다른 작업들도 동시에 하고 있었기 대문에 생각보다 좀 오래 걸린듯 합니다.
좀 집중해서 작업했으면 2주 정도는 당길수 있었을것 같지만 이런 저런 일들을 처리 하기도 하느라 시간을 좀 썼습니다.
그리고 부산물로 tcp 와 udp 를 동시에 지원 가능한 net 라이브러리가 생겼습니다. ^^
udp를 지원 하도록 바꾸면 tcp와의 차이를 비교 하는 것이 힘들 것 같아서 고민하다가 두가지를 거의 같은 구조로 지원 할수 있게 기반 작업들이 이루어지고 나니 그러면 동시에 지원하게 하면 좋겠네?</description>
    </item>
    
    <item>
      <title>tcp 와 udp </title>
      <link>https://kasworld.github.io/posts/2018-01-28-tcp%EC%99%80udp/</link>
      <pubDate>Sun, 28 Jan 2018 20:11:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-01-28-tcp%EC%99%80udp/</guid>
      <description>goguelike2는 서버 클라이언트간 패킷전송을 초당 2 번, 즉 2 frame / sec 로 하고 있습니다.
사용자 행동(입력)은 각 frame 마다 서버로 전송되고
서버에서는 각 frame 별로 사용자 액션을 실행 결과를 돌려주는 동시에 그 결과로 변화된 field 상황을 viewport로 만들어 각 클라이언트에 전송합니다.
처음에는 초당 3번을 하도록 했었는데
local 이 아닌 wifi로 연결된 서버와 클라이언트에서 테스트라 했더니
서버 - 클라이언트간 전송 latency가 들쑥날쑥해서 클라이언트가 처리하기가 애매 했습니다.
frame jitter(?) 가 100% 가 넘는 경우가 생기더군요.</description>
    </item>
    
    <item>
      <title>visual studio code를 사용해 보고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2018-01-14-visualstudiocode%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 14 Jan 2018 20:37:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-01-14-visualstudiocode%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>지난주에 지인이 추천해준 Visual Studio Code를 설치해서 테스트 중입니다. MS를 떠나 리눅스만! 사용한지 거의 10년만에 &amp;ldquo;MS에서 만든&amp;rdquo;, &amp;ldquo;리눅스에서 작동하는&amp;rdquo;, &amp;ldquo;오픈소스 프로그램&amp;rdquo; 을 설치해서 써보면서 다시금 MS넘들이 싫기는 하지만 역시 프로그램은 참 잘 만들지.. 하는 생각을 떠올리고 있습니다.
그리고 오늘부터 본격적으로 환경을 세팅하고 작업을 해보고 있는데 sublime text 를 구입해 사용한지 5년 만에 진지하게 주 에디터를 바꾸는 것을 고민 하고 있습니다.
중간에 atom은 시도해보고 바로 아니다 싶었는데 visual studio code는 나름 시도 해볼 가치가 있을 것 같습니다.</description>
    </item>
    
    <item>
      <title>github를 통한 지난해 작업 통계 </title>
      <link>https://kasworld.github.io/posts/2018-01-01-github%EB%A5%BC%ED%86%B5%ED%95%9C%EC%A7%80%EB%82%9C%ED%95%B4%EC%9E%91%EC%97%85%ED%86%B5%EA%B3%84/</link>
      <pubDate>Mon, 01 Jan 2018 08:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2018-01-01-github%EB%A5%BC%ED%86%B5%ED%95%9C%EC%A7%80%EB%82%9C%ED%95%B4%EC%9E%91%EC%97%85%ED%86%B5%EA%B3%84/</guid>
      <description>goguelike2는 비공개 레포지토리라 저를 제외한 사람들에게는 안보이기 때문에 스크린 샷으로 대치 합니다.
10월 초 부터 커밋량이 늘어난것이 퇴사후 goguelike2작업을 본격적으로 시작한 흔적입니다.
10월 부터 평일 주말 안가리고 월 300 커밋 이상을 했군요.
중간에 블로그를 github page로 바꿔 볼까 하고 테스트한 흔적도 보입니다. ^^ jekyll 를 쓰면 편하다고 하는 데 ruby는 영 취향이 아니어서 hugo (https://gohugo.io/getting-started/installing)를 사용해 봤는데 괜찮은 것 같아서 심각하게 고민 중입니다.
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.</description>
    </item>
    
    <item>
      <title>병풍과 물고기</title>
      <link>https://kasworld.github.io/posts/2017-12-29-%EB%B3%91%ED%92%8D%EA%B3%BC%EB%AC%BC%EA%B3%A0%EA%B8%B0/</link>
      <pubDate>Fri, 29 Dec 2017 08:50:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-12-29-%EB%B3%91%ED%92%8D%EA%B3%BC%EB%AC%BC%EA%B3%A0%EA%B8%B0/</guid>
      <description>라고 쓰면 뭔소리여 하고 궁금해들 하실꺼라고 생각해서.^^
fish shell 과 byobu 이야깁니다.
사용자 친화적 21세기 다운 명령행 처리기 ( command line shell ) https://fishshell.com/
tmux 나 screen을 쓰기 편하게 wrapping한 byobu ( 일본어로 병풍이라는 군요. ) 홈페이지가 죽어 있는 관계로 https://en.wikipedia.org/wiki/Byobu_(software)
저는 linux를 주 작업용으로 쓰는 관계로 shell 에서 작업할 일이 많습니다. ( 윈도는 아예 안씁니다. - 라이선스는 사둔 것이 있지만 )
fish shell은 아마도 bash에서 git prompt 를 설정하다가 우연히 발견 했던 것 같습니다.</description>
    </item>
    
    <item>
      <title>벤치마크와 프로파일링의 결과가 서로 상충될때 </title>
      <link>https://kasworld.github.io/posts/2017-11-29-%EB%B2%A4%EC%B9%98%EB%A7%88%ED%81%AC%EC%99%80%ED%94%84%EB%A1%9C%ED%8C%8C%EC%9D%BC%EB%A7%81%EC%9D%98%EA%B2%B0%EA%B3%BC%EA%B0%80%EC%84%9C%EB%A1%9C%EC%83%81%EC%B6%A9%EB%90%A0%EB%95%8C/</link>
      <pubDate>Wed, 29 Nov 2017 16:51:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-11-29-%EB%B2%A4%EC%B9%98%EB%A7%88%ED%81%AC%EC%99%80%ED%94%84%EB%A1%9C%ED%8C%8C%EC%9D%BC%EB%A7%81%EC%9D%98%EA%B2%B0%EA%B3%BC%EA%B0%80%EC%84%9C%EB%A1%9C%EC%83%81%EC%B6%A9%EB%90%A0%EB%95%8C/</guid>
      <description>작업하고 있는 goguelike2에서 사용하는 작은 패키지 하나를 github 공개 repository 에 올렸습니다.
https://github.com/kasworld/wrapper
인데
내용을 보면 뭐 이런 간단한 걸 올린 것일까? 하고 생각할만한 패키지입니다.
패키지의 기능은 최대 값이 있는 정수가 범위를 벗어 나지 않도록 wrap around 해주는 것입니다.
실제 사용은 오른 쪽 끝을 넘어가면 왼쪽으로 나와서 무한해 보이는 필드 를 만들기 위한 기능을 제공하기 위해서 만든 것인데.
원래는 func WrapInt(v, l int) int { return (v%l + l) % l }</description>
    </item>
    
    <item>
      <title>Meta-programming으로 만드는 게임 서버</title>
      <link>https://kasworld.github.io/posts/2017-09-18-metaprogramming%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%9C%EB%8A%94%EA%B2%8C%EC%9E%84%EC%84%9C%EB%B2%84/</link>
      <pubDate>Mon, 18 Sep 2017 15:06:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-09-18-metaprogramming%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%9C%EB%8A%94%EA%B2%8C%EC%9E%84%EC%84%9C%EB%B2%84/</guid>
      <description>지난 2년간 회사에서 개발한 게임서버 개발을 한번 정도 정리 해보고 싶다고 생각 하고 있었습니다만.
몇주전에 golang korea 에 올라온 GDG seoul meetup 발표자 모집 글을 보고 (꽤나 즉흥적으로 ) 신청을 했더니 덜컥 발표자로 등록 되어 버렸습니다.
https://www.facebook.com/groups/golangko/
결국 지난주 토요일 (2017-09-16) &amp;ldquo;Meta-programming으로 만드는 게임 서버&amp;rdquo; 라는 주제로 발표를 했습니다. https://www.meetup.com/GDG-Seoul/events/242054608/
https://docs.google.com/presentation/d/1P6wykg33jnbTM0GVB3AwXUJZlkp20yC0i6XcbOfPlG4/edit?usp=sharing
발표 준비를 하면서 &amp;ldquo;너무 실무적 내용들이고 또 자세한 설명은 생략한다. 식이라 이래도 좋은가?&amp;rdquo; 라는 걱정을 좀 했는데 다들 열심히 들어 주시고 해서 어떻게 무사히 끝냈습니다.</description>
    </item>
    
    <item>
      <title>한성 X57K BossMonster Lv.74 구입,사용기 </title>
      <link>https://kasworld.github.io/posts/2017-07-09-%ED%95%9C%EC%84%B1x57kbossmonsterlv74%EA%B5%AC%EC%9E%85%EC%82%AC%EC%9A%A9%EA%B8%B0/</link>
      <pubDate>Sun, 09 Jul 2017 10:38:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-07-09-%ED%95%9C%EC%84%B1x57kbossmonsterlv74%EA%B5%AC%EC%9E%85%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid>
      <description>급히 쓸 일이 생겨서 새 노트북 구입했습니다.
지난주 화요일에 도착했습니다.
한성컴퓨터 X57K BossMonster Lv.74 (SSD 120GB)
저번 한성 노트북을 부셔먹긴 했지만 전 기본적으로 한성 노트북이 꽤나 맘에 드는 관계로 또 한성 노트북을 샀습니다.
( 가격도 싸고, 불필요한 windows 비용 안내도 되고, 쓸데없는 ODD 도 없고 해서 저한테는 딱입니다. )
i7 에 8G ram 1050 4G , 120 ssd 를 달고 80만원 대 입니다.
집에서 쓰는 데스크탑보다 사양이 좋네요. ( ram , ssd 가 작지만 업그레이드 가능하니 )</description>
    </item>
    
    <item>
      <title>go sdl gui 의 새버전을 작업하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2017-05-28-gosdlgui%EC%9D%98%EC%83%88%EB%B2%84%EC%A0%84%EC%9D%84%EC%9E%91%EC%97%85%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 28 May 2017 14:40:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-05-28-gosdlgui%EC%9D%98%EC%83%88%EB%B2%84%EC%A0%84%EC%9D%84%EC%9E%91%EC%97%85%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
https://github.com/veandco/go-sdl2 를 기반으로 만들었던
https://github.com/kasworld/go-sdlgui 가 별로 맘에 안들어서 아예 새로 작업을 조금씩 해보고 있습니다.
go-sdlgui 와는 기반이 되는 design decision 이 달라서 아예 다른 형태의 구현이 될것 같습니다.</description>
    </item>
    
    <item>
      <title>어떤 질문지의 답변문서</title>
      <link>https://kasworld.github.io/posts/2017-05-09-%EC%96%B4%EB%96%A4%EC%A7%88%EB%AC%B8%EC%A7%80%EC%9D%98%EB%8B%B5%EB%B3%80%EB%AC%B8%EC%84%9C/</link>
      <pubDate>Tue, 09 May 2017 11:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-05-09-%EC%96%B4%EB%96%A4%EC%A7%88%EB%AC%B8%EC%A7%80%EC%9D%98%EB%8B%B5%EB%B3%80%EB%AC%B8%EC%84%9C/</guid>
      <description>어쩌다 쓰게된 질문지의 답변을 적다보니 재밌어서 (허락을 얻은후) 블로그에도 공유해봅니다. 1. 자기 소개를 해주세요. – 경력이어도 좋고 그냥 자신이 생각하는 자기 얘기여도 좋습니다.
** **
프로그래밍이란걸 시작한지 30년이 좀 넘은 낡은 프로그래머로 유부남 - SINK 족 ( single income no kid ) 이며 돈많이 벌어서 은퇴해서 프로그램 짜며 여생을 보내고 싶어하는 사람 입니다. ** **
2. 지금 무슨 일을 하고 계신가요?
조그마한 게임 회사(40명정도?) 에서 모바일 게임 서버 개발을 하고 있습니다.</description>
    </item>
    
    <item>
      <title>golang sdlgui </title>
      <link>https://kasworld.github.io/posts/2017-05-07-golangsdlgui/</link>
      <pubDate>Sun, 07 May 2017 16:13:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-05-07-golangsdlgui/</guid>
      <description>// runtime.LockOSThread() gc := guiclient.New(cconfig) // runtime.UnlockOSThread()</description>
    </item>
    
    <item>
      <title>연휴를 뜻있게 보내기</title>
      <link>https://kasworld.github.io/posts/2017-05-05-%EC%97%B0%ED%9C%B4%EB%A5%BC%EB%9C%BB%EC%9E%88%EA%B2%8C%EB%B3%B4%EB%82%B4%EA%B8%B0/</link>
      <pubDate>Fri, 05 May 2017 19:59:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-05-05-%EC%97%B0%ED%9C%B4%EB%A5%BC%EB%9C%BB%EC%9E%88%EA%B2%8C%EB%B3%B4%EB%82%B4%EA%B8%B0/</guid>
      <description>어쩌다보니 9일의 연휴를 얻게되어 ( 감사합니다. 대표님 - 우리회사 좋은 회사 ^^)
어떻게 보내면 좋을까 잠시 고민하다 2년간 손대지 못하고 밀려 있던 goguelike2를 재 정비 하기로 했습니다. 이 글을 쓰는 시점이 (주말만이남은) 금요일 저녁 시간이라 그동안의 진행 결과를 정리하는 글입니다.
지금 회사에 합류할때 조건으로 건 것이 개인 프로젝트인 goguelike는 시간 나는 대로 계속하겠다. 는 것과 goguelike의 권리는 계속 내가 가지겠다. 였는데 대표님께서 혼쾌히 동의해 주셔서 안심하고 합류했었는데. 정작 회사 일을 시작하니 시간이 전혀 없어서 손을 거의 대지 못하고 있었습니다.</description>
    </item>
    
    <item>
      <title>golang context 사용 </title>
      <link>https://kasworld.github.io/posts/2017-03-13-golangcontext%EC%82%AC%EC%9A%A9/</link>
      <pubDate>Mon, 13 Mar 2017 15:18:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-03-13-golangcontext%EC%82%AC%EC%9A%A9/</guid>
      <description>someobj.ctxCancelFn = func() { log.Error(&amp;ldquo;Too early contex cancel call %v&amp;rdquo;,someobj) }</description>
    </item>
    
    <item>
      <title>golang flag package 의 함정 </title>
      <link>https://kasworld.github.io/posts/2017-03-07-golangflagpackage%EC%9D%98%ED%95%A8%EC%A0%95/</link>
      <pubDate>Tue, 07 Mar 2017 10:30:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-03-07-golangflagpackage%EC%9D%98%ED%95%A8%EC%A0%95/</guid>
      <description>지금 하고 있는 ( 회사에서 만드는 server 기반 mobile game ) 프로젝트에서 서버 테스트용 ai client 작업을 하다생긴 삽질기록입니다. 프로그램 실행용 인자들의 타입이 Concurrent int
AccountPool int
AccountOverlap bool
LimitStartCount int
LimitEndCount int
RetryDelayTimeOut int
Storyname string
일때 아래의 go 실행 문장에서 이상한 점을 찾으면 진정으로 golang을 많이 써본 사람이라고 인정해 줄수 있을것 같습니다. -i 는 config를 url에서 얻어오는 옵션으로 ( 신경쓸필요없습니다. 그냥 인자가 길고 많다는 의미 )
go run rundriver/client_story.</description>
    </item>
    
    <item>
      <title>새해 맞이 지름들 - 키보드 </title>
      <link>https://kasworld.github.io/posts/2017-02-04-%EC%83%88%ED%95%B4%EB%A7%9E%EC%9D%B4%EC%A7%80%EB%A6%84%EB%93%A4%ED%82%A4%EB%B3%B4%EB%93%9C/</link>
      <pubDate>Sat, 04 Feb 2017 12:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-02-04-%EC%83%88%ED%95%B4%EB%A7%9E%EC%9D%B4%EC%A7%80%EB%A6%84%EB%93%A4%ED%82%A4%EB%B3%B4%EB%93%9C/</guid>
      <description>페이스 북에 올렸더니 관심 있는 분들이 좀 있는 것 같아서 좀더 자세히 써보는 글. 작년 부터 관심있게 보고 있던 물건이긴 했는데 새해 기념이라는 핑계로 허가를 얻어 질러본 잉여로운 물품들 레트로 키캡 과 기계식 블루투스 미니 키보드 기존에 사용중이 키보드에 레트로 키캡을 적용한 사진 써보니 역시 불편한듯 하여 원래 키캡으로 돌렸음.
레트로 키캡 사진 ( 박스와 내용물 )
기계식 블루투스 미니 키보드 적축 ( 남자는 핑크 ) 실은 기존에 청,갈,흑 축키보드는 이미 있는 관계로 ( 첫 사진이 갈축, 그녀님이 쓰는게 청축 , 회사에서 쓰는게 흑축 ) 안써본 적축으로 선택 키감은 나쁘지 않은 정도.</description>
    </item>
    
    <item>
      <title>설날 맞이 잉여로운 벤치마크 한가지 </title>
      <link>https://kasworld.github.io/posts/2017-01-28-%EC%84%A4%EB%82%A0%EB%A7%9E%EC%9D%B4%EC%9E%89%EC%97%AC%EB%A1%9C%EC%9A%B4%EB%B2%A4%EC%B9%98%EB%A7%88%ED%81%AC%ED%95%9C%EA%B0%80%EC%A7%80/</link>
      <pubDate>Sat, 28 Jan 2017 16:47:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-01-28-%EC%84%A4%EB%82%A0%EB%A7%9E%EC%9D%B4%EC%9E%89%EC%97%AC%EB%A1%9C%EC%9A%B4%EB%B2%A4%EC%B9%98%EB%A7%88%ED%81%AC%ED%95%9C%EA%B0%80%EC%A7%80/</guid>
      <description>i5-2500 (non k ) 3.4Ghz x4 ( 3.4 ~ 3.7 가변 클럭 )
raspberry pi 3 1.3Ghz x4 ( overclocked) 7z b 테스트 결론만 말하면 raspberry pi3 에 들어있는 저전력 arm 조차도 이제는 ( 꽤 과거 cpu 긴 하지만 ) intel cpu와 ipc가 2배차이도 나지 않는다. 인텔이 긴장할만 하다. intel : arm = 1.66 : 1.0
동일 클럭으로 가정할때 66% 정도의 성능차이 .</description>
    </item>
    
    <item>
      <title>현재 근황 겸 지금 하고있는 프로젝트의 통계 (golang으로 만들고 있는 게임 서버 )</title>
      <link>https://kasworld.github.io/posts/2016-10-15-%ED%98%84%EC%9E%AC%EA%B7%BC%ED%99%A9%EA%B2%B8%EC%A7%80%EA%B8%88%ED%95%98%EA%B3%A0%EC%9E%88%EB%8A%94%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9D%98%ED%86%B5%EA%B3%84golang%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B2%8C%EC%9E%84%EC%84%9C%EB%B2%84/</link>
      <pubDate>Sat, 15 Oct 2016 18:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-10-15-%ED%98%84%EC%9E%AC%EA%B7%BC%ED%99%A9%EA%B2%B8%EC%A7%80%EA%B8%88%ED%95%98%EA%B3%A0%EC%9E%88%EB%8A%94%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9D%98%ED%86%B5%EA%B3%84golang%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B2%8C%EC%9E%84%EC%84%9C%EB%B2%84/</guid>
      <description>페이스 북에만 적어놓기는 아까?워서
작년 7월에 게임회사에 합류해서 지금까지 작업한 golang으로 만들고 있는 게임 서버 프로젝트의 통계
( 이전에 계속올리던 goguelike2와는 다른 프로젝트 입니다. )
35만 9천 라인의 코드 ( 올해초에 쟀을땐 5만 라인정도 였습니다. ) (find -name \.go | xargs wc) 359371 2778151 19450193 total
44 man-month 로 7740 commit ( by gitlab ) (현재 인원은 4명 )
154개의 패키지(모듈) - 3rd party 제외 (find -name \.a | gvim -)</description>
    </item>
    
    <item>
      <title>linux 에서 apple ][gs 프로그램 실행하기.</title>
      <link>https://kasworld.github.io/posts/2016-08-15-linux%EC%97%90%EC%84%9Capplegs%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 15 Aug 2016 15:50:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-08-15-linux%EC%97%90%EC%84%9Capplegs%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0/</guid>
      <description>kegs 를 사용하면 됩니다. ( apple ][ gs emulator )
다운로드는 http://kegs.sourceforge.net/
linux 64bit에서 빌드 하려면
다운로드 http://kegs.sourceforge.net/kegs.0.91.tar.gz
(다운로드된 파일 폴더에서) 압축 풀기 ( 아마도 ~/Downloads 폴더일것임 ) tar zxfv kegs.0.91.tar.gz
빌드에 필요한 파일 설치 sudo apt-get install build-essential xorg-dev
빌드를 할 폴더로 이동 cd kegs.0.91/src
빌드 설정 수정 rm vars; ln -s vars_x86linux vars
파일 권한 변경 ( 수정 가능으로 ) chmod u=rw vars
파일 내용 수정 vars 파일 내부에서 CCOPTS = -O2 -Wall -fomit-frame-pointer -march=pentium</description>
    </item>
    
    <item>
      <title>sk 기가 라이트 설치, 포기, 재시도, 설정, 사용기. </title>
      <link>https://kasworld.github.io/posts/2016-05-21-sk%EA%B8%B0%EA%B0%80%EB%9D%BC%EC%9D%B4%ED%8A%B8%EC%84%A4%EC%B9%98%ED%8F%AC%EA%B8%B0%EC%9E%AC%EC%8B%9C%EB%8F%84%EC%84%A4%EC%A0%95%EC%82%AC%EC%9A%A9%EA%B8%B0/</link>
      <pubDate>Sat, 21 May 2016 21:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-05-21-sk%EA%B8%B0%EA%B0%80%EB%9D%BC%EC%9D%B4%ED%8A%B8%EC%84%A4%EC%B9%98%ED%8F%AC%EA%B8%B0%EC%9E%AC%EC%8B%9C%EB%8F%84%EC%84%A4%EC%A0%95%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid>
      <description>기존에 sk 의 100M 인터넷 회선을 사용하고 있었습니다. 별 불만이 없었기에 가끔 기가 인터넷으로 바꿔준다는 전화를 무시하다가. 되면 좋지뭐. 란 생각으로 해보기로 했습니다.
제가 집에 있어야 했기에 토요일인 오늘 기사님이 오셨고.
확인해보시더니 뭔가 수상한 장비(모뎀) 을 연결하고 가셨습니다.
벤치비따위는 쓰고 싶지 않아서 ( 실은 테스트 하러 갔는데 로그인 하란 소리에 관뒀습니다. )
설치후 구글에서 적당히 internet benchmark 로 검색해서 나온 사이트에서 테스트한 결과입니다.
다만 문제인게 기사님이 난감해 하면서 이야기 해주셨는데 .</description>
    </item>
    
    <item>
      <title>라즈베리 파이 화면 꺼짐 막기 메모</title>
      <link>https://kasworld.github.io/posts/2016-04-30-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4%ED%99%94%EB%A9%B4%EA%BA%BC%EC%A7%90%EB%A7%89%EA%B8%B0%EB%A9%94%EB%AA%A8/</link>
      <pubDate>Sat, 30 Apr 2016 15:04:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-04-30-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4%ED%99%94%EB%A9%B4%EA%BA%BC%EC%A7%90%EB%A7%89%EA%B8%B0%EB%A9%94%EB%AA%A8/</guid>
      <description>rpi 2에서는
/etc/xdg/lxsession/LXDE-pi/autostart 파일에
@xset s off @xset -dpms @xset s noblank
추가 하는 것으로 가능했는데 이상하게도 rpi 3에서는 통하지 않는다.
rpi 3에서는
/etc/lightdm/lightdm.conf 파일의 SeatDefaults section 에
[SeatDefaults] xserver-command=X -s 0 -dpms
을 추가하는 것으로 화면 꺼짐을 막을수 있다. 확인은 xset -q 를 실행해서 가능
xset이 설치되어 있지 않은경우 sudo apt-get install x11-xserver-utils 로 설치 가능.
http://raspberrypi.stackexchange.com/questions/2059/disable-screen-blanking-in-x-windows-on-raspbian
링크에 있는 방법중 성공한 방법 임.</description>
    </item>
    
    <item>
      <title>라즈베리파이 3 전원 삽질기</title>
      <link>https://kasworld.github.io/posts/2016-03-27-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B43%EC%A0%84%EC%9B%90%EC%82%BD%EC%A7%88%EA%B8%B0/</link>
      <pubDate>Sun, 27 Mar 2016 17:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-03-27-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B43%EC%A0%84%EC%9B%90%EC%82%BD%EC%A7%88%EA%B8%B0/</guid>
      <description>신 라즈베리파이3를 결국 구매 했습니다. http://kasw.blogspot.kr/2016/03/3.html
그전에 약간의 자기 합리화가 필요하긴 했지만요. http://kasw.blogspot.kr/2016/03/go.html
제가 구매할때 가는 사이트에 케이스가 품절이라 케이스를 구하는데 시간이 좀 걸렸지만 2와 같은 케이스를 구매해서 넣었습니다. 중앙에 보이는 파란 방열판이 예전이 쓰고 남아있던 VGA ram방열판입니다. 딱 맞더군요.
그리고 또 다른 곳에서 마침 싸게 파는 usb 테스터기 도 구매 했습니다
이 테스터 기를 구매한 이유는 단지 라즈베리파이3이 일반적인 USB 2.1A 전원이 아닌 2.5A 전원을 요구 하기 때문인데 집에 있는 여러개의 전원들중 하나는 사용할수 있지 않을까 하는 희망을 가지고 일부러 전원을 빼고 구매 했기 때문입니다.</description>
    </item>
    
    <item>
      <title>라즈베리파이2 감상기 </title>
      <link>https://kasworld.github.io/posts/2016-03-13-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B42%EA%B0%90%EC%83%81%EA%B8%B0/</link>
      <pubDate>Sun, 13 Mar 2016 16:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-03-13-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B42%EA%B0%90%EC%83%81%EA%B8%B0/</guid>
      <description>라즈베리파이 2를 구입한지 약 한달이 되었으니 써보는 감상기입니다. ( 리뷰, 사용, 분석 기 가 아닙니다. ^^ )
실제로 한달이라곤 하지만 실제로 라즈베리파이로 뭔가 한것은 아무것도 없고 단지 설치 이미지를 다운로드 집에 굴러다니던 sd에 복사 (인터넷에 있는 설명대로 dd &amp;hellip; 로 )
부팅후 잘되나 확인
이거 완전히 걍 linux네?
하는 감상후 지극히 debian 스러운 업데이트 실행 apt-get &amp;hellip;
예전에 wxpython으로 만들어둔 시계/달력 프로그램을 github에서 clone
실행확인후 좀 느리군 하고
이것 저것 빼서 가볍게 만들기.</description>
    </item>
    
    <item>
      <title>리눅스에서 홈폴더를 암호화해서 개인 정보를 보호하기. </title>
      <link>https://kasworld.github.io/posts/2016-03-13-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C%ED%99%88%ED%8F%B4%EB%8D%94%EB%A5%BC%EC%95%94%ED%98%B8%ED%99%94%ED%95%B4%EC%84%9C%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%EB%A5%BC%EB%B3%B4%ED%98%B8%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 13 Mar 2016 15:39:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-03-13-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C%ED%99%88%ED%8F%B4%EB%8D%94%EB%A5%BC%EC%95%94%ED%98%B8%ED%99%94%ED%95%B4%EC%84%9C%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%EB%A5%BC%EB%B3%B4%ED%98%B8%ED%95%98%EA%B8%B0/</guid>
      <description>평생 써볼일 없는 기능이라고 생각하고 있었습니다만..
요즘 세월이 하수상하니
리눅스에서 홈폴더를 암호화 해서 개인정보를 보호하기를 한번 해보았습니다.
일단 (요즘 놀고 있는)노트북에서 먼저 테스트해 보았는데 (당연히) 문제없이 잘되고 성능저하도 거의 느껴 지지 않더군요.
그래서 약 일주일 뒤 집 데스크 탑에도 적용했습니다.
http://www.howtogeek.com/116032/how-to-encrypt-your-home-folder-after-installing-ubuntu/
홈 폴더를 암호화 하는 것은 설치시에 하는 것이 가장 편합니다만 (설치할때 물어봅니다. )
저는 설치된 후에 암호화 작업을 했기때문에 좀 귀찮은 작업을 해야 합니다.
간단히 설명하면 암호화할 폴더의 주인이 로그인된 상태(즉 폴더를 사용중인상태) 에서는 암호화를 할 수가 없기 때문에 ( 너무 당연한 이야기지요.</description>
    </item>
    
    <item>
      <title>라즈베리 파이와 go언어. </title>
      <link>https://kasworld.github.io/posts/2016-03-06-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4%EC%99%80go%EC%96%B8%EC%96%B4/</link>
      <pubDate>Sun, 06 Mar 2016 14:39:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-03-06-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4%EC%99%80go%EC%96%B8%EC%96%B4/</guid>
      <description>라즈베리파이에서 golang이 잘 되나? 를 찾다가 발견한 http://gobot.io/ ( Gobot is a framework for robotics, physical computing, and the Internet of Things, written in the Go programming language )
이런 것 까지 있다는 건 당연히 라즈베리에서 golang이 잘돈다는 뜻이려니 하고
go언어 공식 홈의 다운로드 페이지를 확인해보니 https://golang.org/dl/ go 1.6 에는 arm 용 빌드가 기본적으로 제공되고 있었습니다. ( 알고는 있었지만 ^^ )
이것을 방금 라즈베리파이2에 다운/설치해보고 잘 되는 것 을 확인 했습니다.</description>
    </item>
    
    <item>
      <title>2주 전에 구입한 40인치 모니터</title>
      <link>https://kasworld.github.io/posts/2016-03-01-2%EC%A3%BC%EC%A0%84%EC%97%90%EA%B5%AC%EC%9E%85%ED%95%9C40%EC%9D%B8%EC%B9%98%EB%AA%A8%EB%8B%88%ED%84%B0/</link>
      <pubDate>Tue, 01 Mar 2016 16:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-03-01-2%EC%A3%BC%EC%A0%84%EC%97%90%EA%B5%AC%EC%9E%85%ED%95%9C40%EC%9D%B8%EC%B9%98%EB%AA%A8%EB%8B%88%ED%84%B0/</guid>
      <description>2주 전에 구입한것은 라즈베리파이만은 아닙니다.
기존에 쓰던 3개의 모니터가 하나씩 하나씩 망가져서 15인치 모니터 하나 만을 사용하고 있었는데 노안 때문인지 눈이 너무 아파서(란 핑계로 마눌님을 설득하여 ^^ ) 큰 모니터를 구입하였습니다.
구매를 하기 위해 한달 정도 정보를 조사 해보았는데
예전에 쓰고 있던 델 27인치 2560x1440 모니터보다는 크고 픽셀이 많았으면 좋겠다고 생각하여 4k 모니터 로 ( 3840x2160 ) 로 대상을 선정하고
모니터를 놓을 공간 ( 책상위 )의 제약을 고려하니 ( 가로 폭이 책상폭 120cm 보다 작을것 )</description>
    </item>
    
    <item>
      <title>저 라즈베리파이 3은 시다. </title>
      <link>https://kasworld.github.io/posts/2016-03-01-%EC%A0%80%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B43%EC%9D%80%EC%8B%9C%EB%8B%A4/</link>
      <pubDate>Tue, 01 Mar 2016 15:57:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2016-03-01-%EC%A0%80%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B43%EC%9D%80%EC%8B%9C%EB%8B%A4/</guid>
      <description>2년 전부터 embedded linux 장비를 호시 탐탐 노리고 있었는데.
http://kasw.blogspot.kr/2014/01/diy.html
http://kasw.blogspot.kr/2014/02/diy-2.html
어제 부로 라즈베리 파이 3이 발매 되었답니다.
https://www.raspberrypi.org/blog/raspberry-pi-3-on-sale/
무선랜과 블루투스도 내장하고 64bit 4코어를 내장해 성능도 좋아 졌다고 하는군요.
문제는 제가 2주전에 라즈베리 파이2 를 구입 했다는 거지요.
게다가 무선랜카드도 필요해서 또 따로 주문했구요. http://prod.danawa.com/info/?pcode=3708216&amp;amp;cate=1131685
위 랜카드는 라즈베리 파이에서 기본으로 지원하지는 않지만 http://blog.ngelmaum.org/entry/research-note-install-iptime-n500u-raspberry 를 보니 사용가능한듯 하여 주문했지요.
더 큰 문제는 기존에 사두고 까먹고 있던 무선랜 카드가 있었고 라즈베리파이에서 아무문제없이 인식 및 사용이 가능했다는 사실입니다.</description>
    </item>
    
    <item>
      <title>리눅스에서 네티스 wf2881과 intel 7260 무선랜 연결하기. </title>
      <link>https://kasworld.github.io/posts/2015-11-08-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C%EB%84%A4%ED%8B%B0%EC%8A%A4wf2881%EA%B3%BCintel7260%EB%AC%B4%EC%84%A0%EB%9E%9C%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 08 Nov 2015 14:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-11-08-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C%EB%84%A4%ED%8B%B0%EC%8A%A4wf2881%EA%B3%BCintel7260%EB%AC%B4%EC%84%A0%EB%9E%9C%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</guid>
      <description>이전글 http://kasw.blogspot.kr/2015/08/netis-wf2881.html
8월 28일 에 네티스 wf2881 을 구매 설치하고 집에 802.11ac를 지원하는 장비를 구매하고 싶다는 욕망에 시달리다 결국 노트북 랜카드를 intel 7260으로 교체 했습니다. ( 9월 16일에 했음)
그런데 온갖문제가 일어나서 그동한 삽질을 하다가 최근에야
문제를 해결했지만 여백이 부족한 관계로 적지 않는다.
라고 하면 안되겠지요?
문제를 해결해서 여기에 기록합니다.
일단 문제는 wf2881과 intel 7260 양쪽에 다 있었습니다. 그래서 해결하는 것이 더 복잡했습니다.
일단 간단한 것 부터
네티스 wf2881은 아무리 봐도 펌웨어 1.</description>
    </item>
    
    <item>
      <title>모바일 시대에 어울리게 바꾼 개발 환경</title>
      <link>https://kasworld.github.io/posts/2015-11-08-%EB%AA%A8%EB%B0%94%EC%9D%BC%EC%8B%9C%EB%8C%80%EC%97%90%EC%96%B4%EC%9A%B8%EB%A6%AC%EA%B2%8C%EB%B0%94%EA%BE%BC%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/</link>
      <pubDate>Sun, 08 Nov 2015 12:02:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-11-08-%EB%AA%A8%EB%B0%94%EC%9D%BC%EC%8B%9C%EB%8C%80%EC%97%90%EC%96%B4%EC%9A%B8%EB%A6%AC%EA%B2%8C%EB%B0%94%EA%BE%BC%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/</guid>
      <description>은 아니고 이전에 쓰던 트리풀 모니터 ( 15 + 15 + 27 ) 중 2개가 사망하여 노트북+남은 15인치 모니터로 세팅한 환경 의 설정샷 보통은 저 태블릿 위치에 스마트 폰이 위치 합니다. 환경을 정리하면서 데스크탑을 치우니 책상위가 깔끔해 지는 군요. 실제로는 이렇게 까지 바꿀생각은 없었는데 실수로 잘못산 모니터 암 이 기존에 사용하고 있던 거치대 기둥과 규격이 다른등 이런 저런 일들이 겹쳐서, 가지고 있는 자원을 최대한 활용한 세팅입니다.
그런데 이렇게 사용해도 전혀 불편함이 없는 것이 PC(데스크 탑)의 필요성이 정말로 많이 줄어든 듯 합니다.</description>
    </item>
    
    <item>
      <title>Asus Zenfone 2  사용, 감상기 </title>
      <link>https://kasworld.github.io/posts/2015-09-13-asuszenfone2%EC%82%AC%EC%9A%A9%EA%B0%90%EC%83%81%EA%B8%B0/</link>
      <pubDate>Sun, 13 Sep 2015 12:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-09-13-asuszenfone2%EC%82%AC%EC%9A%A9%EA%B0%90%EC%83%81%EA%B8%B0/</guid>
      <description>기존에 쓰고 있는 LG 옵티머스 LTE2는 더 이상의 희망이 없기에 ( 안드로이드의 보안 문제가 계속 생기는 중에 업그레이드를 해줄 가능성이 전무. ) 폰을 바꿔야만 하는 상황이 되었습니다. ( 아니 정말로요.. ) 망가진 곳도 없는 멀쩡한 폰을 놔두고 생돈을 들여 폰을 사려니 (정말로!) 억울하긴하지만 내 다시는 LG 폰을 사나 봐라 라고 투덜거리며
무슨 폰을 사야하나 꽤 오랬동안 고민했습니다.
(열받는 )이 참에 아예 iphone으로 가볼까도 고민하고 (제 주변은 다 iphone으로 갔더군요. ) 아니면 윈도 폰?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://kasworld.github.io/posts/2015-09-12-notitle/</link>
      <pubDate>Sat, 12 Sep 2015 18:22:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-09-12-notitle/</guid>
      <description>go 언어가 python 을 잠식(!) 해 들어가고있다는 것이 확실해지고 있는 것 같습니다.
저만 해도 지금 회사에서 새로 시작하는 프로젝트를 plan A는 python으로 준비하고 plan B는 go로 준비를 하고 있었는데 결국 여러 이유로 go를 사용할수 있는 (사용해야하는) 상황이 되어 go로 프로젝트를 진행하고 있습니다.
오랫동안 python을 좋아했고 또 주변에 많이 추천해주었던 사람으로 현재의 python은 시대에 뒤떨어 졌다는 느낌을 많이 받습니다.
python은 (동일 레벨의 다른 스크립트언어 들보다는 좋지만 ) 지금 시기 정도면 stackless ( micro thread ) , jit(pypy) , 언어 버전 이전의 완료 (python 3) , 어떤 형태로건 GIL 문제의 해결 ( STM 이건 뭐건 ) 등이 이루어 졌어야 했다고 생각합니다.</description>
    </item>
    
    <item>
      <title>Serial ID 생성기 - 두번째 글 </title>
      <link>https://kasworld.github.io/posts/2015-09-12-serialid%EC%83%9D%EC%84%B1%EA%B8%B0%EB%91%90%EB%B2%88%EC%A7%B8%EA%B8%80/</link>
      <pubDate>Sat, 12 Sep 2015 16:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-09-12-serialid%EC%83%9D%EC%84%B1%EA%B8%B0%EB%91%90%EB%B2%88%EC%A7%B8%EA%B8%80/</guid>
      <description>이전에 go 언어용 serial id generator 에 대한 글을 올린적이 있었는데. http://kasw.blogspot.kr/2015/01/go-serial-id.html
그 내용의 개량판에 대한 이야기입니다.
업데이트된 코드는 https://github.com/kasworld/idgen 에 있습니다.
작업하다 보니 ID를 꼭 0부터 시작하는 것이 아니고 이전에 기록해둔 부분 부터 시작해야 하는 경우가 생기더군요. ( 서버가 종료 되었다 다시 시작할때 ID를 사용하는 object들의 persistent 가 보장 되어야 하는경우. )
그래서 기존의 idgen 을 수정/업데이트 했습니다.
주 변경점은 여러 생성기를 만들수있도록 factory 함수를 만들고 인자로 시작 값을 받도록 했습니다.</description>
    </item>
    
    <item>
      <title>netis WF2881 유무선공유기 일주일 사용 감상기. </title>
      <link>https://kasworld.github.io/posts/2015-08-01-netiswf2881%EC%9C%A0%EB%AC%B4%EC%84%A0%EA%B3%B5%EC%9C%A0%EA%B8%B0%EC%9D%BC%EC%A3%BC%EC%9D%BC%EC%82%AC%EC%9A%A9%EA%B0%90%EC%83%81%EA%B8%B0/</link>
      <pubDate>Sat, 01 Aug 2015 15:18:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-08-01-netiswf2881%EC%9C%A0%EB%AC%B4%EC%84%A0%EA%B3%B5%EC%9C%A0%EA%B8%B0%EC%9D%BC%EC%A3%BC%EC%9D%BC%EC%82%AC%EC%9A%A9%EA%B0%90%EC%83%81%EA%B8%B0/</guid>
      <description>2015-11-08추가 이후 설정/삽질에 대한 글이 있습니다. http://kasw.blogspot.kr/2015/11/wf2881-intel-7260.html
지난 금요일 ( 7월 24일) ipTIME N8004R 유무선공유기 의 펌웨어를 업데이트 하던중 공유기가 사망했습니다.
같은날 처의 와이브로 에그도 사망한 관계로 네트웍적으로 아주 빈궁한 주말을 보낼수 밖에 없었는데. ( 주말내내 lte를 물쓰듯 사용하며보냈습니다. 나중에 확인해보니 2일간 3Gbyte를 썼더군요. )
하필 금요일 밤(불금!)인 관계로 인터넷 주문을 해도 바로 받아보기 힘든 상황이었습니다. 그래서 조금 비싸더라도 급한대로 살 생각으로 집근처 마트를 갔더니 2세대전 물건 만이 있고 가격도 인터넷 가격의 2배를 받더군요.</description>
    </item>
    
    <item>
      <title>mint 17.2 로 업그레이드를 했습니다.</title>
      <link>https://kasworld.github.io/posts/2015-07-04-mint172%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 04 Jul 2015 09:11:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-07-04-mint172%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>2015-07-06 추가 수정 지금 발견했습니다만.. 밝기 설정을 power applet에서 할수 있습니다. 설정 잘되고 문제 없습니다. ;;;
이하 원문입니다.
아침에 확인해보니 업그레이드가 가능하여 17.1 을 17.2로 업그레이드 했습니다.
먼저 데스크탑을 진행하고 문제 없음을 확인한 다음 노트북(인민에어)를 업그레이드 했습니다.
업그레이드는 update manager의 edit 메뉴를 통해서 진행하면 되고 완료후에 재시작을하면 됩니다.
설치후 확인해보니 커널도 업그레이드 되어
3.16.0-38 이 됩니다만 전 이미 3.16.0-39를 설치해서 쓰고 있었으니 큰 차이는 없더군요.
업그레이드 자체는 아주 간단하고 빠르게 이루어 지고 10분도 안걸린듯 합니다.</description>
    </item>
    
    <item>
      <title>go 용 web framework 벤치마크, 특징. </title>
      <link>https://kasworld.github.io/posts/2015-07-03-go%EC%9A%A9webframework%EB%B2%A4%EC%B9%98%EB%A7%88%ED%81%AC%ED%8A%B9%EC%A7%95/</link>
      <pubDate>Fri, 03 Jul 2015 14:17:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-07-03-go%EC%9A%A9webframework%EB%B2%A4%EC%B9%98%EB%A7%88%ED%81%AC%ED%8A%B9%EC%A7%95/</guid>
      <description>이전글 에 잠깐 언급했었던 http://kasw.blogspot.kr/2014/10/pythongolang-web-framework.html
go 용 web framework를 비교 테스트 해봤습니다.
그때 이후로 beego, revel , martini 이외에 딱히 떠오르는 것은 없는것 같아서 일단 평가가 별로인(듯한) martini는 빼고 ( 나중에 시간나면 한번 보고 싶긴 합니다. )
beego와 revel 만을 검토해 보았습니다.
사용한 기계의 spec
linux mint 17.1 cinnamon x64 Linux kasw-work 3.13.0-37-generic #64-Ubuntu SMP Mon Sep 22 21:28:38 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux i7-4790 3.6x4 4c8t ram 8G single channel ab -c 100 -n 500000 http://localhost:8080/</description>
    </item>
    
    <item>
      <title>사용중이던 디바이스들이 이틀사이에 줄줄이 사망하는 군요. </title>
      <link>https://kasworld.github.io/posts/2015-06-30-%EC%82%AC%EC%9A%A9%EC%A4%91%EC%9D%B4%EB%8D%98%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EB%93%A4%EC%9D%B4%EC%9D%B4%ED%8B%80%EC%82%AC%EC%9D%B4%EC%97%90%EC%A4%84%EC%A4%84%EC%9D%B4%EC%82%AC%EB%A7%9D%ED%95%98%EB%8A%94%EA%B5%B0%EC%9A%94/</link>
      <pubDate>Tue, 30 Jun 2015 16:20:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-06-30-%EC%82%AC%EC%9A%A9%EC%A4%91%EC%9D%B4%EB%8D%98%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EB%93%A4%EC%9D%B4%EC%9D%B4%ED%8B%80%EC%82%AC%EC%9D%B4%EC%97%90%EC%A4%84%EC%A4%84%EC%9D%B4%EC%82%AC%EB%A7%9D%ED%95%98%EB%8A%94%EA%B5%B0%EC%9A%94/</guid>
      <description>어제는 asus A500 태블릿이 사망하더니 ( 배터리가 부풀어서 무서워서 버렸습니다. )
오늘은 오랫만에 테스트를 위해 켜본 X61T가 사망했군요.
얼마나 오래쓴건가 하고 과거 포스트를 확인해보니 X61T는 http://kasw.blogspot.kr/2008/02/blog-post_20.html 2008년 2월에 구입해서 약 7년 4개월 정도지났습니다. 추가 어댑터 구입 , 추가 배터리 구입 , 쿨러 수리등 꾸준히 손봐가며 오래도 썼다 싶습니다.
A500은 http://kasw.blogspot.kr/2011/09/a500.html 2011년 9월에 구입해서 3년 10개월 정도 사용했습니다.
다음은 어떤 장비일까 생각해보니 아직 잘 작동하고 있는 ipad 1 도 있고 ( 2010년 1월 공개 ) 역시 가끔 켜보면 잘 작동하는 소니 엑스페리아 레이도 있습니다.</description>
    </item>
    
    <item>
      <title>오랫만에 linux/mint에서 nvidia driver 업데이트하다 삽질한 기록 </title>
      <link>https://kasworld.github.io/posts/2015-06-22-%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90linuxmint%EC%97%90%EC%84%9Cnvidiadriver%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%98%EB%8B%A4%EC%82%BD%EC%A7%88%ED%95%9C%EA%B8%B0%EB%A1%9D/</link>
      <pubDate>Mon, 22 Jun 2015 14:01:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-06-22-%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90linuxmint%EC%97%90%EC%84%9Cnvidiadriver%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%98%EB%8B%A4%EC%82%BD%EC%A7%88%ED%95%9C%EA%B8%B0%EB%A1%9D/</guid>
      <description>linux 용 nvidia driver 새버전(352.21)이 나왔길래 받아만 놓고 있다가
http://www.nvidia.com/Download/driverResults.aspx/86390/en-us
시간이 난 김에 설치하면서 삽질한 기록입니다.
그냥 설치하면 설치되지 않는 것을 기억하고 있었기에 제 블로그를 좀 찾 아봤더니 별 이야기가 없더군요.
기억에 의하면 root 로 설치 해야 하고 display manager(xdm 들 )를 정지시키고 설치를 해야 한다. 따라서 콘솔 화면 ( 콘솔 부팅을 하건 , virtual console - ctrl-alt-f1 ~ 6 으로 들어가는 -을 사용하건 ) 에서 설치를 진행해야 한다는 것 정도가 기억나더군요.</description>
    </item>
    
    <item>
      <title>goguelike2의 AI에 상전이 엔진을 적용했습니다. </title>
      <link>https://kasworld.github.io/posts/2015-06-19-goguelike2%EC%9D%98ai%EC%97%90%EC%83%81%EC%A0%84%EC%9D%B4%EC%97%94%EC%A7%84%EC%9D%84%EC%A0%81%EC%9A%A9%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Fri, 19 Jun 2015 08:32:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-06-19-goguelike2%EC%9D%98ai%EC%97%90%EC%83%81%EC%A0%84%EC%9D%B4%EC%97%94%EC%A7%84%EC%9D%84%EC%A0%81%EC%9A%A9%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>상전이 엔진은 농담이고 실은 finite-state machine을 적용했습니다. 그래도 &amp;ldquo;유한 상태 기계&amp;quot;같은 심심한 이름 보다는 상전이 엔진( Phase Transition Engine )쪽이 있어보이기도 하고 의미상으로도 크게 다르지 않으니 좋아보이는 군요.
상전이엔진에 대한 설명.. 아시는 분이 적더라는;;; http://namu.mirror.wiki/wiki/%EC%83%81%EC%A0%84%EC%9D%B4%20%EC%97%94%EC%A7%84
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
3.3배속 AI 플레이 동영상 goguelike2의 기존 AI를 완전히 재작성해서 상전이엔진 stack-based FSM을 사용하도록 완전히 재작성하였습니다. AI를 새로 재작성한것이 이번으로 거의 5번째 정도 되는 것 같은데 이제야 겨우 좀 쓸만한 형태 ( 깔끔하고 수정, 확장하기 좋은 구조 )로 정리된것 같아 만족해 하고 있습니다.</description>
    </item>
    
    <item>
      <title>goguelike2에 소비성아이템, 버프 추가 </title>
      <link>https://kasworld.github.io/posts/2015-06-11-goguelike2%EC%97%90%EC%86%8C%EB%B9%84%EC%84%B1%EC%95%84%EC%9D%B4%ED%85%9C%EB%B2%84%ED%94%84%EC%B6%94%EA%B0%80/</link>
      <pubDate>Thu, 11 Jun 2015 18:50:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-06-11-goguelike2%EC%97%90%EC%86%8C%EB%B9%84%EC%84%B1%EC%95%84%EC%9D%B4%ED%85%9C%EB%B2%84%ED%94%84%EC%B6%94%EA%B0%80/</guid>
      <description>세계 최초?의 MMORLG(MMO roguelike game) 인^^;; goguelike2의 최근 작업진행사항입니다.
간단히 말하면 potion을 추가 하려고 했는데 일이 커져서 약 한달 넘게 bag (== 인벤토리 , 기존에는 장착 슬롯만 있었습니다. ) 돈(과 지갑), 무게 ( 아직 제한은 없습니다만.. ) 그리고 포션의 존재이유인 status effect 과 affected statues effect 등을 작업했습니다. status effect는 간단히 말해서 buff 와 de-buff 입니다. 그리고 이 모든것들을 지원하기위한 시스템의 수정과 업데이트;; 그래서 그 결과물이 위의 스크린 샷 입니다.</description>
    </item>
    
    <item>
      <title>소니 엑스페리아 레이에 안드로이드 L (5.1.x)를 설치하기. </title>
      <link>https://kasworld.github.io/posts/2015-05-30-%EC%86%8C%EB%8B%88%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EC%97%90%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9Cl51x%EB%A5%BC%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sat, 30 May 2015 16:52:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-05-30-%EC%86%8C%EB%8B%88%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EC%97%90%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9Cl51x%EB%A5%BC%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</guid>
      <description>http://forum.xda-developers.com/xperia-mini/ray-development/rom-cyanidel-rc-115-1-1-t3105417
일종의 취미 생활인 가끔 생각나면 레이가지고 장난치기 입니다.
오랫만에 XDA를 들어가보니 레이용 안드로이드 L!! 이 나왔더군요.
그래서 설치하고 있습니다.
( rom flash 하는 동안 쓰는 글입니다. )
진행순서는
위 링크를 들어가서 cyanide-5.1-RC-11.0-urushi.zip HDPI_miniGAPPS-5.1.1-20150527-signed.zip System-Formating-Tool_signed.zip UPDATE-SuperSU-v2.46.zip
을 받아 놓습니다.
cyanide-5.1-RC-11.0-urushi.zip 안의 boot.img 를 풀어내고 .
fastboot모드로 진입합니다. ( 방법은 기계가 꺼진 상태에서 볼륨 위쪽 버튼을 누른 채로 pc 와 usb 케이블로 연결하면 됩니다. 홈 버튼 주변 이 파란색으로 빛나면 제대로 진입한 것입니다.</description>
    </item>
    
    <item>
      <title>최근에 바뀐 go 언어 프로그래밍의 습관, 나름대로의 규칙들. #2</title>
      <link>https://kasworld.github.io/posts/2015-05-11-%EC%B5%9C%EA%B7%BC%EC%97%90%EB%B0%94%EB%80%90go%EC%96%B8%EC%96%B4%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98%EC%8A%B5%EA%B4%80%EB%82%98%EB%A6%84%EB%8C%80%EB%A1%9C%EC%9D%98%EA%B7%9C%EC%B9%99%EB%93%A42/</link>
      <pubDate>Mon, 11 May 2015 17:08:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-05-11-%EC%B5%9C%EA%B7%BC%EC%97%90%EB%B0%94%EB%80%90go%EC%96%B8%EC%96%B4%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98%EC%8A%B5%EA%B4%80%EB%82%98%EB%A6%84%EB%8C%80%EB%A1%9C%EC%9D%98%EA%B7%9C%EC%B9%99%EB%93%A42/</guid>
      <description>이전 글에 이어 지는 내용입니다. (http://kasw.blogspot.kr/2015/05/go.html)
가능한 작은 단위 까지도 각 struct를 독립 package화 하기 이것은 정말로 습관화하려고 노력하는 것입니다. package 이름을 struct 이름과 같게 하고 패키지내 파일 이름들을 ( 좀 규모가 되는 struct 인경우만 ) structnameattrib.go struct 의 정의와 New() 함수 , field 의 accessor 들을 정의 structname.go
struct 가 해야 하는 기능들을 정의 structname_test.go
go test 용 로 정하기
작은 규모의 struct인 경우는 상관 없지만 좀 큰 규모의 struct는 아무 생각없이 한 파일에 코드를 짜넣다 보면 1000라인이 넘어 가는 경우도 생기더군요.</description>
    </item>
    
    <item>
      <title>최근에 바뀐 go 언어 프로그래밍의 습관, 나름대로의 규칙들.</title>
      <link>https://kasworld.github.io/posts/2015-05-10-%EC%B5%9C%EA%B7%BC%EC%97%90%EB%B0%94%EB%80%90go%EC%96%B8%EC%96%B4%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98%EC%8A%B5%EA%B4%80%EB%82%98%EB%A6%84%EB%8C%80%EB%A1%9C%EC%9D%98%EA%B7%9C%EC%B9%99%EB%93%A4/</link>
      <pubDate>Sun, 10 May 2015 18:18:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-05-10-%EC%B5%9C%EA%B7%BC%EC%97%90%EB%B0%94%EB%80%90go%EC%96%B8%EC%96%B4%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98%EC%8A%B5%EA%B4%80%EB%82%98%EB%A6%84%EB%8C%80%EB%A1%9C%EC%9D%98%EA%B7%9C%EC%B9%99%EB%93%A4/</guid>
      <description>나름대로는 go 언어를 꽤 많이 쓴 편이라고 생각하고 있었습니다만
( go4game, goguelike 둘다 코드의 양도 있는 편이고 사용하는 기능도 tcp/ip, http, client, websocket 등 꽤 다양하게 사용합니다. )
최근에 google/gxui 코드를 보면서 이런저런 것들을 많이 생각하게 되었습니다. https://github.com/google/gxui
그 여파로 goguelike2에 이런 저런 refactoring을 시도 하게 되었는데. 그 중 적어 볼만한 것들을 적어 봅니다. (이 것이 정답이라고 말할수는 없겠지만 )
1. private interface , public interface 전에 interface에 대해 적은 적이 있는데 (http://kasw.</description>
    </item>
    
    <item>
      <title>goguelike2 의 몇몇 스크린 샷들. 작업 진행 사항. </title>
      <link>https://kasworld.github.io/posts/2015-05-09-goguelike2%EC%9D%98%EB%AA%87%EB%AA%87%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%EB%93%A4%EC%9E%91%EC%97%85%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</link>
      <pubDate>Sat, 09 May 2015 17:47:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-05-09-goguelike2%EC%9D%98%EB%AA%87%EB%AA%87%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%EB%93%A4%EC%9E%91%EC%97%85%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</guid>
      <description>(거의) 재작성한 goguelike는 일단 goguelike2로 부르고 있습니다.
goguelike : version 0.x ~ goguelike2 : version 1.x ~
인셈이지요. 현재는 inventory 와 status effect(버프) 작업을 진행하고 있는데 ( 기존엔 장비와 장비 슬롯 은 있었지만 인벤토리는 없었습니다. )
진도가 잘 안나가는 관계로 기분전환삼아 작성하는 포스트 입니다. ;; 일단 실시간 서버모니터링 툴인 towerviewer 의 스샷들입니다. 최근 새로한 texture가 적용된 플레이맵 - observer mode라 시야 제한이 없는 view입니다. 층 전체가 보이는 map view
또다른 playmap</description>
    </item>
    
    <item>
      <title>texture image file을 쪼개서 여러개의 tile file로 만들고 싶을 때.</title>
      <link>https://kasworld.github.io/posts/2015-05-08-textureimagefile%EC%9D%84%EC%AA%BC%EA%B0%9C%EC%84%9C%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98tilefile%EB%A1%9C%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%8B%B6%EC%9D%84%EB%95%8C/</link>
      <pubDate>Fri, 08 May 2015 18:29:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-05-08-textureimagefile%EC%9D%84%EC%AA%BC%EA%B0%9C%EC%84%9C%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98tilefile%EB%A1%9C%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%8B%B6%EC%9D%84%EB%95%8C/</guid>
      <description>ImageMagick 을 사용하면 좋다.
&amp;ndash; 끝 &amp;ndash; 이라고 쓰고 말면 ( 미래의 나 로부터 ) 욕먹을테니&amp;hellip;
goguelike &amp;ldquo;client&amp;rdquo; 용 tile image가 필요해서 Dungeon Crawl Stone Soup 의 http://crawl.develz.org/wordpress/
tile 들을 가져다 쓰고 있었습니다만. ( 라이선스도 자유 이용이라 좋더군요. )
역시 부족한 타일들이 좀 있어서 몇개는 되도 않는 손놀림으로 gimp를 사용해 어떻게 만들어 쓰고 있었습니다만 ..
역시 어설픈 관계로 구할수 있는 큰 크기의 texture들을 쪼개서 (32x32 png ) 만들어 보기로 하고 역시 gimp로 노가다를 하고 있자니 한숨만 나오고.</description>
    </item>
    
    <item>
      <title>무선 랜으로 연결된 노트북을 서버로 사용할때 </title>
      <link>https://kasworld.github.io/posts/2015-05-05-%EB%AC%B4%EC%84%A0%EB%9E%9C%EC%9C%BC%EB%A1%9C%EC%97%B0%EA%B2%B0%EB%90%9C%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%84%EC%84%9C%EB%B2%84%EB%A1%9C%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C/</link>
      <pubDate>Tue, 05 May 2015 12:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-05-05-%EB%AC%B4%EC%84%A0%EB%9E%9C%EC%9C%BC%EB%A1%9C%EC%97%B0%EA%B2%B0%EB%90%9C%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%84%EC%84%9C%EB%B2%84%EB%A1%9C%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C/</guid>
      <description>개발환경을 통일 하기위해서 노트북을 서버로 사용하고 있습니다. 이렇게 하면 데스크탑에서 작업하다가 나갈일이 생겨도 서버로 sync를 하고 ( unison으로 작업 폴더를 싱크하고, 노트북에 gitlab 서버를 설치해 쓰고 있습니다. ) 노트북을 들고나가면 문제가 없게 되지요.
게다가 노트북은 ssd 라 조용하고 또 전기도 적게 먹으니 media 서버만 nas로 돌리면 작업데이터용 서버로는 최적인것 같습니다.
아무튼 이렇게 노트북을 서버로 쓰면서 유선lan으로 연결하면 ( giga bit lan이라 빠르긴 하지만 ) 선이 귀찮아 지기때문에 ( 전송할 데이터가 많은 경우만 연결하고 ) 보통때는 무선으로 연결하고 있습니다.</description>
    </item>
    
    <item>
      <title>오래된 컴퓨터가 전원이 바로 들어 오지 않는 경우. </title>
      <link>https://kasworld.github.io/posts/2015-04-25-%EC%98%A4%EB%9E%98%EB%90%9C%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B0%80%EC%A0%84%EC%9B%90%EC%9D%B4%EB%B0%94%EB%A1%9C%EB%93%A4%EC%96%B4%EC%98%A4%EC%A7%80%EC%95%8A%EB%8A%94%EA%B2%BD%EC%9A%B0/</link>
      <pubDate>Sat, 25 Apr 2015 12:08:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-04-25-%EC%98%A4%EB%9E%98%EB%90%9C%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B0%80%EC%A0%84%EC%9B%90%EC%9D%B4%EB%B0%94%EB%A1%9C%EB%93%A4%EC%96%B4%EC%98%A4%EC%A7%80%EC%95%8A%EB%8A%94%EA%B2%BD%EC%9A%B0/</guid>
      <description>집에서 사용하는 컴퓨터가 대략 1년 전부터 전원버튼을 눌러도 켜지는데 까지 시간이 걸리는 증상이 있었습니다.
(오해가 없도록 ) 정확히 말하면 전원 버튼을 눌러도 bios의 post가 바로 시작되는 것이 아니고 수십초(또는 수분) 정도의 시간이 지나야 (메인보드에 전원이 들어오면서 ) post가 시작되는 증상입니다.
저만 그런 것이 아니고 제 와이프가 사용하고 있는 (동일 구매 시점) 동일 사양의 기계에서도 같은 증상이 일어나고 있었습니다.
약 4년 전에 산 intel i2500 cpu + gigabyte p67a-ud3r-b3 인데 슬슬 수명이 다되 가는 것이겠거니 하고 포기 하고 있었습니다.</description>
    </item>
    
    <item>
      <title>MMO를 만드는 것에 로망이 있다면 .</title>
      <link>https://kasworld.github.io/posts/2015-04-21-mmo%EB%A5%BC%EB%A7%8C%EB%93%9C%EB%8A%94%EA%B2%83%EC%97%90%EB%A1%9C%EB%A7%9D%EC%9D%B4%EC%9E%88%EB%8B%A4%EB%A9%B4/</link>
      <pubDate>Tue, 21 Apr 2015 13:33:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-04-21-mmo%EB%A5%BC%EB%A7%8C%EB%93%9C%EB%8A%94%EA%B2%83%EC%97%90%EB%A1%9C%EB%A7%9D%EC%9D%B4%EC%9E%88%EB%8B%A4%EB%A9%B4/</guid>
      <description>세상을 만들고 그 세상의 규칙을 정하는 경험을 해볼수 있다는 점일 것입니다.
goguelike도 일단 MMO의 범주에 들어가기때문에 ( MMORLG - mmo RogueLike Game ^^ ) 그런 경험을 즐길수 있습니다.
그를 위해서 terrain을 만든는 map script도 만들고 그 안에서 살아갈 AI들도 만들고 있습니다만 .. 역시 글자(log)로만 봐서는 확 하고 느낌이 오지 않는 관계로
기존의 webinfo 페이지 이외에 실시간으로 서버내 상황을 볼수 있는 viewer를 만들었습니다.
최근에 만들었던 terrainviewer를 확장해서 terrain만이 아니고 그 속의 AO/PO 들까지 볼수 있게 확장 한것입니다.</description>
    </item>
    
    <item>
      <title>goguelike의 지형 생성 부분을 완전 재작업 하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2015-04-09-goguelike%EC%9D%98%EC%A7%80%ED%98%95%EC%83%9D%EC%84%B1%EB%B6%80%EB%B6%84%EC%9D%84%EC%99%84%EC%A0%84%EC%9E%AC%EC%9E%91%EC%97%85%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 09 Apr 2015 09:29:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-04-09-goguelike%EC%9D%98%EC%A7%80%ED%98%95%EC%83%9D%EC%84%B1%EB%B6%80%EB%B6%84%EC%9D%84%EC%99%84%EC%A0%84%EC%9E%AC%EC%9E%91%EC%97%85%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>기존의 지형 시스템의 부족함이 느껴저서 새로 작업을 진행하고 있습니다.
기존과 같이 terrainscript+ random 을 사용해서 생성하는 것은 같으나 더 많은 구성 요소들과 더 정교한 로직을 사용하도록 바꿨습니다.
그랬더니 script만으로는 어떤 형태의 지형이 만들어 질지(+debug)상상하기 힘들어져서 간단한 terrain generation viewer를 만들었습니다..
오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
작업중인 동영상
그렇데 이런 구조라면 AI를 만드는 것이 더욱더 힘들어 질것 같습니다. (특히 client AI는 많이 힘들어 질듯 .</description>
    </item>
    
    <item>
      <title>goguelike에 대량의 수정을 시도하다가.</title>
      <link>https://kasworld.github.io/posts/2015-04-03-goguelike%EC%97%90%EB%8C%80%EB%9F%89%EC%9D%98%EC%88%98%EC%A0%95%EC%9D%84%EC%8B%9C%EB%8F%84%ED%95%98%EB%8B%A4%EA%B0%80/</link>
      <pubDate>Fri, 03 Apr 2015 19:17:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-04-03-goguelike%EC%97%90%EB%8C%80%EB%9F%89%EC%9D%98%EC%88%98%EC%A0%95%EC%9D%84%EC%8B%9C%EB%8F%84%ED%95%98%EB%8B%A4%EA%B0%80/</guid>
      <description>말하자면 fork를 해서 작업을 시작할 정도로 대형 수정 작업을 진행하고 있었습니다만.
( 잠정적으론 goguelike2 가 될 것으로 예상하고 있습니다. )
습관적으로 *.a 파일을 지우기 위해 ctrl-a , shift-del 을 했다가 소스를 홀라당 날려 먹었습니다. ( pkg 폴더가 아니고 src 폴더더군요. ;; )
..
..
..
..
..
..
*.a 를 지우는 것은 gosublime 이 background build 해둔 package 파일들이 가끔 문제를 일으켜서 생긴 습관입니다만..
이것이 문제를 일으킬줄이야. ;;;
소스를 날려 먹은 것을 깨닿고 침착하게 git 에서 꺼내오려고 하니.</description>
    </item>
    
    <item>
      <title>go 언어에서 goroutine group을 같이 종료 시키기 </title>
      <link>https://kasworld.github.io/posts/2015-03-25-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cgoroutinegroup%EC%9D%84%EA%B0%99%EC%9D%B4%EC%A2%85%EB%A3%8C%EC%8B%9C%ED%82%A4%EA%B8%B0/</link>
      <pubDate>Wed, 25 Mar 2015 14:05:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-03-25-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cgoroutinegroup%EC%9D%84%EA%B0%99%EC%9D%B4%EC%A2%85%EB%A3%8C%EC%8B%9C%ED%82%A4%EA%B8%B0/</guid>
      <description>update 15-03-29) http://blog.labix.org/2011/10/09/death-of-goroutines-under-control 를 같이 보시는 것도 재밌을것 같습니다. 비슷한 고민을 다르게 해결한 경우라고나 할까요.
update) 페북에 올라온 의견을 읽다보니 이글의 설명이 부족한듯 합니다. 아래 상황은 같은 context를 공유하는 goroutine들 간에 종료 신호를 주고 받기위한 방법중 (아마도 )가장 가볍고 빠른 방법을 만들어본것입니다. 이 제한이 없다면 다른 무수한 방법들이 가능할것입니다. 당장 map + mutex를 사용해서도 동일한 효과를 볼수 있을껍니다. ( 크고 무겁겠지요 ^^ ) 여기서 context를 공유한다는 것은 runstate를 struct의 field로 만들고 만들어진 object를 공유하는 여러 goroutine을 생각하시면 됩니다.</description>
    </item>
    
    <item>
      <title>메모리와 성능간의 trade-off , map vs slice</title>
      <link>https://kasworld.github.io/posts/2015-03-23-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%99%80%EC%84%B1%EB%8A%A5%EA%B0%84%EC%9D%98tradeoffmapvsslice/</link>
      <pubDate>Mon, 23 Mar 2015 14:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-03-23-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%99%80%EC%84%B1%EB%8A%A5%EA%B0%84%EC%9D%98tradeoffmapvsslice/</guid>
      <description>(업데이트)2d slice 를 추가하고 수정하였습니다.
기존 idpos 라이브러리를 대대적?으로 정리 했습니다.
idpos는 object의 위치를 저장하고 관리하는 목적의 패키지인데 ( 2d 공간에서 object들을 관리 하는 것이 주 목적 )
기존 구현은 pos2objs map[[2]int]idposi.IDPosIList 과 같이 map을 사용해서 구현 하고 있었습니다.
그런데 프로파일링을 해보니 map access에서 대량의 시간이 소비되고 있다는 것을 깨닿고 ( 25% 정도의 cpu 가 사용되고 있었습니다. ) map들을 가능한 줄인 pos2objs []idposi.IDPosIList
내부적으론 [2]int를 int로 변환하는 (xlen*y +x ) hash 함수를 사용하는 slice 기반으로 수정하였습니다.</description>
    </item>
    
    <item>
      <title>go 언어에서 메모리 사용 프로파일링 하기. </title>
      <link>https://kasworld.github.io/posts/2015-03-22-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%82%AC%EC%9A%A9%ED%94%84%EB%A1%9C%ED%8C%8C%EC%9D%BC%EB%A7%81%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 22 Mar 2015 14:17:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-03-22-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%82%AC%EC%9A%A9%ED%94%84%EB%A1%9C%ED%8C%8C%EC%9D%BC%EB%A7%81%ED%95%98%EA%B8%B0/</guid>
      <description>이전에 cpu profile 하는 글을 썼지만 http://kasw.blogspot.kr/2015/02/go-profiling_4.html
이번에는 memory profile을 하기 위한 수정을 했습니다.
시작과 끝을 지정해야하는 cpu profile과는 달리 memory profile은 현상태의 snapshot을 떠내는 형태로 사용하게 됩니다.
프로파일을 위한 shell script는
//start#!/usr/bin/env shPRGNAME=&amp;quot;$1&amp;quot;shiftgo build ${PRGNAME}.go./${PRGNAME} -memprofilename ${PRGNAME}.mprof $*go tool pprof ${PRGNAME} ${PRGNAME}.mprofrm ${PRGNAME}.mprof//end과 같고,
실제 프로그램에서 사용할때는
//startpackage mainimport (&amp;quot;flag&amp;quot;&amp;quot;fmt&amp;quot;&amp;quot;log&amp;quot;&amp;quot;math/rand&amp;quot;&amp;quot;os&amp;quot;&amp;quot;runtime&amp;quot;&amp;quot;runtime/pprof&amp;quot;&amp;quot;time&amp;quot;)func init() {rand.</description>
    </item>
    
    <item>
      <title>go 언어용 fortune cookie package</title>
      <link>https://kasworld.github.io/posts/2015-03-21-go%EC%96%B8%EC%96%B4%EC%9A%A9fortunecookiepackage/</link>
      <pubDate>Sat, 21 Mar 2015 16:42:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-03-21-go%EC%96%B8%EC%96%B4%EC%9A%A9fortunecookiepackage/</guid>
      <description>만들고 보니 너무 간단한것이라 별로 적을 내용이 없지만..
linux/unix 계열에 들어 있는 fortune cookie 파일을 읽어 주는 패키지 입니다. 단 binary file(strfile) 인 .dat 파일이 아니고 확장자가 없는 text 파일을 읽어줍니다.
사용예는 fortune_test.go를 보시면 됩니다.
소스 코드는 https://github.com/kasworld/fortune 에 있습니다.</description>
    </item>
    
    <item>
      <title>go-sdlgui 에서 한글 표시 지원추가 </title>
      <link>https://kasworld.github.io/posts/2015-03-16-gosdlgui%EC%97%90%EC%84%9C%ED%95%9C%EA%B8%80%ED%91%9C%EC%8B%9C%EC%A7%80%EC%9B%90%EC%B6%94%EA%B0%80/</link>
      <pubDate>Mon, 16 Mar 2015 14:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-03-16-gosdlgui%EC%97%90%EC%84%9C%ED%95%9C%EA%B8%80%ED%91%9C%EC%8B%9C%EC%A7%80%EC%9B%90%EC%B6%94%EA%B0%80/</guid>
      <description>정확히 말하면 go-sdlgui 에 추가 한 것이 아니고 제가 사용하고 있는 라이브러리에 https://github.com/veandco/go-sdl2 에 utf8 표시기능을 추가 한것입니다.
일단 pull request를 보내 놓긴 했지만 위의 라이브러리가 (사용 법이) 종종 바뀌므로 branch를 하고 https://github.com/kasworld/go-sdl2 제 repository를 사용하도록 모두 수정하였습니다.
이전 글들 http://kasw.blogspot.kr/2015/02/go-tcp-server-gui-client.html http://kasw.blogspot.kr/2015/02/go-gui.html
업데이트된 GUI https://github.com/kasworld/go-sdlgui
그림이 없으면 심심하니 스크린 샷 한글 표시예 예제 컨트롤 - 아나로그 시계
ps) 같은날 저녁 - pull request가 받아져서 merge 되고 contributor 이름도 올라 갔습니다. 별거 아니지만 기분은 좋군요.</description>
    </item>
    
    <item>
      <title>goguelike ver 0.40.1 동시 접속 성능 테스트 결과 </title>
      <link>https://kasworld.github.io/posts/2015-03-11-goguelikever0401%EB%8F%99%EC%8B%9C%EC%A0%91%EC%86%8D%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC/</link>
      <pubDate>Wed, 11 Mar 2015 18:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-03-11-goguelikever0401%EB%8F%99%EC%8B%9C%EC%A0%91%EC%86%8D%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC/</guid>
      <description>기록을 위해 적습니다. 4000 클라이언트 동시 접속 ( 1000 x 4 ) 테스트
서버 와 클라이언트 가 바뀐것 같은 느낌이 들면 기분탓^^ 입니다. ( 테스트 클라이언트가 클라이언트 AI 지원을위해 메모리 사용량이 많은 탓.)
총 active object는 6000여개로 이중 2000여개는 서버사이드 AI 4000 개는 클라이언트 AI 즉 테스트중에 서버에서는 6000여개의 AO가 활발하게 활동중이었음.
클라이언트 i5-2500 3.3Ghz 4c4t 16Gbyte ram cpu 50% 정도 사용 메모리는 1000클라이언트 당 6G : 결국 넘쳤음.
서버 ( 한성 인민에어 ;; ) 하스웰 i5 4250U ( 1.</description>
    </item>
    
    <item>
      <title>go언어로 TCP server와 GUI client를 만들어 보기. </title>
      <link>https://kasworld.github.io/posts/2015-02-27-go%EC%96%B8%EC%96%B4%EB%A1%9Ctcpserver%EC%99%80guiclient%EB%A5%BC%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Fri, 27 Feb 2015 14:33:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-27-go%EC%96%B8%EC%96%B4%EB%A1%9Ctcpserver%EC%99%80guiclient%EB%A5%BC%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</guid>
      <description>3000라인 이상을 공용 package로 분리해 내고도 goguelike에 남은 코드가 아직도 9000라인이 넘기 때문에
TCP server 와 GUI client로 사용할만한 예제를 따로 만들었습니다.
결과적으로는 http://kasw.blogspot.kr/2015/02/go-tcp-serverclient.html http://kasw.blogspot.kr/2015/02/go-gui.html 을 합치는 프로그램을 만드는 것이됩니다.
원래 계획으로는 framework으로 만들어 볼 생각이 있었는데 생각보다 framework과 custom logic의 분리가 까다로운 관계로 그냥 server와 client의 예제가 되었습니다. 코드는 새로 작성된 것이지만 전체 적인 구조와 작동은 goguelike와 거의 같은 형태입니다. ( 적당히 단순화 되긴 했지만 )
예제가 하는 일은 ( logic을 가능한 단순한것으로 선택했습니다.</description>
    </item>
    
    <item>
      <title>go언어에서 tcp server/client 의 전형적 형태. - 라이브러리화.</title>
      <link>https://kasworld.github.io/posts/2015-02-24-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Ctcpserverclient%EC%9D%98%EC%A0%84%ED%98%95%EC%A0%81%ED%98%95%ED%83%9C%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%ED%99%94/</link>
      <pubDate>Tue, 24 Feb 2015 15:54:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-24-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Ctcpserverclient%EC%9D%98%EC%A0%84%ED%98%95%EC%A0%81%ED%98%95%ED%83%9C%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%ED%99%94/</guid>
      <description>이미 두곳을 통해서 부분부분은 소개 했었지만
http://kasw.blogspot.kr/2015/02/go-goroutine.html http://kasw.blogspot.kr/2015/02/goguelike.html
기존 netspeed 테스트 프로그램과 goguelike에서 사용하고 있던 tcp server/client 구조를 본격적으로 재사용 가능하게 수정한 것입니다. ( 그래봐야 간단합니다. ^^)
tcp책에 나오는 전형적인 tcp server의 구조는 대부분의 언어에서 새 process / thread를 실행하는 비용이 너무나도 큰 관계로 이론적으로 설명하는 용도로만 사용하고 실제 서비스를 만드는 데에는 사용할수 없습니다.
다만 go언어에서는 go routine이 존재 하기때문에 이 &amp;ldquo;전형적&amp;quot;인 구조가 실용가능하게 됩니다. ( 꼭 go 언어가 아니라도 python stackless, greenlet , 또는 이와 유사한 micro thread를 지원 하는 모든 언어에서 가능합니다만 이를 지원 하는 대중적 언어가 별로 없지요.</description>
    </item>
    
    <item>
      <title>go 언어로 GUI 프로그램을 만들기.</title>
      <link>https://kasworld.github.io/posts/2015-02-20-go%EC%96%B8%EC%96%B4%EB%A1%9Cgui%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Fri, 20 Feb 2015 16:02:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-20-go%EC%96%B8%EC%96%B4%EB%A1%9Cgui%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>goguelike는 애초 목표가 필요한것은 찾아 쓰고 없으면 만들어 사용한다. 였고 필요한 기능은 다중 client를 지원하는 TCP server GUI client with mouse and keyboard input server info by web auto generated terrain server and client side AI 그외 system의 contents에 해당하는 부분들 정도였습니다.
대부분의 기능은 구현이 가능했는데 go 언어용 GUI 라이브러리 만은 잘 보이지 않더군요.
실제로 검색해 보면 대부분의 GUI 라이브러리들이 만들다 만것들이거나 아니면 더이상 관리되지 않는 것들, 시험삼아 만들어 본것들 이었습니다.</description>
    </item>
    
    <item>
      <title>go언어에서 2d tile based space 용 라이브러리들.</title>
      <link>https://kasworld.github.io/posts/2015-02-19-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C2dtilebasedspace%EC%9A%A9%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%93%A4/</link>
      <pubDate>Thu, 19 Feb 2015 20:29:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-19-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C2dtilebasedspace%EC%9A%A9%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%93%A4/</guid>
      <description>제목이 저모양ㅜㅜ 인 이유가 goguelike에서 재활용성이 좋아 보이는 라이브러리를 뽑아내고 있는데 딱 저 카테고리용(그리고 뭔가 예로는 쓰기 그저 그런 ) 라이브러리 들이라 그렇습니다.
goguelike가 딱 이차원 tile기반 으로 만들어진것이라 가장 바닥을 구성하는 것들인데 기능으로 보면 꽤나 범용성이 있기에 공개/소개 합니다.
2d path finding https://github.com/kasworld/go-astar 이건 제가 만든건 아니고 다른 분이 만든것을 fork해서 살짝 추가해서 사용하고 있는 것입니다.
2차원을 다루기 위한 기본 자료구조인 좌표 처리용 2d vector (정수용) https://github.com/kasworld/ivector2d
영역을 다루기 위한 ( 역시 정수용) https://github.</description>
    </item>
    
    <item>
      <title>go 언어에서 interface의 의미.</title>
      <link>https://kasworld.github.io/posts/2015-02-17-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cinterface%EC%9D%98%EC%9D%98%EB%AF%B8/</link>
      <pubDate>Tue, 17 Feb 2015 17:45:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-17-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cinterface%EC%9D%98%EC%9D%98%EB%AF%B8/</guid>
      <description>go를 사용하다보면 처음에는 channel과 goroutine에 감동^^ 하고 나중에는 interface에 감탄하게 됩니다.
C++ 에 pure abstract class 나 java의 interface를 접한 분들은 의외로 헛갈리기 좋은것이 이 go언어의 interface입니다.
실제로 go 프로그래밍을 하다보면 처음에는 C++ 에서 header로 분리 하듯이 interface를 정의한 패키지를 분리하게 되는 데 작업을 하다보면 약간 이상한 느낌이 들기 시작합니다.
여러 패키지에서 공유하기 위해 interface 파일을 만들었는데 나중에 확인해보면 처음에 쓰려고 만든 그 패키지 말고는 아무곳에서도 사용하지 않는다는 것을 알게 되지요.</description>
    </item>
    
    <item>
      <title>요즘 Rust를 추천 하는 글들이 많이 올라오니 Go에 대해서도 추천하는 글을 써봅니다.</title>
      <link>https://kasworld.github.io/posts/2015-02-16-%EC%9A%94%EC%A6%98rust%EB%A5%BC%EC%B6%94%EC%B2%9C%ED%95%98%EB%8A%94%EA%B8%80%EB%93%A4%EC%9D%B4%EB%A7%8E%EC%9D%B4%EC%98%AC%EB%9D%BC%EC%98%A4%EB%8B%88go%EC%97%90%EB%8C%80%ED%95%B4%EC%84%9C%EB%8F%84%EC%B6%94%EC%B2%9C%ED%95%98%EB%8A%94%EA%B8%80%EC%9D%84%EC%8D%A8%EB%B4%85%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Mon, 16 Feb 2015 18:27:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-16-%EC%9A%94%EC%A6%98rust%EB%A5%BC%EC%B6%94%EC%B2%9C%ED%95%98%EB%8A%94%EA%B8%80%EB%93%A4%EC%9D%B4%EB%A7%8E%EC%9D%B4%EC%98%AC%EB%9D%BC%EC%98%A4%EB%8B%88go%EC%97%90%EB%8C%80%ED%95%B4%EC%84%9C%EB%8F%84%EC%B6%94%EC%B2%9C%ED%95%98%EB%8A%94%EA%B8%80%EC%9D%84%EC%8D%A8%EB%B4%85%EB%8B%88%EB%8B%A4/</guid>
      <description>TLDR python 에서 행복했던 분들은 Go를 C++/Java 에서 행복했던 분들은 Rust를 고민해 보는 것도 좋을 것으로 생각합니다.
go에 대한 해외의 평가는 C++을 잡으려고 go를 만들었더니 python을 잡고 있다. 라고 하더군요. ^^ C++ 프로그래머는 go로 전향하는 경우가 적은데 python 프로그래머는 go로 전향하는 비율이 꽤 높답니다.
구글+ 에 올린 http://kasw.blogspot.kr/2015/02/goguelike.html &amp;ldquo;python에서 죽어라 고생해도 달성할수 없던 것을 너무 간단히 달성해서 허탈할뿐.. &amp;quot; 이란 멘트에 달린 Go가 좋은 가요? 란 (의미의) 질문에 아무생각없이 &amp;ldquo;추천할만 합니다.</description>
    </item>
    
    <item>
      <title>go 프로그램에서 실시간 통계를 기록하고 싶을때 </title>
      <link>https://kasworld.github.io/posts/2015-02-15-go%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%97%90%EC%84%9C%EC%8B%A4%EC%8B%9C%EA%B0%84%ED%86%B5%EA%B3%84%EB%A5%BC%EA%B8%B0%EB%A1%9D%ED%95%98%EA%B3%A0%EC%8B%B6%EC%9D%84%EB%95%8C/</link>
      <pubDate>Sun, 15 Feb 2015 15:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-15-go%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%97%90%EC%84%9C%EC%8B%A4%EC%8B%9C%EA%B0%84%ED%86%B5%EA%B3%84%EB%A5%BC%EA%B8%B0%EB%A1%9D%ED%95%98%EA%B3%A0%EC%8B%B6%EC%9D%84%EB%95%8C/</guid>
      <description>goguelike의 webinfo 페이지를 보면
Stat total:4660/ 3.0/s lap:1/ 39.4/s
같은식의 실시간 통계를 볼수 있습니다. 이런식으로 어떤 행동의 총 횟수, 초당 일어난 시간(즉 평균) , 최근 횟수, 마지막 초당 횟수 등을 조사 기록하려면 꽤나 귀찮은 프로그래밍이 필요합니다.
그래서 제가 만들어 쓰는 것는 actionstat 패키지입니다.
사용 예는 https://github.com/kasworld/netspeed 의 서버 코드를 보면 됩니다만.. 간단히 적어보면
// init obj stat := actionstat.NewActionStat()// see statlog.Info(&amp;quot;%v&amp;quot;, stat)stat.UpdateLap()// update info stat.Inc()같은 형태가 됩니다.</description>
    </item>
    
    <item>
      <title>go 언어용 python-like log 모듈 </title>
      <link>https://kasworld.github.io/posts/2015-02-14-go%EC%96%B8%EC%96%B4%EC%9A%A9pythonlikelog%EB%AA%A8%EB%93%88/</link>
      <pubDate>Sat, 14 Feb 2015 12:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-14-go%EC%96%B8%EC%96%B4%EC%9A%A9pythonlikelog%EB%AA%A8%EB%93%88/</guid>
      <description>goguelike 작업을 하면서 만들어진 모듈들 중 범용성이 높은 모듈들을 정리해서 공개하는 작업을 시작합니다.
이미 기존의 글들을 통해 소개된 모듈들은 id 생성 :http://kasw.blogspot.kr/2015/01/go-serial-id.html rand : http://kasw.blogspot.kr/2015/02/go.html runstep : http://kasw.blogspot.kr/2015/02/goroutine.html
이 있습니다. - 각각의 글을 수정해서 github 링크를 추가해 두었습니다.
이번에 소개할 모듈은 pyhon log처럼 사용하는 log package입니다. log 용으로 만든 것으로 rand 때와 같이 기존 go 언어의 표준 라이브러리를 확장하는 개념으로 만든것 입니다.
만든 이유는 아무래도 python을 쓴 기간이 길다보니 python 스타일의 로그 함수가 익숙한 관계로 최대한 비슷한 느낌으로 사용할수 있게 만들어 사용 중입니다.</description>
    </item>
    
    <item>
      <title>goguelike의 네트웍 속도</title>
      <link>https://kasworld.github.io/posts/2015-02-13-goguelike%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EC%86%8D%EB%8F%84/</link>
      <pubDate>Fri, 13 Feb 2015 20:54:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-13-goguelike%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EC%86%8D%EB%8F%84/</guid>
      <description>일단 python에서 네트웍 속도로 이것 저것 해본 글들 http://kasw.blogspot.kr/search/label/wxgame
goguelike를 튜닝하던 중에 네트웍 패킷 처리량이 얼마나 되나 하고 테스트 해보니 20000 packet/sec 정도 밖에 안나와서 충격을 먹고 네트웍 부분을 집중적으로 검사및 튜닝을 한 이야기..
결론만 말하면 go 언어의 능력이면 1000 클라이언트 ( 10000클라이언트 에서도 속도 저하는 10% 이하) 에서 150000 패킷 / 초 정도를 처리 할 수 있습니다.
파이썬에선 정말로 최후까지 쥐어 짜야 60000넘기는 것도 힘들었던것에 비하면 깨끗한 구조를 유지하면서도 2.</description>
    </item>
    
    <item>
      <title>go 언어에서 여러개의 goroutine을 동시에 한단계씩 실행하기 </title>
      <link>https://kasworld.github.io/posts/2015-02-05-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98goroutine%EC%9D%84%EB%8F%99%EC%8B%9C%EC%97%90%ED%95%9C%EB%8B%A8%EA%B3%84%EC%94%A9%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 05 Feb 2015 10:01:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-05-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98goroutine%EC%9D%84%EB%8F%99%EC%8B%9C%EC%97%90%ED%95%9C%EB%8B%A8%EA%B3%84%EC%94%A9%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0/</guid>
      <description>2015-02-24 추가 구글+ Jae-min Park 님께서 제가 잘못알고 있던부분을 알려주셨습니다. sync 의 waitgroup은 goroutine의 종료를 wait하는 것이 아니고 Done을 wait하는 것이므로 충분히 아래의 코드를 대치하는 것이 가능한 듯합니다. ( 결국 아래 코드는 뻘짓인 셈입니다. ^^;; )
Jae-min Park, Jongmin Kim 께 감사드립니다.
RunStep 과 sync.groupwait의 차이는 실행/완료시 인자를 전달 할수 있느냐 + 각각 step을 제어 할것이냐 아니면 group으로 제어 할것이냐 의 차이가 있어 용도에 맞게 쓰면 될것 같기도 합니다.
이하 원문입니다.</description>
    </item>
    
    <item>
      <title>go 언어에서 profiling 하기</title>
      <link>https://kasworld.github.io/posts/2015-02-04-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cprofiling%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 04 Feb 2015 10:18:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-04-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cprofiling%ED%95%98%EA%B8%B0/</guid>
      <description>python도 그렇지만 go언어도 기본적으로 profiler를 제공합니다만, 정작 쓰려면 약간 귀찮은 관계로 제가 만들어 두고 거의 cut/paste 해서 사용하는 방법입니다.
아래 코드는 간단한 프로그램을 짤때 복사해 쓰는 파일의 내용입니다. 뭔가 파일 하나 짜리 프로그램을 짜서 테스트 할때 사용하곤 합니다.
이 자체로도 실행가능한 형태이며 그냥 실행하면 프로파일링이 실행되진 않고 더 아래에 있는 쉘 스크립트를 사용하거나 인자로 -pfilename을 주면 됩니다.
실행이 끝나면 자동으로 프로파일러가 실행되어 command를 기다리는 형태가 됩니다.
간단하게 프로파일 결과를 보고 싶으면 top30 같은 형태로 top + 수자 ( 빈칸 없이) 를 실행하면 됩니다.</description>
    </item>
    
    <item>
      <title>go 언어에서 동시에 실행되는 goroutine의 수를 제어 하기.</title>
      <link>https://kasworld.github.io/posts/2015-02-03-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EB%8F%99%EC%8B%9C%EC%97%90%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94goroutine%EC%9D%98%EC%88%98%EB%A5%BC%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0/</link>
      <pubDate>Tue, 03 Feb 2015 09:43:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-03-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%EB%8F%99%EC%8B%9C%EC%97%90%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94goroutine%EC%9D%98%EC%88%98%EB%A5%BC%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0/</guid>
      <description>goguelike용 loadtester를 만들면서 사용하는 방법입니다.
loadtester는 일정시간동안 서버에 클라이언트로 접속해서 부하를 주는 프로그램으로 부하를 주는 시간과 동시에 몇개의 connection을 사용할것인지를 인자로 받습니다. 서버 입장에서는 하나 하나가 실제 user처럼 보이게 되는 것이 중요하고, 따라서 loadtester는 UI가 없는 dummy client와 client side AI를 사용하게 됩니다. 그리고 또 중요한 것이 부하를 거는 시간 내내 접속을 유지 하는 것이 아니라 각 dummy client를 무작위 시간동안 작동한후 connection을 종료 합니다. 그러면 loadtester는 이를 감지한후 새 dummy client를 실행 접속해야 합니다.</description>
    </item>
    
    <item>
      <title>go 언어에서 function object 사용하기. 반복루프 위임 패턴? (delegate loop)</title>
      <link>https://kasworld.github.io/posts/2015-02-02-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cfunctionobject%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0%EB%B0%98%EB%B3%B5%EB%A3%A8%ED%94%84%EC%9C%84%EC%9E%84%ED%8C%A8%ED%84%B4delegateloop/</link>
      <pubDate>Mon, 02 Feb 2015 10:19:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-02-go%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9Cfunctionobject%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0%EB%B0%98%EB%B3%B5%EB%A3%A8%ED%94%84%EC%9C%84%EC%9E%84%ED%8C%A8%ED%84%B4delegateloop/</guid>
      <description>이것 역시 대단한 팁이라긴 뭐합니다만 &amp;ldquo;작업하다 보니 이런 형태의 코드를 많이 짜고 있더라&amp;rdquo; 입니다. 주로 나오는 형태는 array/slice 들의 내용에서 조건에 맞는 뭔가를 찾아야 하는 경우에 쓰게 되더군요.
그중에 제일 짧은 코드를 예로 보면
//startvar Dir2Info = []struct {Name stringVt [2]intLen float64}{Dir_stop: {&amp;quot;.&amp;quot;, [2]int{0, 0}, 0.0},Dir_n: {&amp;quot;N&amp;quot;, [2]int{0, -1}, 1.0},Dir_ne: {&amp;quot;NE&amp;quot;, [2]int{1, -1}, 1.4},Dir_e: {&amp;quot;E&amp;quot;, [2]int{1, 0}, 1.0},Dir_se: {&amp;quot;SE&amp;quot;, [2]int{1, 1}, 1.</description>
    </item>
    
    <item>
      <title>go 언어를 사용하면서 표준 라이브러리를 확장하고 싶을때.</title>
      <link>https://kasworld.github.io/posts/2015-02-01-go%EC%96%B8%EC%96%B4%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C%ED%91%9C%EC%A4%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC%ED%99%95%EC%9E%A5%ED%95%98%EA%B3%A0%EC%8B%B6%EC%9D%84%EB%95%8C/</link>
      <pubDate>Sun, 01 Feb 2015 11:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-01-go%EC%96%B8%EC%96%B4%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C%ED%91%9C%EC%A4%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC%ED%99%95%EC%9E%A5%ED%95%98%EA%B3%A0%EC%8B%B6%EC%9D%84%EB%95%8C/</guid>
      <description>너무 간단해서 적기도 뭐한 팁이지만
가끔씩 표준 라이브러리가 제공하는 struct( class 가 아니지요 ^^) 를 확장해서 내가 필요한 함수들을 추가 하고 싶을때가 있습니다.
goguelike 에선 표준 분포에 따른 랜덤 함수를 상당히 많이 사용하는데 표준 라이브러리는 기초적인 함수만을 제공하여 더 쓰기 편한 형태의 함수를 추가해서 사용하고 있습니다.
기본적으로는 go 언어의 embedded field를 사용하는 것이고 이것을 통해서 embedded된 struct가 제공하는 함수들이외에도 원하는 함수를 추가해 사용할수 있습니다.
//startpackage randimport (r &amp;quot;math/rand&amp;quot;&amp;quot;time&amp;quot;)type Rand struct {*r.</description>
    </item>
    
    <item>
      <title>go언어를 사용하면서 주의 할 부분 </title>
      <link>https://kasworld.github.io/posts/2015-01-31-go%EC%96%B8%EC%96%B4%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C%EC%A3%BC%EC%9D%98%ED%95%A0%EB%B6%80%EB%B6%84/</link>
      <pubDate>Sat, 31 Jan 2015 14:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-01-31-go%EC%96%B8%EC%96%B4%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C%EC%A3%BC%EC%9D%98%ED%95%A0%EB%B6%80%EB%B6%84/</guid>
      <description>1. struct embedding 한 경우 embeded struct에 exported filed 가 없으면 embeding한 struct를 gob encode를 할수 없다. ( type xxx has no exported fields 에러가남 ) 간단한 해결책은 dummy exported field를 추가 하는 것이다. ( 좀 보기 싫긴 하지만 )
type AAA BBB 형태로 정의한 경우 AAA 형 변수와 BBB 형 변수는 대입조차 안되지만 ( 에러가 남 ) 함수 인자로는 사용할수 있다. 즉 AAA를 받는 함수에 BBB 형 변수를 인자로 사용 할수 있다.</description>
    </item>
    
    <item>
      <title>go 언어를 사용 할때  자주 쓰게 되는 코드 패턴들. serial ID 생성 </title>
      <link>https://kasworld.github.io/posts/2015-01-30-go%EC%96%B8%EC%96%B4%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C%EC%9E%90%EC%A3%BC%EC%93%B0%EA%B2%8C%EB%90%98%EB%8A%94%EC%BD%94%EB%93%9C%ED%8C%A8%ED%84%B4%EB%93%A4serialid%EC%83%9D%EC%84%B1/</link>
      <pubDate>Fri, 30 Jan 2015 23:06:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-01-30-go%EC%96%B8%EC%96%B4%EB%A5%BC%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C%EC%9E%90%EC%A3%BC%EC%93%B0%EA%B2%8C%EB%90%98%EB%8A%94%EC%BD%94%EB%93%9C%ED%8C%A8%ED%84%B4%EB%93%A4serialid%EC%83%9D%EC%84%B1/</guid>
      <description>package id
var genCh chan int64func init() {genCh = make(chan int64)go func() {var i int64for {i++genCh &amp;lt;- i}}()}func GenCh() &amp;lt;-chan int64 {return genCh}과 같이 쓰면 goroutine safe 한 id 생성기를 사용할수 있습니다.
실제 위 코드는 goguelike 의 id module의 일부 코드이기도 합니다.
사용할때는
objid := &amp;lt;-id.GenCh()과 같은 형태를 사용하면 됩니다.
genCh 변수를 글로벌 변수 GenCh로 선언하지 않고 로컬 변수로 선언 한것은 다른 모듈에서 수정할 가능성을 막기 위해서 이며,</description>
    </item>
    
    <item>
      <title>blogger에 프로그램 코드를 넣기 테스트.</title>
      <link>https://kasworld.github.io/posts/2015-01-08-blogger%EC%97%90%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%BD%94%EB%93%9C%EB%A5%BC%EB%84%A3%EA%B8%B0%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Thu, 08 Jan 2015 21:04:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-01-08-blogger%EC%97%90%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%BD%94%EB%93%9C%EB%A5%BC%EB%84%A3%EA%B8%B0%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <description>type DoFn func(int, int) bool
func Call8WayTile(ox, oy int, fn DoFn) []uint8 {TileDirs := []uint8{}for i := uint8(1); i &amp;lt;= 8; i++ {x, y := ox+Dir2Info[i].Vt[0], oy+Dir2Info[i].Vt[1]if fn(x, y) {TileDirs = append(TileDirs, i)}}return TileDirs}잘되는 군요. ^^ https://code.google.com/p/google-code-prettify/wiki/GettingStarted
golang도 잘 지원 되는 것 같이 보입니다. ( 일단은 )</description>
    </item>
    
    <item>
      <title>go testing 패키지 사용중 주의점 </title>
      <link>https://kasworld.github.io/posts/2014-12-03-gotesting%ED%8C%A8%ED%82%A4%EC%A7%80%EC%82%AC%EC%9A%A9%EC%A4%91%EC%A3%BC%EC%9D%98%EC%A0%90/</link>
      <pubDate>Wed, 03 Dec 2014 17:23:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-12-03-gotesting%ED%8C%A8%ED%82%A4%EC%A7%80%EC%82%AC%EC%9A%A9%EC%A4%91%EC%A3%BC%EC%9D%98%EC%A0%90/</guid>
      <description>go 언어는 테스팅을 위한 전용 패키지 testing을 가지고 있어 아주 유용하게 사용할수 있습니다.
다만 이를 사용할때는 source code의 naming rule을 따라야 하는데 테스트할소스코드이름_test.go 형태를 지켜야 합니다.
이를 지키지 않으면 flag 패키지를 사용해서 command line argument를 받는 프로그램 작성시 -? 등으로 command line help를 보게 되면
-test.bench=&amp;quot;&amp;quot;: regular expression to select benchmarks to run -test.benchmem=false: print memory allocations for benchmarks -test.benchtime=1s: approximate run time for each benchmark -test.blockprofile=&amp;quot;&amp;quot;: write a goroutine blocking profile to the named file after execution -test.</description>
    </item>
    
    <item>
      <title>개발할때 필요한 최신 버전 개발 툴들을 추가하기. - 계속 업데이트 예정 </title>
      <link>https://kasworld.github.io/posts/2014-11-30-%EA%B0%9C%EB%B0%9C%ED%95%A0%EB%95%8C%ED%95%84%EC%9A%94%ED%95%9C%EC%B5%9C%EC%8B%A0%EB%B2%84%EC%A0%84%EA%B0%9C%EB%B0%9C%ED%88%B4%EB%93%A4%EC%9D%84%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0%EA%B3%84%EC%86%8D%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%EC%98%88%EC%A0%95/</link>
      <pubDate>Sun, 30 Nov 2014 23:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-11-30-%EA%B0%9C%EB%B0%9C%ED%95%A0%EB%95%8C%ED%95%84%EC%9A%94%ED%95%9C%EC%B5%9C%EC%8B%A0%EB%B2%84%EC%A0%84%EA%B0%9C%EB%B0%9C%ED%88%B4%EB%93%A4%EC%9D%84%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0%EA%B3%84%EC%86%8D%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%EC%98%88%EC%A0%95/</guid>
      <description>아무래도 표준 ubuntu/mint repository는 약간 보수적으로 안전한 패키지만이 추가 되어 있는 관계로 최신 개발 툴을 사용하려면 따로 설치를 해야 해서 메모겸 정리 하고 있는 포스트.
node.js https://github.com/nodesource/distributions curl -sL https://deb.nodesource.com/setup | sudo bash -
pypy https://launchpad.net/~pypy/+archive/ubuntu/ppa sudo add-apt-repository ppa:pypy/ppa
blender https://launchpad.net/~irie/+archive/ubuntu/blender sudo add-apt-repository ppa:irie/blender
추가로 CUDA toolkit 설치 sudo apt-get install nvidia-cuda-toolkit
아직 좀 갈길이 멀어 보이지만 앞으로가 기대 되는 atom editor http://www.webupd8.org/2014/05/install-atom-text-editor-in-ubuntu-via-ppa.html sudo add-apt-repository ppa:webupd8team/atom
주 editor로는 sublime 2를 사용하지만 보조용으로 gvim과 함께 활약하는 geany https://launchpad.</description>
    </item>
    
    <item>
      <title>pycrust의 split 이 가로로 되는 것을 세로로 바꾸기. </title>
      <link>https://kasworld.github.io/posts/2014-11-28-pycrust%EC%9D%98split%EC%9D%B4%EA%B0%80%EB%A1%9C%EB%A1%9C%EB%90%98%EB%8A%94%EA%B2%83%EC%9D%84%EC%84%B8%EB%A1%9C%EB%A1%9C%EB%B0%94%EA%BE%B8%EA%B8%B0/</link>
      <pubDate>Fri, 28 Nov 2014 20:38:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-11-28-pycrust%EC%9D%98split%EC%9D%B4%EA%B0%80%EB%A1%9C%EB%A1%9C%EB%90%98%EB%8A%94%EA%B2%83%EC%9D%84%EC%84%B8%EB%A1%9C%EB%A1%9C%EB%B0%94%EA%BE%B8%EA%B8%B0/</guid>
      <description>pycrust는 wxpython에 따라오는 ( wxtools 에있음 ) interactive python shell로 ipython을 쓰기 전에 잘 쓰던 것이었습니다.
최근 ipython 이 살짝 이상해진 관계로 다시 pycrust를 쓰고 있는데 역시 wide 화면에서 가로 분할 윈도우는 짜증 나는 관계로 수정을 시도 하였습니다.
패치가 이루어진 다음엔
과 같이 와이드 화면에 어울리게 된 것을 볼 수 있습니다. /usr/lib/python2.7/dist-packages/wx-2.8-gtk2-unicode/wx/py 에 존재하는 crust.py 내의
self.SplitHorizontally(self.shell, self.notebook, -self.sashoffset) 를 self.SplitVertically(self.shell, self.notebook, -self.sashoffset) 로 바꾸면 됩니다.
( 두번 나옵니다. , _CheckShouldSplit 와 ToggleTools 함수 )</description>
    </item>
    
    <item>
      <title>한글 identifier 를 지원 하는 언어에서 한글로 프로그램 짜기.</title>
      <link>https://kasworld.github.io/posts/2014-11-26-%ED%95%9C%EA%B8%80identifier%EB%A5%BC%EC%A7%80%EC%9B%90%ED%95%98%EB%8A%94%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%ED%95%9C%EA%B8%80%EB%A1%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%A7%9C%EA%B8%B0/</link>
      <pubDate>Wed, 26 Nov 2014 09:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-11-26-%ED%95%9C%EA%B8%80identifier%EB%A5%BC%EC%A7%80%EC%9B%90%ED%95%98%EB%8A%94%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C%ED%95%9C%EA%B8%80%EB%A1%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%A7%9C%EA%B8%B0/</guid>
      <description>요즘 나오는 언어들은 프로그램 내의 identifier이름으로 unicode 를 지원 하는 경우가 많습니다. http://rosettacode.org/wiki/Unicode_variable_names
애초에 새로 언어를 디자인 하면서 이를 지원하지 않게 디자인 하는게 이상한것이겠지요.
아마 제가 처음으로 한글 변수 명 한글 함수명이 사용 가능한것을 보게 된것은 java 였던 것 같습니다. 뭐 그전에 &amp;ldquo;씨앗&amp;quot;이라고 하는 한글 프로그래밍 언어도 있었습니다만..
그래서 이제는 unicode를 지원하니 이제는 맘껏 한글 이름 변수명과 함수명 클래스 이름을 사용해도 좋을까 하는것이 주제 입니다.
그 전에 잠시 집고 넘어갈것이 있는데, 회사에서 프로그램을 작성할때 한글 이름 파일명을 사용하는지 궁금합니다.</description>
    </item>
    
    <item>
      <title>goguelike:baised 진행사항 </title>
      <link>https://kasworld.github.io/posts/2014-11-24-goguelikebaised%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</link>
      <pubDate>Mon, 24 Nov 2014 20:45:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-11-24-goguelikebaised%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</guid>
      <description>딱히 외적으로 변화한 부분이 없는 관계로 포스팅이 뜸했습니다만..
내부적으로는 격변이라고 할 만큼의 수정이 있었습니다. ( 거의 모든 코드가 수정된 듯. )
기본적으로는 기존의 코드를 모두 refactoring해서 30여개의 모듈로 분리하는 작업이 완료 되었습니다.
그리고 client AI 를 위한 a-star 모듈과 이를 사용한 client AI 작업이 진행되었고 또 이를 이용한 loadtester 역시 만들었습니다.
클라이언트 쪽 변경사항이라면 서버와 같이 모듈화 작업이 진행되면서 다양한 형태의 클라이언트를 만들기 위한 clientbase 모듈을 만들고 이를 sdlclient 와 loadtester에 적욯하였습니다.</description>
    </item>
    
    <item>
      <title>오랫만에 리눅스가 말썽을 일으킨 이야기. - 기록용 </title>
      <link>https://kasworld.github.io/posts/2014-11-19-%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90%EB%A6%AC%EB%88%85%EC%8A%A4%EA%B0%80%EB%A7%90%EC%8D%BD%EC%9D%84%EC%9D%BC%EC%9C%BC%ED%82%A8%EC%9D%B4%EC%95%BC%EA%B8%B0%EA%B8%B0%EB%A1%9D%EC%9A%A9/</link>
      <pubDate>Wed, 19 Nov 2014 23:46:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-11-19-%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90%EB%A6%AC%EB%88%85%EC%8A%A4%EA%B0%80%EB%A7%90%EC%8D%BD%EC%9D%84%EC%9D%BC%EC%9C%BC%ED%82%A8%EC%9D%B4%EC%95%BC%EA%B8%B0%EA%B8%B0%EB%A1%9D%EC%9A%A9/</guid>
      <description>요즘 linux container 가 유행이라서 테스트나해볼까하고 (docker와 쌍벽을 이루고 있는? ) lxc를 설치해봤습니다.
최신 버전을 찾아서 ppa를 추가 하는 식으로 설치할수도 있겠지만 요즘은 패키지 설치를 좀 보수적으로 하고 있는 편이라 기본 repository 에서 검색을 해보고 있기에 그것을 설치했습니다.
저녁 약속이 있어서 나가야 하기에 설치만 하고 종료를 했는데 깜빡한 것이 있어 처리 하기 위해 컴퓨터를 켰는데&amp;hellip;
grub화면이 지나고 mint부팅 화면에서 멈춰 있기에 esc를 눌러서 부팅 콘솔을 봤더니
scanning for btrfs file systems</description>
    </item>
    
    <item>
      <title>go 언어로 만든 코드를 웹 브라우저에서 실행하기</title>
      <link>https://kasworld.github.io/posts/2014-11-05-go%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%A0%EC%BD%94%EB%93%9C%EB%A5%BC%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90%EC%84%9C%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 05 Nov 2014 11:43:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-11-05-go%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%A0%EC%BD%94%EB%93%9C%EB%A5%BC%EC%9B%B9%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90%EC%84%9C%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0/</guid>
      <description>asm.js를 보다가 갑자기 궁금해져서 기록삼아 적는 포스트
google 의 chrome/V8 에 이어서 mozilla 가 야심차게 밀고 있는 http://asmjs.org/ : http://ejohn.org/blog/asmjs-javascript-compile-target/ 와 이를 활용하는 http://kripken.github.io/emscripten-site/
등이 나오고 있는 와중에
요즘 주로 작업하고 있는 golang도 이 대세에 동참할수 있을까 하고 찾아본 기록들 .
더이상 개발이 진행되고 있지 않은 https://github.com/kless/go2js
emscripten 은 llvm 을 asm.js로 변환 하는 프로젝트이니 go 를 llvm으로 변환 하는 ( Go -&amp;gt; LLVM -&amp;gt; Emscripten -&amp;gt; asm.js ) https://github.com/axw/llgo</description>
    </item>
    
    <item>
      <title>goguelike:Biased의 테스트 버전을 릴리즈 했습니다. </title>
      <link>https://kasworld.github.io/posts/2014-10-23-goguelikebiased%EC%9D%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%B2%84%EC%A0%84%EC%9D%84%EB%A6%B4%EB%A6%AC%EC%A6%88%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 23 Oct 2014 16:51:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-10-23-goguelikebiased%EC%9D%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%B2%84%EC%A0%84%EC%9D%84%EB%A6%B4%EB%A6%AC%EC%A6%88%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>지난 몇일간 릴리즈를 위한 작업을 진행했습니다.
아직 완성된 것은 아니지만 실행해 볼수 있는 테스트 버전을 릴리즈 합니다.
일단 앞으로 goguelike관련 포스팅은 모두 http://goguelike.blogspot.kr/
에 올릴 예정입니다.
일단 실행 가능한 바이너리만 릴리즈 했으며 소스의 공개는 현재로서는 예정이 없습니다. 클라이언트인 sdlclient 와 서버 접속 라이브러리인 goguelib은 좀 정리가 되면 해볼까 고민 중입니다.
map editor인 edittower는 공개할만한 수준이 못되어 이번 릴리즈에서는 빠졌습니다.</description>
    </item>
    
    <item>
      <title>goguelike map editor </title>
      <link>https://kasworld.github.io/posts/2014-10-17-goguelikemapeditor/</link>
      <pubDate>Fri, 17 Oct 2014 16:56:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-10-17-goguelikemapeditor/</guid>
      <description>지난 주 부터 작업해오고 있던 맵 에디터가 일단 작동하는 수준 까지 만들어 졌습니다. 에디터에는 여러가지 gui component 가 필요해서 무엇을 사용할까 계속 고민 하고 있었습니다만, 아무리 찾아보고 고민해봐도 클라이언트 라이브러리가 적당한 것이 없어서 결국 웹으로 만들어 보기로 결정하는 데 까지도 꽤 오래 걸렸습니다.
에디터가 아닌 클라이언트는 sdl 기반 라이브러리를 사용하였는데 이 것은 그야말로 간단한 그래픽 기능만 있는 것으로 각종 gui control을 지원 하지 않습니다.
게다가 이 sdl 라이브러리는 go의 goroutine 사용에도 여러 제약이 있는 관계로 서버 기능을 사용해야 하는 에디터용으로는 부적합하더군요.</description>
    </item>
    
    <item>
      <title>python/golang의 web framework전쟁.</title>
      <link>https://kasworld.github.io/posts/2014-10-16-pythongolang%EC%9D%98webframework%EC%A0%84%EC%9F%81/</link>
      <pubDate>Thu, 16 Oct 2014 21:13:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-10-16-pythongolang%EC%9D%98webframework%EC%A0%84%EC%9F%81/</guid>
      <description>(제목은 반이상 낚시성 )
블로그에 쓰기는 좀 정리가 덜된 글이라 페북에 끄적끄적 하려다 길어 질것 같아 블로그로 작업. ^^ ( 그래서 반말 투입니다. )
golang의 매력에 푸~~욱 빠져서 조강지처 python을 버리고(?) golang으로만 작업을 하고 있는 중에 web작업을 할일이 생겨 golang용 web framework을 찾아보다 생각난 것들..
python에서는 django 가 대규모 작업 시장에서 절대 강자의 위치를 차지하고 있는중에 ( 대항마이었던 turbogear를 귀도가 죽여 버려서) flask가 호시탐탐 기회를 노리고 있고 web2py라고 하는 걸출한 all-in-one이 신규 개발자를 노리고 있는 상황이었다면 .</description>
    </item>
    
    <item>
      <title>goguelike 성능 테스트 </title>
      <link>https://kasworld.github.io/posts/2014-10-09-goguelike%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Thu, 09 Oct 2014 13:57:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-10-09-goguelike%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <description>지난주 이번주 동안 기본적인 서버/클라이언트의 안정화가 이루어져서 성능테스트를 해가면서 튜닝을 하고 있는 중입니다.
방금 끝낸 테스트를 기록차원에서 적어보면 사용 기계 cpu i2500 ( 4c4t ) , ram 16Gbyte에서 서버는 각 클라이언트당 5패킷 / 초 모드로 작동중이고 5000 클라이언트 시뮬레이터를 다른 기계에서 실행한 결과 입니다.
goguelike 13:41:44 server.go:169: tower test1 frame total:3801/ 4.0/s lap:5/ 4.8/s, gotoutine 5025 goguelike 13:41:44 server.go:173: floor0 AO(72/2232) PO(42/561) Packet(0/1157) goguelike 13:41:44 server.go:173: floor1 AO(69/2401) PO(42/630) Packet(5/2024) goguelike 13:41:44 server.</description>
    </item>
    
    <item>
      <title>goguelike 상태 정보의 추가및 간단 설명. </title>
      <link>https://kasworld.github.io/posts/2014-09-27-goguelike%EC%83%81%ED%83%9C%EC%A0%95%EB%B3%B4%EC%9D%98%EC%B6%94%EA%B0%80%EB%B0%8F%EA%B0%84%EB%8B%A8%EC%84%A4%EB%AA%85/</link>
      <pubDate>Sat, 27 Sep 2014 14:34:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-09-27-goguelike%EC%83%81%ED%83%9C%EC%A0%95%EB%B3%B4%EC%9D%98%EC%B6%94%EA%B0%80%EB%B0%8F%EA%B0%84%EB%8B%A8%EC%84%A4%EB%AA%85/</guid>
      <description>동영상으로 보면 색감도 이상하고 해서 스샷을 올려봅니다. 상태 정보를 간단하게 설명하면 맨 위로부터 현재 타워의 이름 , 층(floor) 번호, 층 종류 사용자의 faction(자동으로 지정된 bias 그룹) , karma ( 자신의 bias와 faction간의 차이 ) action point( 행동력 ), hp ( 생명력 ) , 위치 , 현위치의 타일 종류 수동/자동 모드 , 사용자가 선택한 행동 + 방향 현재 층을 얼마나 발견 했는가 % , 죽은 수 , 킬 수 공격력( bias ) , 방어력 ( bias ) 8개 위치의 장비 및 공/방 영향 ( Attack/Defence ) 위칭으로 가는 계단 위치 ( 발견시 표시 ) , 아랫층으로 가는 계단위치 (발견시 표시 ) hp bar , 미니맵 , ap bar ( hp/ap는 중요한 값이라 잘보이게 bar로 표시 )</description>
    </item>
    
    <item>
      <title>goguelike 클라이언트를 개선하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2014-09-25-goguelike%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A5%BC%EA%B0%9C%EC%84%A0%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 25 Sep 2014 11:34:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-09-25-goguelike%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A5%BC%EA%B0%9C%EC%84%A0%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>reference 구현이라고는 해도 보기 좋고 쓰기 좋아야 한다고 생각해서 손을 대고 있는데 생각보다 손볼곳도 많고 시간도 꽤 들어가고 있습니다.
일단 grid를 추가하고 이전에 시야에 들어 왔던 부분은 현재 시야에서 안보이더라도 화면에 약간 어둡게 표시하도록 수정했는데 이것 만으로도 많이 좋아 보이게 되더군요. ^^</description>
    </item>
    
    <item>
      <title>goguelike 클라이언트 개선 </title>
      <link>https://kasworld.github.io/posts/2014-09-23-goguelike%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EA%B0%9C%EC%84%A0/</link>
      <pubDate>Tue, 23 Sep 2014 22:17:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-09-23-goguelike%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EA%B0%9C%EC%84%A0/</guid>
      <description>이런 저런 시도후에 제일 보기 좋은 형태를 찾았습니다. 화면 표시와는 별개로 아직 조작감은 좀 떨어지는 문제가 있지만 일단 이런 형태로 개선해 나갈 생각입니다.</description>
    </item>
    
    <item>
      <title>클라이언트/서버로 완전 분리한 goguelike </title>
      <link>https://kasworld.github.io/posts/2014-09-22-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%84%9C%EB%B2%84%EB%A1%9C%EC%99%84%EC%A0%84%EB%B6%84%EB%A6%AC%ED%95%9Cgoguelike/</link>
      <pubDate>Mon, 22 Sep 2014 12:43:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-09-22-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%84%9C%EB%B2%84%EB%A1%9C%EC%99%84%EC%A0%84%EB%B6%84%EB%A6%AC%ED%95%9Cgoguelike/</guid>
      <description>그리고 추가로 클라이언트의 움직임을 부드럽게 만드는 시도를 하고 있는 중인데 꽤 까다롭습니다.
일단 모든 좌표는 타일단위의 좌표인데 이것을 그대로 적용하면 이동이 뚝뚝 끊어지듯 이루어져서 계속 보고 있으면 멀미가 나더군요. 그래서 일단 여러가지로 보정해서 부드럽게 타일간을 미끄러지도록 하는 시도를 하고 있습니다. 그리고 전체 시야의 이동도 타일단위가 아닌 중간 보간을 통한 스크롤을 하도록 해봤습니다.
그래도 예상한 쪽이 아닌 다른 방항으로 이동하는 경우 끊기는 움직임이 보이는 것은 어쩔수 없군요.
C/S 완전 분리는 이번이 처음 해보는 것도 아니고 처음 설계시 부터 준비하고 있던 것이라 예상보다 일찍 수일 만에 완료 되었습니다.</description>
    </item>
    
    <item>
      <title>goguelike 진행사항 </title>
      <link>https://kasworld.github.io/posts/2014-09-15-goguelike%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</link>
      <pubDate>Mon, 15 Sep 2014 17:30:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-09-15-goguelike%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD/</guid>
      <description>13일 동영상
15일 동영상
일단 karma 가 추가 되었고 , 장착 가능한 아이템들(그림은 아직 없지만) 그리고 ai 끼리의 전투가 추가 되었습니다.
기본적으로 상대방이 system ai인지 사람인지 구별을 하지 않는(못하는) 시스템으로 계획하고 있기에 사람끼리의 전투도 같은 형태입니다.
지금은 테스트 용이라 frame이 좀 빠릅니다만 실제 사용자가 control 하려면 속도를 좀 낮춰야 할것 같습니다.
동영상에서 오른쪽에 나오는 글 정보를 참고하시면 도움이 될듯 합니다.
그리고 층간 이동시 효과가 없어서 효과를 추가했습니다.</description>
    </item>
    
    <item>
      <title>goguelike 미로 지형 - 얼음 마을 지형 </title>
      <link>https://kasworld.github.io/posts/2014-08-30-goguelike%EB%AF%B8%EB%A1%9C%EC%A7%80%ED%98%95%EC%96%BC%EC%9D%8C%EB%A7%88%EC%9D%84%EC%A7%80%ED%98%95/</link>
      <pubDate>Sat, 30 Aug 2014 18:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-08-30-goguelike%EB%AF%B8%EB%A1%9C%EC%A7%80%ED%98%95%EC%96%BC%EC%9D%8C%EB%A7%88%EC%9D%84%EC%A7%80%ED%98%95/</guid>
      <description>보기만 해도 숨막히는 표준 - 미로 지형 입니다.
AP에 따른 행동 제약 - @ 끼리의 진로 방해 가능 + faction-skill 준비까지 진행되었습니다.
추가로 ice-town 지형 동영상입니다. 지형에 따라 ap가 줄어들어 이동에 제약이 생기는 것을 볼수 있습니다.</description>
    </item>
    
    <item>
      <title>goguelike 미니맵 추가 </title>
      <link>https://kasworld.github.io/posts/2014-08-29-goguelike%EB%AF%B8%EB%8B%88%EB%A7%B5%EC%B6%94%EA%B0%80/</link>
      <pubDate>Fri, 29 Aug 2014 20:10:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-08-29-goguelike%EB%AF%B8%EB%8B%88%EB%A7%B5%EC%B6%94%EA%B0%80/</guid>
      <description>표준 - 필드 타입 플로어 에서의 random walk
다른 윈도우로 맵을 보려니 불편해서 미니맵을 추가 했습니다. 그리고 동영상을 보시면 지형에 따라 이동속도가 다른 것을 보실수 있습니다.
준비하고 있는 플로어 타입은 도시, 마을, 필드 , 미로 표준, 불, 물 , 얼음, 땅, 공백 타입입니다. 조합해서 24 가지 파라메터를 기본으로 지형을 생성합니다.</description>
    </item>
    
    <item>
      <title>goguelike - adventure of @ </title>
      <link>https://kasworld.github.io/posts/2014-08-28-goguelikeadventureof/</link>
      <pubDate>Thu, 28 Aug 2014 18:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-08-28-goguelikeadventureof/</guid>
      <description>가제 goguelike - adventure of @ 의 스샷입니다.
추가된 미니? 맵
창을 통해서 집내부를 보는 상황 + 불 지형에서 가시거리가 제한 되는 상황
20개의 faction ( 동일 성향 집단 )을 만들었고, 그 faction에 따라 타 active object(user) 과의 관계가 형성되며 , passive object에도 faction을 부여하여 강화 또는 방해 효과를 줄수 있도록 했습니다.
동영상 ( 좀 깁니다. ) 과 동영상 촬영시 만들어진 미니맵</description>
    </item>
    
    <item>
      <title>만들고 있는 것의 상태2 : &#34;@&#34;의 모험 </title>
      <link>https://kasworld.github.io/posts/2014-08-25-%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B2%83%EC%9D%98%EC%83%81%ED%83%9C2%EC%9D%98%EB%AA%A8%ED%97%98/</link>
      <pubDate>Mon, 25 Aug 2014 15:50:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-08-25-%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B2%83%EC%9D%98%EC%83%81%ED%83%9C2%EC%9D%98%EB%AA%A8%ED%97%98/</guid>
      <description>^^;;
일단은 nethack 과 classic ultima 사이의 어딘가 가 될것 같습니다.
자동 생성 지형 + 방(집?) + 방을 연결하는 길 + 테라스 불,마그마,땅,물,얼음,(높은)돌벽, 창문(낮은 벽), 돌길, 열린문, 닫힌문, 잠긴 문 땅에 떨어져 있는 아이템, 돌아다니는 user . 사방으로 무한 반복되는 floor 여러 플로어로 이루어진 tower (들) 정도의 구성 요소를 가질 계획 입니다.
만들어질 서비스의 종류는 Role Playing Simulator. 줄여서 RPS ^^ 또는 (+system을 해서 ) RPSS
제작자의 특성상 Game이라기 보단 로그인 해서 사용하는( use , not play) simulator 가 될것 같습니다.</description>
    </item>
    
    <item>
      <title>요즘 제가 만들고 있는 것</title>
      <link>https://kasworld.github.io/posts/2014-08-20-%EC%9A%94%EC%A6%98%EC%A0%9C%EA%B0%80%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B2%83/</link>
      <pubDate>Wed, 20 Aug 2014 11:32:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-08-20-%EC%9A%94%EC%A6%98%EC%A0%9C%EA%B0%80%EB%A7%8C%EB%93%A4%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B2%83/</guid>
      <description>클라이언트 프로토타입 랜덤워크 지형 생성 기반 데이터 시각화 생성된 지형 ( 표준 도시형 )
궁금해 하시는 분도 있는 것 같아서 올려 봅니다. 기본 적으로 online server - client , 턴제 , tile 기반의 floor, 자동 생성 지형등을 특징으로 하는 것일 예정입니다. 아직 클라이언트 그래픽이 없는 관계로 위와 같은 모양입니다.</description>
    </item>
    
    <item>
      <title>민트로 전환한 후 이런 저런 기록들입니다. </title>
      <link>https://kasworld.github.io/posts/2014-07-21-%EB%AF%BC%ED%8A%B8%EB%A1%9C%EC%A0%84%ED%99%98%ED%95%9C%ED%9B%84%EC%9D%B4%EB%9F%B0%EC%A0%80%EB%9F%B0%EA%B8%B0%EB%A1%9D%EB%93%A4%EC%9E%85%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Mon, 21 Jul 2014 11:53:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-07-21-%EB%AF%BC%ED%8A%B8%EB%A1%9C%EC%A0%84%ED%99%98%ED%95%9C%ED%9B%84%EC%9D%B4%EB%9F%B0%EC%A0%80%EB%9F%B0%EA%B8%B0%EB%A1%9D%EB%93%A4%EC%9E%85%EB%8B%88%EB%8B%A4/</guid>
      <description>잊기 전에 기록합니다.
지난 주에 xubuntu의 최신 업데이트가 (이유는 모르겠지만 ) X windows로의 로그인을 실패하게 하는 문제가 발생했습니다.
아마도 너무 최신 update(backport 와 unstable )를 하고 있어서 생긴 문제 겠지만 파악 하기도 힘들고 수정되길 기다리기도 힘들어서 설치한 지도 오래됐으니 란 핑계로 시스템을 갈아업기로 결정했습니다.
그래서 오랫만에 ubuntu(unity)가 얼마나 좋아 졌을까 하고 설치를 했습니다만 1시간 만에 도저히 사용할수 없다는 결론을 내렸습니다.
애초에 unity는 참으로 오만하게 디자인된 UI 인데 아직까지도 무엇이 잘못되었는지 파악하지 못하고 있는 듯 합니다.</description>
    </item>
    
    <item>
      <title>go4game의 spatial partition을 octree로 바꿨습니다. </title>
      <link>https://kasworld.github.io/posts/2014-06-04-go4game%EC%9D%98spatialpartition%EC%9D%84octree%EB%A1%9C%EB%B0%94%EA%BF%A8%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 04 Jun 2014 14:58:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-06-04-go4game%EC%9D%98spatialpartition%EC%9D%84octree%EB%A1%9C%EB%B0%94%EA%BF%A8%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>설명: ai3의 회피 알고리즘 테스트 동영상 - 글내용과 무관함 ^^
기존 wxgame2에서 부터 충돌 검사와 AI 를 의해 사용해 오던 준 동적 공간분할 대신 나름 정통 공간 분할인 octree로 바꿨습니다.
기존에는 공간을 매 프레임 마다 총 object의 수에 비례하는 (축당 math.pow(ocount, 1/3)) 배열로 분할 해서 충돌 검사 및 AI에게 주변 환경정보를 제공하는데 사용해 왔습니다.
하지만 아무래도 약식이라 부족한 점이 많아서 공간 분할을 하는 몇가지 알고리즘 중에 일단 octree를 선택, 구현 해봤습니다.</description>
    </item>
    
    <item>
      <title>go4game 추가 사항들 정리 </title>
      <link>https://kasworld.github.io/posts/2014-05-29-go4game%EC%B6%94%EA%B0%80%EC%82%AC%ED%95%AD%EB%93%A4%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Thu, 29 May 2014 11:40:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-05-29-go4game%EC%B6%94%EA%B0%80%EC%82%AC%ED%95%AD%EB%93%A4%EC%A0%95%EB%A6%AC/</guid>
      <description>github commit log로 부터 역으로 만들어낸 내용입니다.
설명: 실제 여러 월드가 동작하는 화면
설명: 월드내 팀의 자세한 상태 - 배경색이 team color
설명: 추가된 장식물, home object
최근 부터 역순으로 team 의 world 간 이동 기능 homepos to home object json config load / save log format 정리 장식물(decoration object)들 추가 collision 관련 성능, 구조 개선 object, team, world struct 간 상호 pointer 줄이기. 같은 기능이 추가 되었습니다. 코드상으로는 많은 변화가 있었지만 실제 외견(어차피 서버라 외견이랄게 없지만)상으로 변화한 것은 별로 없습니다.</description>
    </item>
    
    <item>
      <title>게임 규칙의 헛점을 최대한 악용(활용)하는 AI </title>
      <link>https://kasworld.github.io/posts/2014-05-19-%EA%B2%8C%EC%9E%84%EA%B7%9C%EC%B9%99%EC%9D%98%ED%97%9B%EC%A0%90%EC%9D%84%EC%B5%9C%EB%8C%80%ED%95%9C%EC%95%85%EC%9A%A9%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94ai/</link>
      <pubDate>Mon, 19 May 2014 15:20:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-05-19-%EA%B2%8C%EC%9E%84%EA%B7%9C%EC%B9%99%EC%9D%98%ED%97%9B%EC%A0%90%EC%9D%84%EC%B5%9C%EB%8C%80%ED%95%9C%EC%95%85%EC%9A%A9%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94ai/</guid>
      <description>설명: 여러개의 월드를 지원하는 요약 페이지
설명: 하나의 월드의 자세한 상태를 보여주는 페이지
게임의 규칙을 악용하는 것은 사람만 할 수 있는 것은 아닙니다.
go4game처럼 단순한 규칙의 게임에서도 룰의 헛점을 찾아내서 그것을 활용하는 것이 가능합니다.
AI를 만들다 보니 몇가지 고민스러운 것이 생겼는데 그 중 하나는 AI의 강함의 정도를 어떻게 정량화 할 것인가 하는 점입니다. 얼핏 생각하면 하나의 월드에 두개의 AI를 넣고 일정 시간후 승점(격추수) 가 높은 쪽이 강한 것이 아닌 가 생각 되지만 테스트를 하다보면 1:1 에 강한 AI 도 있고 , 다대 다 에 강한 AI 도 있으며 서로 상성이 있는 AI 가 있는 경우도 있습니다.</description>
    </item>
    
    <item>
      <title>go4game의 게임 규칙 </title>
      <link>https://kasworld.github.io/posts/2014-05-15-go4game%EC%9D%98%EA%B2%8C%EC%9E%84%EA%B7%9C%EC%B9%99/</link>
      <pubDate>Thu, 15 May 2014 14:20:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-05-15-go4game%EC%9D%98%EA%B2%8C%EC%9E%84%EA%B7%9C%EC%B9%99/</guid>
      <description>AI 만이 아니고 게임을 구성하기 위해선 게임의 룰도 정리되어야 하기에 적어봅니다. ( 아주 사무적인 문서라 말이 짧습니다. ^^;; _
설명:업데이트된 게임 상태창.
설명:새로 추가된 AICloud의 동작모습
한개의 gameservice 에는 실제 team간 interactaction 이 발생하는 여러개의 World 가 존재
각각의 world에는 team들이 소속 team은 tcp client , websocket client , ai client 가 존재 world는 60 frame / sec 로 각 팀에게 frame action을 요청 각 팀의 frame action은 goroutine을 사용 concurrent 하게 진행.</description>
    </item>
    
    <item>
      <title>go4game 에 AI를 붙이고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2014-05-13-go4game%EC%97%90ai%EB%A5%BC%EB%B6%99%EC%9D%B4%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Tue, 13 May 2014 17:07:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-05-13-go4game%EC%97%90ai%EB%A5%BC%EB%B6%99%EC%9D%B4%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>설명 : go4game webgl client 플레이 동영상.
사진 설명 : 서버의 상태를 보여주는 페이지 ( 팀 이름 , AI 종류 , 팀 object 수 , 팀 점수, 팀 AP , 팀 패킷 통계 )
go4game도 이제 wxgame2 정도로 작업이 진행되어 여러 AI끼리 대전을 시키고 그 진행사항과 순위를 볼 수 있는 페이지를 만들었습니다.
위 와 같은 형태로 만들어서 여러 형태의 AI를 만들고 AI끼리 대전을 시키면서 개선을 해나 가고 있는데 이전 wxgame2 작업할 때도 썼지만 AI를 개량해서 그 AI가 이전에 만든 것보다 좋도록 만드는 것은 참 생각대로 안됩니다.</description>
    </item>
    
    <item>
      <title>go4game 에 웹 클라이언트를 추가 했습니다. </title>
      <link>https://kasworld.github.io/posts/2014-04-27-go4game%EC%97%90%EC%9B%B9%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 27 Apr 2014 14:58:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-04-27-go4game%EC%97%90%EC%9B%B9%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%A5%BC%EC%B6%94%EA%B0%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>사진 설명 : go4game web client
소스코드는 언제나 처럼 https://github.com/kasworld/go4game 에 있습니다.
go언어는 서버에서 사용하는 것을 중점으로 하고 있기 때문에 client UI 를 작성할 만한 라이브러리가 적당한 것이 없습니다.
기본 라이브러리만이 아니고 3rd party 에서도 아직까지는 딱히 이거다 라고 할만한 것이 없더군요.
그에 반해서 서버를 만들기 위한 라이브러리는 tcp/http 불문하고 넘칠 정도로 많고 또 잘되어 있는데 아마도 go언어로 만든 프로그램의 UI는 당연히 web으로 작성하라는 의미 같습니다.
그런 관계로 go4game도 client UI는 웹으로 작성해야 겠다는 생각이 들어서 ( 사실은 클라이언트 UI 라이브러리를 찾다 포기하고 ^^; ) 웹 작업을 했습니다.</description>
    </item>
    
    <item>
      <title>xubuntu 14.04 로 업그레이드를 했습니다. </title>
      <link>https://kasworld.github.io/posts/2014-04-21-xubuntu1404%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Mon, 21 Apr 2014 15:58:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-04-21-xubuntu1404%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>신경 쓰지 못하고 있었는데 작업중 컴퓨터에서 며칠 전 14.04로 업그레이드 하라는 메시지가 나오길래 아. 어느새 릴리즈 되었군 하고 깨달았습니다. 작업 머신의 업그레이드는 일단 뒤로 미루고 ( 하던 작업을 계속 해야 하니 ) 일단 옆에 있는 노트북부터 업그레이드를 실행했습니다. ( 데이터는 모두 백업 되어 있어 문제가 생기면 포맷하고 새로 설치하면 되니 연습용으론 최적입니다. )
배포판 업그레이드는 많아야 6개월에 한번 진행하는 것이니 명령어를 항상 까먹습니다. sudo do-release-upgrade 를 사용합니다. 한참 목록을 다운 받고 나오는 메시지 대로 진행하면 1~2시간 내에 모든 업그레이드를 완료해줍니다.</description>
    </item>
    
    <item>
      <title>go4game - go 언어로 만드는 게임 서버</title>
      <link>https://kasworld.github.io/posts/2014-04-16-go4gamego%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%9C%EB%8A%94%EA%B2%8C%EC%9E%84%EC%84%9C%EB%B2%84/</link>
      <pubDate>Wed, 16 Apr 2014 17:02:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-04-16-go4gamego%EC%96%B8%EC%96%B4%EB%A1%9C%EB%A7%8C%EB%93%9C%EB%8A%94%EA%B2%8C%EC%9E%84%EC%84%9C%EB%B2%84/</guid>
      <description>몇 년 전부터 생각하고 있던 go언어를 사용한 게임 서버의 개발을 시작했습니다.
일단 첫 번째 작동 버전은 언제나처럼 github에 있습니다. 지금까지 만들어진 것은 서버를 구성하기 위한 가장 기본 적인 구조들 GameService, World, Team, GameObject 과 client 와 tcp 로 패킷을 주고 받을 수 있는 구조들 정도 입니다. 지금 사용하는 패킷은 int32 len + json 형태의 패킷입니다.
참고로 그동안 제가 적은 go 관련 스터디 포스트 들입니다. The Go Programming Language : 2009년 글입니다.</description>
    </item>
    
    <item>
      <title>wxgame의 C/S화는 twisted 버전을 끝으로 일단 마무리 합니다. </title>
      <link>https://kasworld.github.io/posts/2014-04-02-wxgame%EC%9D%98cs%ED%99%94%EB%8A%94twisted%EB%B2%84%EC%A0%84%EC%9D%84%EB%81%9D%EC%9C%BC%EB%A1%9C%EC%9D%BC%EB%8B%A8%EB%A7%88%EB%AC%B4%EB%A6%AC%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 02 Apr 2014 14:28:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-04-02-wxgame%EC%9D%98cs%ED%99%94%EB%8A%94twisted%EB%B2%84%EC%A0%84%EC%9D%84%EB%81%9D%EC%9C%BC%EB%A1%9C%EC%9D%BC%EB%8B%A8%EB%A7%88%EB%AC%B4%EB%A6%AC%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
      <description>앞으로도 자잘한 수정들은 있겠지만 큰 변화나 추가는 없을 듯 합니다.
이번에 twisted 버전을 작업하면서 오랫만에 다시 twisted를 만져 봤는데 예전에 테스트한 기억 보다 많이 빨라진 듯 합니다.
twistedtest.py를 보면 테스트 할 때 사용한 코드가 있습니다만 비록 echo 서버긴 하지만 초당 10만 패킷을 넘게 처리 하는 군요. ( intel 2500, pypy 사용, Int32StringReceiver 프로토콜, epoll reactor 사용.) 이 정도면 거의 대부분의 서버에서 필요한 성능을 충족시킬 수 있을 것 같습니다.
epoll reactor를 사용할 경우 6만 정도의 동시 커넥션 상태에서도 6만 패킷/초 이상을 꾸준히 처리 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>집에서 프로그래밍 환경을 개선 했습니다. </title>
      <link>https://kasworld.github.io/posts/2014-04-02-%EC%A7%91%EC%97%90%EC%84%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%ED%99%98%EA%B2%BD%EC%9D%84%EA%B0%9C%EC%84%A0%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 02 Apr 2014 13:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-04-02-%EC%A7%91%EC%97%90%EC%84%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%ED%99%98%EA%B2%BD%EC%9D%84%EA%B0%9C%EC%84%A0%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>최근 일신상의 변화로 집에서 작업하는 시간이 늘어난 김에 작업환경을 개선 했습니다.
벌써 3년 가까이 써서 열도 많이 나고 소음도 커진 nvidia GTX460 을 빼고 조용하고 발열이 적다는 GTX750ti로 바꿨습니다.
바꾼김에 그동안 묵혀 두고 있던 모니터 두개를 추가해서 triple monitor를 구성했습니다. ( 사실은 이게 목적이었습니다. )
GTX460에선 duel monitor만 구성해도 굉음을 내서 사용이 거의 불가능했었는데 GTX750ti는 세개를 달아도 조용합니다.
저는 주 작업환경이 리눅스라 혹시 지원 안되면 어쩌나 하고 살짝 걱정했었지만 nvidia홈페이지에서 드라이버를 받아 설치하니 아무 문제 없이 잘 잡힙니다.</description>
    </item>
    
    <item>
      <title>wxgame2를 개선 하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2014-03-22-wxgame2%EB%A5%BC%EA%B0%9C%EC%84%A0%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 22 Mar 2014 17:13:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-03-22-wxgame2%EB%A5%BC%EA%B0%9C%EC%84%A0%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>새로 바뀐 스크린 샷
client/server 실행법
서버는 인자없이 그냥 실행하면 됩니다. python wxgame2server.py 또는 이번 C/S 분리의 목적중 하나인 wxpython 코드 제거로 wxpython코드가 서버에는 없기 때문에 pypy를 사용할 수도 있습니다.
클라이언트 실행 python wxgame2client.py -s serverip -t teamname -s 는 접속할 서버의 주소, port는 고정입니다. -t 는 클라이언트 AI의 팀 이름 -t 옵션이 생략되면 서버에 observer mode로 접속합니다. ( 서버가 보내주는 정보를 화면에 표시만 하는 모드 ) 각 팀은 랜덤한 teamcolor를 가지며 그 color대로 표시됩니다.</description>
    </item>
    
    <item>
      <title>wxgame2 의 네트웍 버전이 거의 완료 되었습니다. </title>
      <link>https://kasworld.github.io/posts/2014-03-15-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%B4%EA%B1%B0%EC%9D%98%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 15 Mar 2014 18:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-03-15-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%B4%EA%B1%B0%EC%9D%98%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>사진 설명 - 서버에 네개의 네트웍 클라이언트를 접속하여 실행 중인 화면.
이전 글들 이후로 개인적 여유 시간을 대부분 투자하여 ( 아직 버그가 좀 남아있긴 하지만;) wxgame2 의 네트웍 버전을 거의다 만들었습니다.
github의 코드 를 보시면 알게 되겠지만 기존 wxgame2 코드의 상당부분이 재 작성 되었으며 네트웍 쪽 코드도 수차례 재 작성하였습니다.
정식 MMORPG처럼 모든 판단은 서버에서 이루어지며 각 클라이언트는 시각화와 클라이언트 AI 만 작동하는 형태 입니다. 서버 사이드 AI도 존재 하는데 이것은 서버의 NPC를 시뮬레이션 하는 것입니다.</description>
    </item>
    
    <item>
      <title>호기심에서 레이에 4.4 키캣을 올렸습니다. </title>
      <link>https://kasworld.github.io/posts/2014-03-06-%ED%98%B8%EA%B8%B0%EC%8B%AC%EC%97%90%EC%84%9C%EB%A0%88%EC%9D%B4%EC%97%9044%ED%82%A4%EC%BA%A3%EC%9D%84%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 06 Mar 2014 19:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-03-06-%ED%98%B8%EA%B8%B0%EC%8B%AC%EC%97%90%EC%84%9C%EB%A0%88%EC%9D%B4%EC%97%9044%ED%82%A4%EC%BA%A3%EC%9D%84%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>4.2를 올린지 얼마 됐다고 업데이트 했냐고 하면 할 말은 없지만 ^^;;
이왕이면 최신 버전인 거지요.
선택한 것은 AORP - 4.4.2 로 http://forum.xda-developers.com/showthread.php?t=2579054http://forum.xda-developers.com/showthread.php?t=2579054
그나마 안정성이 좋아 보였습니다.
설치 방법은 특이할 것이 없는데 4.2때와 같이 fastboot 로 zip 내의 커널을 플래싱하고 CWM 에서 zip을 설치 하면 됩니다.
잠깐 헤맨 것이 gapps 가 기본으로 없어서 고민 했는데 ( 구글 계정 설정이 안 생깁니다. ) ( 위 링크에서도 다운로드 링크가 없습니다 )
다른 커펌 문서 에서 4.</description>
    </item>
    
    <item>
      <title>wxgame2의 네트웍버전을 위한 기반 작업을 진행하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2014-03-02-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%84%EC%9C%84%ED%95%9C%EA%B8%B0%EB%B0%98%EC%9E%91%EC%97%85%EC%9D%84%EC%A7%84%ED%96%89%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 02 Mar 2014 14:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-03-02-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%84%EC%9C%84%ED%95%9C%EA%B8%B0%EB%B0%98%EC%9E%91%EC%97%85%EC%9D%84%EC%A7%84%ED%96%89%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>이전 글 이후에 강의 준비를 하면서 코드를 보니 코드가 오래 되기도 했고 또 설계상의 결정들이 맘에 들지 않아 전체적인 재 정리를 해야겠다고 생각하고 있었습니다.
지난 주부터 시간 되는 대로 작업을 진행해서 로직을 수행하는 wxgame2server.py와 서버로 부터 받은 정보를 시각화하는 뷰어인 wxgame2client.py 로 만드는 것을 일정부분 끝냈습니다.
현재까지는 네트웍으로 데이터를 주고 받는 것은 안되어 있으며 간단하게 file/pickle 을 상용해서 서버-&amp;gt; 클라이언트간 정보를 전달하고 있습니다.
코드를 작성하다 보니 구조가 맘에 들지 않아 거의 뜯어 고치게 되었습니다.</description>
    </item>
    
    <item>
      <title>DIY 전자 장난감 2 </title>
      <link>https://kasworld.github.io/posts/2014-02-25-diy%EC%A0%84%EC%9E%90%EC%9E%A5%EB%82%9C%EA%B0%902/</link>
      <pubDate>Tue, 25 Feb 2014 11:47:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-02-25-diy%EC%A0%84%EC%9E%90%EC%9E%A5%EB%82%9C%EA%B0%902/</guid>
      <description>이전에 썼던 DIY 전자 장난감 글 이후로 발견한 재미있어 보이는 보드 입니다.
NUCLEO 라고 하는 보드이며 http://vodanan.co.kr/product/detail.html?product_no=139&amp;amp;cate_no=89&amp;amp;display_group=1
에서 판매 하고 있습니다. ARM Cortex-M4 계열 CPU 를 사용한 보드로 일단 가격이 저렴합니다. ^^
아두이노 핀호환 이라고 하고 , http://www.st.com/web/catalog/tools/FM116/SC959/SS1532/LN1847/PF260000
CPU는 STM32F401RE
http://www.st.com/web/en/catalog/mmc/FM141/SC1169/SS1577/LN1810/PF258797
이며 32bit arm 84Mhz CPU 내장 512k flash rom , 96k sram , fpu 지원 정도 스펙이군요. 아두이노랑 비교하면 정말 화려한 스펙입니다. ^^
전원 구성이 유연해서 좋아 보이고 ( 3.</description>
    </item>
    
    <item>
      <title>엑스페리아 레이를 4.2로 업그레이드 하기 </title>
      <link>https://kasworld.github.io/posts/2014-02-21-%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EB%A5%BC42%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 21 Feb 2014 21:46:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-02-21-%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EB%A5%BC42%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%ED%95%98%EA%B8%B0/</guid>
      <description>마음 같아선 키켓으로 업그레이드 하고 싶었지만
레이의 키켓 포팅 상태를 보니 아직 인 듯 하여
4.2.2 로 업데이트 했습니다. http://forum.xda-developers.com/showthread.php?t=2286165
잘 썼던 super jelly bean 의 4.2 판인 super jelly bean X 를 사용했고 버전은 4.5 입니다.
이전에 레이에 설치 되어 있던 것은 super jelly bean 8 (4.1) 이었군요.
링크를 가보면 설치 방법이 없는데
잠시 고민하다가
그럼 그냥 메모리 카드에 넣고 CWM 모드에서 업데이트 하면 되는 거겠군 하고
딩가 딩가 하면서 설치를 했습니다.</description>
    </item>
    
    <item>
      <title>게임 프로그래밍 이란 주제로 결국 강의를 했습니다.</title>
      <link>https://kasworld.github.io/posts/2014-02-19-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9E%80%EC%A3%BC%EC%A0%9C%EB%A1%9C%EA%B2%B0%EA%B5%AD%EA%B0%95%EC%9D%98%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 19 Feb 2014 21:31:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-02-19-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9E%80%EC%A3%BC%EC%A0%9C%EB%A1%9C%EA%B2%B0%EA%B5%AD%EA%B0%95%EC%9D%98%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>고려 대학교 고공 겨울학기의 한 꼭지로 게임 프로그래밍 이란 주제로 2시간 짜리 강의를 진행했습니다.
원래는 4일간 2시간씩 총 8시간 짜리 강의지만 첫날 2시간만 제가 하고 이후는 능력 좋고 경험 많은 후배가 강의를 진행하고 있습니다.
이전에 썼던 글 게임프로그래밍이라는 주제로
과 예전에 파이썬으로 만들었던 게임프레임웍을 github에 올렸습니다. 을 사용해서 강의를 진행 했으며
강의에 사용했던 프리젠테이션은 https://docs.google.com/presentation/d/1fNa2hY5qGE_bGnsT0NhmnVQQC6kjLuUb4i3HtQATJCI/edit#slide=id.p 에서 볼 수 있습니다.
전산 실습실에서 진행해서 실습과 병행하여 진행할 생각으로 실습 준비를 해갔으나 생각만큼 잘 되지는 않은 것 같습니다.</description>
    </item>
    
    <item>
      <title>결국 nas를 샀습니다.</title>
      <link>https://kasworld.github.io/posts/2014-02-17-%EA%B2%B0%EA%B5%ADnas%EB%A5%BC%EC%83%80%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Mon, 17 Feb 2014 18:09:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-02-17-%EA%B2%B0%EA%B5%ADnas%EB%A5%BC%EC%83%80%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>우분투/리눅스 민트에서 클라우드 스토리지 사용하기.
같은 글이나 이곳 저곳에서 개인데이터를 안전하게 접근 사용하기.
같은 글도 쓰긴 했지만.. mini-itx 보드에 리눅스를 설치해서 만들어볼까 하는 생각도 있었으나 비용 문제도 있고 게으름은 모든 것을 이긴다고 결국 완제품 NAS를 샀습니다. NAS 중에서도 유명한 여러 브랜드도 있지만 역시 귀찮음이란.. 그냥 iptime nas2 로 결정했습니다. &amp;ldquo;값도 싸고 하니 외장 하드 사는 셈 치고 쓰지&amp;rdquo; 란 자기 합리화도 있습니다. 와이프의 설득에는 슬슬 (와이프) 하드 용량도 다 차가고, 또 오래 되서 하드 수명도 불안 불안 하니 백업도 할 겸 용량도 늘일 겸 이란 핑계로 성공 했구요.</description>
    </item>
    
    <item>
      <title>예전에 파이썬으로 만들었던 게임프레임웍을 github에 올렸습니다. </title>
      <link>https://kasworld.github.io/posts/2014-01-19-%EC%98%88%EC%A0%84%EC%97%90%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%A4%EC%97%88%EB%8D%98%EA%B2%8C%EC%9E%84%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8D%EC%9D%84github%EC%97%90%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 19 Jan 2014 17:03:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-01-19-%EC%98%88%EC%A0%84%EC%97%90%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%A4%EC%97%88%EB%8D%98%EA%B2%8C%EC%9E%84%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8D%EC%9D%84github%EC%97%90%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>파이썬과 wxpython을 사용해서 간단한! 2d 슈팅게임을 만들 수 있는 프레임웍과 예제 삼아 만들어본 AI만 있는 게임?을 github에 올렸습니다.
코드 내부의 주석을 보니 2011년에 만들어둔 것이군요.
그 동안 python홍보용으로 잘 써먹었던 프로젝트입니다. ( 파이썬으로 이런 게임도 만들 수 있어. 너도 배워 보지 않을래? 등 ^^ )
원래는 더 일찍 공개하려고 했으나 코드 정리등이 귀찮아서 미루다가 모 후배의 압박으로 대충 정리해서 올립니다.
관심 있으신 분은 https://github.com/kasworld/wxgame2 에서 받으면 됩니다.
원래 코드는 제가 개인적으로 만들어 사용하고 있는 kaswlib이란 것을 사용하도록 되어 있는데 github에 올리려니 서로다른 두개의 프로젝트가 되고 또 참조를 하려면 import path를 설정하는 것도 해야 해서 쓰기 불편할 듯 하여 아예 프로젝트 내부에 wxgamelib 파일에 사용하는 코드만 복사해 넣었습니다.</description>
    </item>
    
    <item>
      <title>DIY 전자 장난감 </title>
      <link>https://kasworld.github.io/posts/2014-01-12-diy%EC%A0%84%EC%9E%90%EC%9E%A5%EB%82%9C%EA%B0%90/</link>
      <pubDate>Sun, 12 Jan 2014 21:12:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-01-12-diy%EC%A0%84%EC%9E%90%EC%9E%A5%EB%82%9C%EA%B0%90/</guid>
      <description>DIY 전자 장난감들을 가지고 놀고 싶어서 이것 저것 조사해본 기록입니다.
주요 선정 기준은 가격이 적당히 저렴해야 하고 (10만원 이 넘지 말 것) S/W 가 공개 소프트웨어로 구성되어 있어서 수정/확장이 자유로울 것. 개발을 위한 커뮤니티 형성이 잘되어 있는 것 S/W 개발만이 아니고 GPIO 등을 사용할 수 있는 H/W 지원이 될 것 크기는 적당히 작고(손바닥 크기 이하) 간단하게 전원 공급을 할수 있을 것. 입니다.
( gboard 8.9 등 완제품은 가지고 놀 수 있는 범위가 너무 제한 적이라 )</description>
    </item>
    
    <item>
      <title>게임프로그래밍이라는 주제로 </title>
      <link>https://kasworld.github.io/posts/2014-01-08-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9D%BC%EB%8A%94%EC%A3%BC%EC%A0%9C%EB%A1%9C/</link>
      <pubDate>Wed, 08 Jan 2014 10:42:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-01-08-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9D%BC%EB%8A%94%EC%A3%BC%EC%A0%9C%EB%A1%9C/</guid>
      <description>지인으로 부터 뜬금 없이 &amp;ldquo;게임프로그래밍&amp;quot;라는 주제로 특강을 해달라는 부탁을 받아서 ( 아직 할지 말지는 미정이긴 하지만 ) 이런 저런 생각이 들어 적어보고 있는( 즉 아직 작성중인 ) 문서입니다.
&amp;ldquo;게임을 만든다는 것은 무엇일까?&amp;rdquo; 게임이란 무엇일까? 게임의 정의를 논하는 것은 프로그래머 입장에선 쓸데없는 것일 테니 무시하기로 하고 ^^;;; 게임을 만드는 회사를 10년 넘게 다녔던 프로그래머로서 게임을 만든다는 것을 생각해보면 게임을 만들기 위한 직능을 준비하고 그 실무를 진행하는 것으로 정의해볼 수 있을 것 같습니다.</description>
    </item>
    
    <item>
      <title>제품/서비스 개발의 단계</title>
      <link>https://kasworld.github.io/posts/2013-12-26-%EC%A0%9C%ED%92%88%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%9C%EB%B0%9C%EC%9D%98%EB%8B%A8%EA%B3%84/</link>
      <pubDate>Thu, 26 Dec 2013 20:37:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-12-26-%EC%A0%9C%ED%92%88%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%9C%EB%B0%9C%EC%9D%98%EB%8B%A8%EA%B3%84/</guid>
      <description>일을 하다 보니 (회사에서 교육용으로) 필요해서 작성한 문서인데 나름 쓸만해 보여서 블로그에 올려 봅니다.
전과정을 간략히(세상에 좋은 , 잘 정리된 책들 많으니 ) 정리
각 단계에는 그에 어울리는 문서가 나와야 한다. 1. 프로덕트 초기 기획 단계 - concept design을 정리한다. product define을 하는 단계, 그래서 만드려는 것은 무엇인가?
간단히 설명할수 있을 정도로 개념을 잘 정리한다. 2. 프로덕트 기획 단계 - 만들고자 하는 것을 자세히 기획/design 한다. 그래서 자세히 말하면 뭔데? 뭐가 왜 좋은/재밌는 데?</description>
    </item>
    
    <item>
      <title>web2py access control(접근 제어) 정리.</title>
      <link>https://kasworld.github.io/posts/2013-12-10-web2pyaccesscontrol%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Tue, 10 Dec 2013 11:57:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-12-10-web2pyaccesscontrol%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%A0%95%EB%A6%AC/</guid>
      <description>회사 세미나용으로 http://web2py.com/books/default/chapter/29/09/access-control 을 요약한 내용 입니다.
접근제어 access control web2py 는 Role Based Access Control 제공 (RBAC)역할을 기반으로하는 접근제어로 context-based access control (CBAC) 과는 다르다. ( message의 context에 따라 달라지지 않는다, 상태, 혹은 데이터 ) user - role - job function 형태web2py 에서는 Auth class를 통해서 구현된다. 아래와 같은 테이블이 필요한데 프로젝트를 만들때 자동으로 코드가 생성된다. auth_user : 유저이름 , email , 암호 , 상태 (등록 대기, 완료, 블럭됨 )auth_group : 유저의 그룹(롤) 정보 , 이게 role ( 사용자 역할 ) auth_membership : group - user link table , user - group의 다대 다 연결.</description>
    </item>
    
    <item>
      <title>나의 D&amp;D 캐릭터는 .. </title>
      <link>https://kasworld.github.io/posts/2013-12-08-%EB%82%98%EC%9D%98dd%EC%BA%90%EB%A6%AD%ED%84%B0%EB%8A%94/</link>
      <pubDate>Sun, 08 Dec 2013 12:08:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-12-08-%EB%82%98%EC%9D%98dd%EC%BA%90%EB%A6%AD%ED%84%B0%EB%8A%94/</guid>
      <description>한때 유행했던 것 같긴 하지만 뒤늦게 해봤습니다. ( 간단하게 번역 되어 있습니다. ) http://php.chol.com/~blueari/tmjollnir/dndwho.html
D&amp;amp;D를 오래( 15년?) 해왔지만 C.N. 캐릭터를 해본 적은 없는 것 같은데 이렇게 나오는군요.
I Am A: Chaotic Neutral Elf Mage Thief
Alignment: Chaotic Neutral characters are unstable, and frequently insane. They believe in disorder first and foremost, and will thus strive for that disorder in everything they do. This means that they will do whatever seems &amp;lsquo;fun&amp;rsquo; or &amp;rsquo;novel&amp;rsquo; at any given time.</description>
    </item>
    
    <item>
      <title>한성 인민 에어 를 샀습니다. </title>
      <link>https://kasworld.github.io/posts/2013-12-07-%ED%95%9C%EC%84%B1%EC%9D%B8%EB%AF%BC%EC%97%90%EC%96%B4%EB%A5%BC%EC%83%80%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 07 Dec 2013 13:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-12-07-%ED%95%9C%EC%84%B1%EC%9D%B8%EB%AF%BC%EC%97%90%EC%96%B4%EB%A5%BC%EC%83%80%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>수요일에 주문했는데 오늘(토)에야 도착하는 군요.
정식모델명은 한성컴퓨터 A34X ForceRecon 2467 (mSATA 250GB) 이고
간단한 스펙은 하스웰 i5 4250U ( 1.3Ghz ) 2c4t 에 hd 5000 그래픽 8G 램 ( 싱글 채널 ) 256G 삼성 830 ssd ( 이벤트로 대신 들어간 ) 1920x1080 13.3인치 스크린 입니다.
도착해서 포장을 풀고 무게를 재보니 1.399 kg 이더군요. 지금 다시 재보니 1.387 kg 입니다. ( 주방저울 정밀도가 그리 높지 않은듯 )
한성제품을 써보는건 이번이 네번째인데</description>
    </item>
    
    <item>
      <title>한성 gboard 8.9의 기술적 문제 </title>
      <link>https://kasworld.github.io/posts/2013-10-27-%ED%95%9C%EC%84%B1gboard89%EC%9D%98%EA%B8%B0%EC%88%A0%EC%A0%81%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Sun, 27 Oct 2013 11:27:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-10-27-%ED%95%9C%EC%84%B1gboard89%EC%9D%98%EA%B8%B0%EC%88%A0%EC%A0%81%EB%AC%B8%EC%A0%9C/</guid>
      <description>한성 gboard 8.9를 쓰다보면 이상하게도 H/W 스펙에 비해서 너무 느리다는 느낌을 받는 경우가 많습니다.
프로그램 전환간에 랙이 생기는 경우도 많고 게임을(심슨) 하다가도 터치에 반응하는 스크롤이 멈짓 멈짓하는 것을 많이 느낄 수 있지요. 처음에는 백그라운드 프로세스가 너무 많이 있나 싶어서 거의 대부분을 제거 해봤습니다. 커스텀 펌웨어도 여러가지로 바뀌 봤구요.
하지만 쓰면 쓸수록 이문제는 S/W 문제 라기보다는 H/W 문제인것 같은 생각이 들었습니다.
프로세스 모니터를 사용해서 cpu 사용량을 보면 rknand_buffer 프로세스가 비정상적으로 cpu를 많이 사용하는 것을 볼 수 있었습니다.</description>
    </item>
    
    <item>
      <title>엑스페리아 레이의 활용을 위해 최신 젤리빈으로 업데이트를 했습니다. </title>
      <link>https://kasworld.github.io/posts/2013-09-28-%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EC%9D%98%ED%99%9C%EC%9A%A9%EC%9D%84%EC%9C%84%ED%95%B4%EC%B5%9C%EC%8B%A0%EC%A0%A4%EB%A6%AC%EB%B9%88%EC%9C%BC%EB%A1%9C%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 28 Sep 2013 14:00:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-09-28-%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EC%9D%98%ED%99%9C%EC%9A%A9%EC%9D%84%EC%9C%84%ED%95%B4%EC%B5%9C%EC%8B%A0%EC%A0%A4%EB%A6%AC%EB%B9%88%EC%9C%BC%EB%A1%9C%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>오래전에 펌웨어를 ics로 업데이트 하고 옵티이이로 바꾼후에는 책상속에서 얌전히 잠자고 있던 레이를 꺼낼 생각이 든 것은 크기 때문입니다.
간단히 산책을 나가거나 운동을 할 때 주머니속 옵티이이는 생각보다 꽤 부담이 됩니다.
게다가 요즘은 gboard 8.9를 주로 사용하며 핸드폰은 주로 테더링 용으로 사용하니 더욱더 레이 생각이 나더군요.
그래서 예전 기억을 더듬어서 레이 부활을 시도 했습니다.
일단 예전에 제가 써둔 블로그 글을 읽어보고 (기억을 되살리는 겸.. ) http://kasw.blogspot.kr/search/label/%EB%A0%88%EC%9D%B4
내용이 별게 없군. 하고 생각하면서.. ;;;</description>
    </item>
    
    <item>
      <title>구글 go 언어를 공부하면서 몇몇 중요 포인트를 메모중입니다. (5/N)</title>
      <link>https://kasworld.github.io/posts/2013-08-25-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A45n/</link>
      <pubDate>Sun, 25 Aug 2013 12:35:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-08-25-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A45n/</guid>
      <description>오랫만에 다시 go 이야깁니다.
오랬만에 기억을 되살리기 위해 이런 저런 이야기를 잠깐 해보면 go 언어의 특징중 가장 두드러지는 것을 하나 들면 goroutine을 들 수 있을 텐데요.
많은 서버와 대용량의 데이터(소위 big data)를 처리 하고 있는 구글은 이를 위해서 여러 언어를 사용하고 있다고 알려져 있습니다. 하지만 각각의 언어들은 장단점이 있는 관계로 구미에 딱 맞는 언어가 필요하여 go 언어를 만들었다는 게 사람들의 짐작 입니다.
그래서 go 언어에는 구글이 가장 필요로 하는 goroutine 과 channel 이 기본으로 존재합니다.</description>
    </item>
    
    <item>
      <title>한성 gboard 8.9에 리눅스를 설치하고.</title>
      <link>https://kasworld.github.io/posts/2013-08-24-%ED%95%9C%EC%84%B1gboard89%EC%97%90%EB%A6%AC%EB%88%85%EC%8A%A4%EB%A5%BC%EC%84%A4%EC%B9%98%ED%95%98%EA%B3%A0/</link>
      <pubDate>Sat, 24 Aug 2013 11:55:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-08-24-%ED%95%9C%EC%84%B1gboard89%EC%97%90%EB%A6%AC%EB%88%85%EC%8A%A4%EB%A5%BC%EC%84%A4%EC%B9%98%ED%95%98%EA%B3%A0/</guid>
      <description>애초에 제가 필요한건 가볍고 배터리 오래가는 리눅스 머신이었으니 .
한성 gboard 8.9 에 리눅스를 설치해봤습니다.
대단해 보이지만 별건 아니고 구글 플레이 에서 linux deploy https://play.google.com/store/apps/details?id=ru.meefik.linuxdeploy&amp;amp;hl=en
를 설치하면 됩니다.
애초에 안드로이드가 리눅스커널을 사용하고 있으니 chroot 와 user mode linux 같은것을 적당히 조합한것이 아닐까 하고 생각합니다. ( 자세히 확인 해보지는 않았습니다. ) 설치 과정도 loop back device file을 만들어 거기에 설치하는 형태더군요.
설치하고 이런저런 프로그램을 설치하고 ( python, git , 7zip , byobu, mc, 등등등.</description>
    </item>
    
    <item>
      <title>gboard 8.9 한 달 좀 넘게 사용한 소감 </title>
      <link>https://kasworld.github.io/posts/2013-08-17-gboard89%ED%95%9C%EB%8B%AC%EC%A2%80%EB%84%98%EA%B2%8C%EC%82%AC%EC%9A%A9%ED%95%9C%EC%86%8C%EA%B0%90/</link>
      <pubDate>Sat, 17 Aug 2013 15:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-08-17-gboard89%ED%95%9C%EB%8B%AC%EC%A2%80%EB%84%98%EA%B2%8C%EC%82%AC%EC%9A%A9%ED%95%9C%EC%86%8C%EA%B0%90/</guid>
      <description>한 달 좀 전에 적당한 화면 크기의 디지털 디바이스가 필요하여 ( 책읽고 , 만화보고, 웹서핑하고 , 글쓰고 ) 이리 저리 알아보다가
한성에서 막 나온 gboard 8.9 를 질렀습니다.
막판까지 아이뮤즈 q9 를 놓고 고민했지만 ..
q9의 고해상도 2048x1536 과 10인치의 큰 화면 ,그리고 무거운 무게와 불안한 지원 , 보다는 집에 이미 10인치 디바이스는 있기도 하고 (2년전 산 a500) . 조금 떨어지는 해상도 1920x1200!! , 조금 작은 8.9인치 화면, 조금더 가벼운 무게 , 조금 더 믿을만 하다고 사람들이 이야기하는 지원 이 더 좋아 보여서 gboard로 결정했습니다.</description>
    </item>
    
    <item>
      <title>리눅스 엔트로피?</title>
      <link>https://kasworld.github.io/posts/2013-06-01-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%94%ED%8A%B8%EB%A1%9C%ED%94%BC/</link>
      <pubDate>Sat, 01 Jun 2013 17:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-06-01-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%94%ED%8A%B8%EB%A1%9C%ED%94%BC/</guid>
      <description>안드로이드에 seeder 라고하는 신기한 프로그램이 있어서 뭔가 하고 찾아 보니..
시스템에서 사용하는 random generator 의 성능? 을 올려주는 프로그램 이라고 합니다.
설치하면 이 난수 생성기의 병목으로 느려 졌던 부분이 해소되어 전체적인 UI 반응성이 올라간다고 해서 설치해 사용하기는 하고 있습니다만.. ( 차이는 못느끼겠더군요. ^^)
아무튼 안드로이드에 있다면 당연히 리눅스 데스크 탑에서도 비슷한 문제와 해결방안이 있겠거니 하고 생각해서
http://en.wikipedia.org/wiki/Entropy_%28computing%29
이것 저것 찾아보니 ubuntu/xubuntu 에서는 rng-tools 이나 randomsound를 설치 해서 사용하면 될것 같습니다.</description>
    </item>
    
    <item>
      <title>우분투 sublime text2에서 한글을 입력하기. </title>
      <link>https://kasworld.github.io/posts/2013-05-30-%EC%9A%B0%EB%B6%84%ED%88%ACsublimetext2%EC%97%90%EC%84%9C%ED%95%9C%EA%B8%80%EC%9D%84%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 30 May 2013 20:47:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-05-30-%EC%9A%B0%EB%B6%84%ED%88%ACsublimetext2%EC%97%90%EC%84%9C%ED%95%9C%EA%B8%80%EC%9D%84%EC%9E%85%EB%A0%A5%ED%95%98%EA%B8%B0/</guid>
      <description>안되는 거라고 생각하고 포기 하고 있었는데 같이 일하는 동료의 제보로 약간 불편하지만 일단 입력이 가능하게 되어 기록하기 위한 포스트. ;;;
일단 한글 입력이 안되는 원인은 ibus의 버그 때문 이라고 합니다.
실제로 windows/OSX 에서는 한글 입력이 잘된다고하는 군요.
그럼 ibus가 아니고 다른 IME를 쓰면 해결 되지 않을까? 에서 시작합니다.
한줄 요약하면
http://www.interoasis.net/post.php?No=15
에 나와있듯이
sudo apt-get install uim uim-hangul im-switch -c /* 한글입력기 변경 */ 그리고 X 재시작 ( 로그아웃 또는 재부팅 )</description>
    </item>
    
    <item>
      <title>구글 리더가 서비스 종료한다는 소식을 듣고</title>
      <link>https://kasworld.github.io/posts/2013-05-05-%EA%B5%AC%EA%B8%80%EB%A6%AC%EB%8D%94%EA%B0%80%EC%84%9C%EB%B9%84%EC%8A%A4%EC%A2%85%EB%A3%8C%ED%95%9C%EB%8B%A4%EB%8A%94%EC%86%8C%EC%8B%9D%EC%9D%84%EB%93%A3%EA%B3%A0/</link>
      <pubDate>Sun, 05 May 2013 16:11:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-05-05-%EA%B5%AC%EA%B8%80%EB%A6%AC%EB%8D%94%EA%B0%80%EC%84%9C%EB%B9%84%EC%8A%A4%EC%A2%85%EB%A3%8C%ED%95%9C%EB%8B%A4%EB%8A%94%EC%86%8C%EC%8B%9D%EC%9D%84%EB%93%A3%EA%B3%A0/</guid>
      <description>버럭! 한 사람이 어디 저 뿐만이겟습니까만;; ^^
저 역시 소식을 접한 후부터 계속해서 대안을 찾고 있기는 했습니다.
일단 feedly로 임시 도피를 해서 살고 있긴 합니다.
쓰는 소감을 말하자면 뭐 그냥 그냥..이란 느낌입니다.
최근 집에 오래된 노트북으로 서버를 구축하고 그를 중심으로 사용 패턴을 정리해서,
unison 으로 개인 파일들을 반자동 sync 한다던지 하는 설정을 하다 보니 , 외부 서비스를 점점 사용 하지 않게 되더군요.
그래서 다음 클라우드,box.com,그리고 dropbox 마져도 더이상은 사용하지 않고 살게 되었습니다.</description>
    </item>
    
    <item>
      <title>우분투에서 서브라임 에디터로 go 개발을 하(려)다보니. </title>
      <link>https://kasworld.github.io/posts/2013-04-27-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%EC%84%9C%EB%B8%8C%EB%9D%BC%EC%9E%84%EC%97%90%EB%94%94%ED%84%B0%EB%A1%9Cgo%EA%B0%9C%EB%B0%9C%EC%9D%84%ED%95%98%EB%A0%A4%EB%8B%A4%EB%B3%B4%EB%8B%88/</link>
      <pubDate>Sat, 27 Apr 2013 21:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-04-27-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%EC%84%9C%EB%B8%8C%EB%9D%BC%EC%9E%84%EC%97%90%EB%94%94%ED%84%B0%EB%A1%9Cgo%EA%B0%9C%EB%B0%9C%EC%9D%84%ED%95%98%EB%A0%A4%EB%8B%A4%EB%B3%B4%EB%8B%88/</guid>
      <description>서브라임 에디터로 go 개발을 하기 위해 필요한 패키지를 찾아보면 바로 보이는 것이 go build 패키지라서 일단 설치는 해두었습니다. 이번 주말에 집에서 오랫 만에 go 코드를 만질 일이 있어서 ( 실은 요즘 매일 python 만 하고 있어서 go 도 좀 해두려고.. )
서브라임에서 전에 만들어둔 go 소스를 열고 작업을 시작했습니다. 이왕 하는 김에 제대로 환경을 세팅하려고 프로젝트도 만들고 빌드를 했는데 아무 반응이 없습니다. 물론 터미널을 열고 빌드하면 당연히 잘 되고 .. 에디터 내의 빌드 명령인 &amp;lt;ctrl-b&amp;gt; 로 빌드를 시도하면 아무 반응이 없는 겁니다.</description>
    </item>
    
    <item>
      <title>우분투/주분투/민트 에서 GUI 없이 키보드 옵션을 설정하는 법 </title>
      <link>https://kasworld.github.io/posts/2013-04-26-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%A3%BC%EB%B6%84%ED%88%AC%EB%AF%BC%ED%8A%B8%EC%97%90%EC%84%9Cgui%EC%97%86%EC%9D%B4%ED%82%A4%EB%B3%B4%EB%93%9C%EC%98%B5%EC%85%98%EC%9D%84%EC%84%A4%EC%A0%95%ED%95%98%EB%8A%94%EB%B2%95/</link>
      <pubDate>Fri, 26 Apr 2013 22:19:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-04-26-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%A3%BC%EB%B6%84%ED%88%AC%EB%AF%BC%ED%8A%B8%EC%97%90%EC%84%9Cgui%EC%97%86%EC%9D%B4%ED%82%A4%EB%B3%B4%EB%93%9C%EC%98%B5%EC%85%98%EC%9D%84%EC%84%A4%EC%A0%95%ED%95%98%EB%8A%94%EB%B2%95/</guid>
      <description>전 낡은 프로그래머라 예전 86키 시절의 ctrl 위치가 익숙합니다. ( 라고 말하면 모를 사람이 더 많으니. ^^ ) 즉 ctrl 키가 A 옆에 있고 caps 따위는 사용하지 않는 주의 라는 겁니다. 물론 아무리 제가 낡았어도 오른쪽 ctrl을 caps 로 설정하지는 않습니다. ( 이 말을 이해하면 당신도 훌륭한 낡은 사람 ^^ )
그리고 당연히 shift-space를 한영 전환으로 사용하며
덤으로 커서 이동은 넘버 패드를 사용하는 것을 더 선호 합니다. 그래서 shift-화살표키 선택도 넘패드를 사용하는 경우가 많습니다.</description>
    </item>
    
    <item>
      <title>web2py 소개 </title>
      <link>https://kasworld.github.io/posts/2013-04-13-web2py%EC%86%8C%EA%B0%9C/</link>
      <pubDate>Sat, 13 Apr 2013 20:31:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-04-13-web2py%EC%86%8C%EA%B0%9C/</guid>
      <description>회사에서 세미나 용으로 작성한 글인데 쓰고 보니 이것 만으로도 web2py의 소개 용으로는 충분 할 것 같아서 그리고 블로그에 올려도 좋을 듯한 내용이어서 올려 봅니다.
원문은 http://web2py.com/books/default/chapter/29/03 이며 번역을 한 것이 아니고 업무에 필요한/필요할 것 같은 것들을 정리한 글이라 원문과 같이 놓고 보셔야 이해가 될 듯 합니다. 제가 맡은 부분인 Overview 부분 만 입니다. ^^
web2py 개요 - overview
** **
시작하기 - startup web2py는 윈도우와 맥에선 실행 프로그램으로도 제공되기 때문에 따로 python 이 필요하지 않다.</description>
    </item>
    
    <item>
      <title>한성 보스몬스터 77 리눅스 삽질기. </title>
      <link>https://kasworld.github.io/posts/2013-04-10-%ED%95%9C%EC%84%B1%EB%B3%B4%EC%8A%A4%EB%AA%AC%EC%8A%A4%ED%84%B077%EB%A6%AC%EB%88%85%EC%8A%A4%EC%82%BD%EC%A7%88%EA%B8%B0/</link>
      <pubDate>Wed, 10 Apr 2013 12:58:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-04-10-%ED%95%9C%EC%84%B1%EB%B3%B4%EC%8A%A4%EB%AA%AC%EC%8A%A4%ED%84%B077%EB%A6%AC%EB%88%85%EC%8A%A4%EC%82%BD%EC%A7%88%EA%B8%B0/</guid>
      <description>왠지 요즘은 삽질기만 쓰는 것 같은 느낌이 들지만.. ;;;
1개월 정도 전에 회사 업무에 필요해서 리눅스를 설치하기 위해 한성컴퓨터 X53-BossMonster Lv.77 를 구매요청해서 받았습니다.
이 노트북의 특징은 (적어도 제게는 중요한 ) 넖은 화면 ( 1920x1080 ) , 저렴한 가격 , 그리고 많이 달수 있는 램( 슬롯이 4개라 32Gbyte의 램을 달수 있습니다 )
그리고 전혀 필요없지만 다른 대안이 없어서 덤으로 달려있는 지포스 GTX670MX 가 있습니다.
전 당연히 리눅스를 설치하기위해 구매했고 애초에 OS 도 안 따라오는 노트북이라 수령후 ( MS 에 돈 보테줄일 없으니 좋네.</description>
    </item>
    
    <item>
      <title>우분투/리눅스 민트에서 클라우드 스토리지 사용하기.</title>
      <link>https://kasworld.github.io/posts/2013-04-04-%EC%9A%B0%EB%B6%84%ED%88%AC%EB%A6%AC%EB%88%85%EC%8A%A4%EB%AF%BC%ED%8A%B8%EC%97%90%EC%84%9C%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 04 Apr 2013 09:42:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-04-04-%EC%9A%B0%EB%B6%84%ED%88%AC%EB%A6%AC%EB%88%85%EC%8A%A4%EB%AF%BC%ED%8A%B8%EC%97%90%EC%84%9C%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>전에 쓴 이곳 저곳에서 개인데이터를 안전하게 접근 사용하기. 글에서 NAS가 어쩌고 하긴 했지만.. 현실은 언제나 가난한 월급쟁이인지라. ;;; 리눅스에서 사용가능한 클라우드 싱크 스토리지 들 몇개를 설치 해봤습니다. 현재까지 테스트해본것들은 구글 드라이브
네이버 ndrive 다음 클라우드
dropbox
box.com
정도인데.. 이중에서 리눅스에서 잘되는 것들은 다음, dropbox, box.com 이군요. dropbox 야 리눅스를 정식으로 아주 잘 지원하니 홈페이지에서 다운받아 설치/로그인 하면 아무 문제 없이 사용할수 있습니다. 용량만 좀 많이 주면 고민할 필요가 없을텐데 말이죠.. 특이하게도 구글 드라이브는 리눅스에서 편하게 쓸수 있는 방법이 없습니다.</description>
    </item>
    
    <item>
      <title>postgresql 삽질기;;</title>
      <link>https://kasworld.github.io/posts/2013-03-19-postgresql%EC%82%BD%EC%A7%88%EA%B8%B0/</link>
      <pubDate>Tue, 19 Mar 2013 09:56:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-03-19-postgresql%EC%82%BD%EC%A7%88%EA%B8%B0/</guid>
      <description>세상의 모든 삽질이 그러하듯이, 무릇 삽질이란;;;누군가의 바보스러움때문에 발생하기 마련인데..그중에 가장 우울한것이 자신의 한심스러움 때문에 일어나는 삽질이다.ㅠㅠ 요즘 대세는 mariadb 라고 외치고 다니고 있던 중..( 정작 쓰지는 않는 주제에 ;; ) 아기다리 고기다리 던(언제쩍 개그냐 이거;; )postgresql이 9.x 대에와서 드디어 쓸만해졌다!! 란 소리를 듣고&amp;hellip; 그러면 나도 잠깐 들여다 볼까? 하고 생각한 지 어어 2달 ;;; mysql/mariadb 와는 달리 이놈의 postgres는 우분투/민트 의 레포지토리에서 설치를 해도바로 사용 가능한 상태로 설치 되지를 않더군요;; 일단 설치를 해두고.</description>
    </item>
    
    <item>
      <title>이곳 저곳에서 개인데이터를 안전하게 접근 사용하기. </title>
      <link>https://kasworld.github.io/posts/2013-03-10-%EC%9D%B4%EA%B3%B3%EC%A0%80%EA%B3%B3%EC%97%90%EC%84%9C%EA%B0%9C%EC%9D%B8%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C%EC%A0%91%EA%B7%BC%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 10 Mar 2013 11:24:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-03-10-%EC%9D%B4%EA%B3%B3%EC%A0%80%EA%B3%B3%EC%97%90%EC%84%9C%EA%B0%9C%EC%9D%B8%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C%EC%A0%91%EA%B7%BC%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>사용하는 기계가 늘어나니 자연스럽게 클라우드 스토리지를 이것 저것 써보고 있습니다.
가장 유명한 dropbox 나 다음 클라우드, 네이버 ndrive , 구글 드라이브 등을 사용해봤습니다만..
결국 dropbox가 제일 이더군요.
windows 만 사용하는 분들은 체감하기 힘들겠지만 리눅스,안드로이드,아이폰,맥 등을 다 고려하다보면 국내 서비스는 사실상 사용이 불가능하고.
구글 드라이브는 구글의 이름이 아깝게도 파일을 저장하기에는 영 아닙니다. 리눅스를 지원 하지 못할 뿐만 아니라 제가 지운 파일이 실제로 지워 지지 않고 계속 구글 드라이브 웹에 남아있을 뿐만 아니고 접근까지 가능한게 아주 맘에 들지 않았습니다.</description>
    </item>
    
    <item>
      <title>휴대용 스마트 폰의 크기는 어디까지 커질 수 있을까?</title>
      <link>https://kasworld.github.io/posts/2013-02-20-%ED%9C%B4%EB%8C%80%EC%9A%A9%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%ED%81%AC%EA%B8%B0%EB%8A%94%EC%96%B4%EB%94%94%EA%B9%8C%EC%A7%80%EC%BB%A4%EC%A7%88%EC%88%98%EC%9E%88%EC%9D%84%EA%B9%8C/</link>
      <pubDate>Wed, 20 Feb 2013 10:30:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-02-20-%ED%9C%B4%EB%8C%80%EC%9A%A9%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%ED%81%AC%EA%B8%B0%EB%8A%94%EC%96%B4%EB%94%94%EA%B9%8C%EC%A7%80%EC%BB%A4%EC%A7%88%EC%88%98%EC%9E%88%EC%9D%84%EA%B9%8C/</guid>
      <description>저번글을 쓰고나서 추가로 든 잡생각 들입니다. 휴대성이란 측면에서 보면 그 크기에 대해서 이미 오래전부터 여러 가지 테스트가 끝나서 보편적인 표준화가 이루어진 것이 있습니다. 소위 문고본 이라고 불리는 들고 다니며 읽기 위한 책의 규격이지요. 실제 출판업계에선 무슨 용어를 사용하는지 문외한인 저는 잘모르지만..
집에 있는 문고본을 자로 재보는 것 정도는 할 수 있습니다. ^^
문고본도 여러가지 형태와 크기를 가지는 것같습니다만.. 일단 제일 표준화가 잘되어 있고 또 시장지배력?을 가지고 있는 것 같은
일본 만화책을 선정했습니다.</description>
    </item>
    
    <item>
      <title>베가 넘버 6가 제법 쓸만하다기에. </title>
      <link>https://kasworld.github.io/posts/2013-02-18-%EB%B2%A0%EA%B0%80%EB%84%98%EB%B2%846%EA%B0%80%EC%A0%9C%EB%B2%95%EC%93%B8%EB%A7%8C%ED%95%98%EB%8B%A4%EA%B8%B0%EC%97%90/</link>
      <pubDate>Mon, 18 Feb 2013 10:45:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-02-18-%EB%B2%A0%EA%B0%80%EB%84%98%EB%B2%846%EA%B0%80%EC%A0%9C%EB%B2%95%EC%93%B8%EB%A7%8C%ED%95%98%EB%8B%A4%EA%B8%B0%EC%97%90/</guid>
      <description>어딘가에서 지금 제가 쓰고 있는 옵티머스 lte2와 베가 넘버 6를 같이 놓고 찍은 사진을 보고 그 크기 차이에 황당했습니다. 실제로(사진이지만) 비교해 보니 많이 크더군요.
그래서 이전부터 만들어 유지해 오고 있던 화면 크기(대각선)와 실제 화면의 가로 세로 크기 비교 용 계산 표를 링크합니다.
구글 독스로 만들어져 있으며 네개의 시트중 첫번을 보시면 됩니다.
https://docs.google.com/spreadsheet/ccc?key=0AquLscSY1Co_dFpycnJFUFcyYkUybUJQQ19VR0NIVVE&amp;amp;usp=sharing
화면 가로 세로 비가 다를 경우 대각선 길이가 같다고 같은 크기가 될리가 없기 때문에 같은 5인치 화면이어도 옵티머스 뷰/뷰2의 4:3화면과 5인치16:9 화면은 전혀 다른 가로 세로 길이를 가지며 또 화면의 총 면적도 전혀 다르게 됩니다.</description>
    </item>
    
    <item>
      <title>리눅스 민트 14 시나몬을 설치했습니다.</title>
      <link>https://kasworld.github.io/posts/2013-02-15-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%AF%BC%ED%8A%B814%EC%8B%9C%EB%82%98%EB%AA%AC%EC%9D%84%EC%84%A4%EC%B9%98%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Fri, 15 Feb 2013 21:56:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-02-15-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%AF%BC%ED%8A%B814%EC%8B%9C%EB%82%98%EB%AA%AC%EC%9D%84%EC%84%A4%EC%B9%98%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>며칠 전부터 고민하다가 오늘 일어나자마자 다 갈아업고 민트14를 설치했습니다. 잠깐 써본 느낌은 우분투 유니티에 짜증나고 xfce는 약간 부족하다고 느끼는 사람들에게는 아주 좋은 대안이 될것 같습니다. 사실 우분투가 이렇게 나왔어야 하지 않나 하는 생각이 들더군요.
처음 설치하면 nvidia 비디오 드라이버를 못잡아서 수동으로 설치해 줘야 하지만 금방 잘 잡히고 문제없이 작동합니다.
그리고 언제나처럼 제 손에 맞추기 위해 추가로 설치 및 설정한 것들을 기록합니다.
오라클의 뻘짓때문에 mysql대신 mariadb ppa 를 추가하고 설치 git / gvim 설치 및 설정 python 관련 모듈들 설치</description>
    </item>
    
    <item>
      <title>sublime text 2 에디터를 구입했습니다. - 수정했습니다.</title>
      <link>https://kasworld.github.io/posts/2013-01-20-sublimetext2%EC%97%90%EB%94%94%ED%84%B0%EB%A5%BC%EA%B5%AC%EC%9E%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4%EC%88%98%EC%A0%95%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 20 Jan 2013 23:08:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-20-sublimetext2%EC%97%90%EB%94%94%ED%84%B0%EB%A5%BC%EA%B5%AC%EC%9E%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4%EC%88%98%EC%A0%95%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>요즘 프로그래밍용 텍스트 에디터의 대세^^인 sublime text 2 를 설치해서 써보고 있습니다.
여러 플랫폼(windows, linux, max os )을 지원 하고 라이센스도 머신 단위가 아니고 구매자 단위로 주어지는 등 꽤 맘에 드는 부분이 많은 에디터 입니다.
보면 볼수록
도스 시절의 강자였던 brief ( http://en.wikipedia.org/wiki/Brief_(text_editor) )
win16 시절의 강자였던 codewright ( http://en.wikipedia.org/wiki/CodeWright )
들의 정통 후계자란 느낌이 들어서 구매하는 것을 심각하게 고민하기 시작했습니다.
심지어 가격도 전성기 시절의 위 에디터 가격 보다 싸군요. ( biref : $199, codewright $250 , subslime text $59!</description>
    </item>
    
    <item>
      <title>옵티이이 감상기(사용, 루팅기)</title>
      <link>https://kasworld.github.io/posts/2013-01-20-%EC%98%B5%ED%8B%B0%EC%9D%B4%EC%9D%B4%EA%B0%90%EC%83%81%EA%B8%B0%EC%82%AC%EC%9A%A9%EB%A3%A8%ED%8C%85%EA%B8%B0/</link>
      <pubDate>Sun, 20 Jan 2013 12:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-20-%EC%98%B5%ED%8B%B0%EC%9D%B4%EC%9D%B4%EA%B0%90%EC%83%81%EA%B8%B0%EC%82%AC%EC%9A%A9%EB%A3%A8%ED%8C%85%EA%B8%B0/</guid>
      <description>넥서스4와 옵티머스G 그리고 옵티머스 lte2를 놓고 무엇을 살까 고민하다가 AS 문제와 가격적인 문제로 ( 옵티이이가 그래도 좀 쌌습니다. ) 옵티이이를 선택했습니다.
그리고 이제 2주가 약간 넘어가니 사용기? 내지는 감상기를 적어 봅니다.
장점 교환식 배터리 외장메모리 지원 배터리를 빼지 않고 외장 메모리 교체 가능 - 즉 핫 스왑 가능 ( 뒷 판을 열여야 하긴 하지만 뒷판만 열면 바로 넣고 뺄수 있습니다. ) 최신 OS 지원 ( 4.1.2) 꽤나 넉넉한 램 ( 2G) 적당한?</description>
    </item>
    
    <item>
      <title>모바일 게임에서 사용자 계정 관리 - 플랫폼은 어떻게해야 할까?</title>
      <link>https://kasworld.github.io/posts/2013-01-19-%EB%AA%A8%EB%B0%94%EC%9D%BC%EA%B2%8C%EC%9E%84%EC%97%90%EC%84%9C%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B3%84%EC%A0%95%EA%B4%80%EB%A6%AC%ED%94%8C%EB%9E%AB%ED%8F%BC%EC%9D%80%EC%96%B4%EB%96%BB%EA%B2%8C%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/</link>
      <pubDate>Sat, 19 Jan 2013 12:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-19-%EB%AA%A8%EB%B0%94%EC%9D%BC%EA%B2%8C%EC%9E%84%EC%97%90%EC%84%9C%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B3%84%EC%A0%95%EA%B4%80%EB%A6%AC%ED%94%8C%EB%9E%AB%ED%8F%BC%EC%9D%80%EC%96%B4%EB%96%BB%EA%B2%8C%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/</guid>
      <description>어쩌다 보니 모바일 게입 업계 분들과 만날일이 있어서 공부도 할겸 이런 저런 모바일 게임을 받아서 테스트를 해봤습니다.
저야 기본적으로 백 엔드에 관심이 많은 쪽이라 그 쪽을 보게 되는데요.
카카오톡은 구글 에서 게임을 받더라도 반드시 카카오톡 아이디로 로그인을 해야만 게임을 실행할수 있습니다.
그에 반해 한게임(nhn)은 아이디를 만들기 싫다고 하면 자동으로 그 게임용 아이디를 자동으로 만들어 주더군요. ( 제가 테스트 한것은 피쉬 아일랜드 입니다. - 아주 잘 만들어진 게임이더군요. )
이거 느낌이 아주 좋았습니다.</description>
    </item>
    
    <item>
      <title>지름은 지름을 부릅니다. 역시;;;</title>
      <link>https://kasworld.github.io/posts/2013-01-18-%EC%A7%80%EB%A6%84%EC%9D%80%EC%A7%80%EB%A6%84%EC%9D%84%EB%B6%80%EB%A6%85%EB%8B%88%EB%8B%A4%EC%97%AD%EC%8B%9C/</link>
      <pubDate>Fri, 18 Jan 2013 19:21:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-18-%EC%A7%80%EB%A6%84%EC%9D%80%EC%A7%80%EB%A6%84%EC%9D%84%EB%B6%80%EB%A6%85%EB%8B%88%EB%8B%A4%EC%97%AD%EC%8B%9C/</guid>
      <description>옵티머스 lte2(옵티이이) 로 바꾼후에 언제나 처럼 이런 저런 테스트를 했습니다.
집에 사용하는 공유기가 몇년 전에 꽤 비싸게 주고산 802.11n에 Chanel bonding이 되는 (된다고 주장하는 - 지원하는 디바이스가 없어서 한번도 테스트를 못해봤으니.. ) dlink dir-655 였기때문에 신나요. 하고 네트웍 벤치마크 프로그램을 설치하고 실행해 봤습니다.
인터넷이 끊기더군요;;;
&amp;hellip;
&amp;hellip;
mmorpg를 하는 와이프는 서버에서 팅겨서 &amp;ldquo;뭐지?&amp;rdquo; 하는 표정을 짓고..
공유기를 재부팅하니 다시 인터넷이 됩니다. ;;
한번더 해보고 똑같은 증상이 일어 나는 것을 확인한후.. 조용히 다음날 새벽 까지 기다렸습니다.</description>
    </item>
    
    <item>
      <title>젤리빈에서 wifi 채널 확장/수정하기</title>
      <link>https://kasworld.github.io/posts/2013-01-17-%EC%A0%A4%EB%A6%AC%EB%B9%88%EC%97%90%EC%84%9Cwifi%EC%B1%84%EB%84%90%ED%99%95%EC%9E%A5%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 17 Jan 2013 10:42:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-17-%EC%A0%A4%EB%A6%AC%EB%B9%88%EC%97%90%EC%84%9Cwifi%EC%B1%84%EB%84%90%ED%99%95%EC%9E%A5%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/</guid>
      <description>에이서 아이코니아 탭 a500 에 젤리빈 커펌을 올린 후 http://kasw.blogspot.kr/2013/01/a500.html
오늘 아침에 일어나보니 a500이 무선랜이 끊어 져 있더군요. 어라 공유기는 이상없는데 하고 공유기 관리 페이지를 들어가보니 wifi 사용 채널이 13으로 되어 있는 것을 보고 갑자기 생각이 났습니다.
http://en.wikipedia.org/wiki/List_of_WLAN_channels
wifi 2.4 GHz (802.11b/g/n) 은 각 나라별로 사용하는 채널이 다르며 미국이 가장 좁은 범위를 사용합니다.
그래서 해외쪽 커펌을 올리다 보면 wifi 채널이 좁게 설정된 경우가 있는데 이경우 우리나라 공유기가 그 밖의 범위 채널을 쓰도록 설정되면 wifi가 않잡히게 됩니다.</description>
    </item>
    
    <item>
      <title>휴대폰을 바꿨습니다. </title>
      <link>https://kasworld.github.io/posts/2013-01-16-%ED%9C%B4%EB%8C%80%ED%8F%B0%EC%9D%84%EB%B0%94%EA%BF%A8%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 16 Jan 2013 20:23:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-16-%ED%9C%B4%EB%8C%80%ED%8F%B0%EC%9D%84%EB%B0%94%EA%BF%A8%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>올초에 그동안 잘 써오던 레이(휴대폰)를 옵티머스 lte2로 바꿨습니다.
약정이 3개월 정도 남아 있었고 딱히 새로 약정을 걸고 싶지 않아서 그냥 공기계를 구매해서 유심기변을 했지요.
우리나라에서 핸드폰을 구매,변경하는 것은 너무 많은 공부를 필요로 하더군요. ;;;
기존의 잘쓰던 레이는 이상하게도 가끔 멋대로 재부팅을 하는 증상을 보이기 시작했었고, 게다가 노안^^;;; 이 오고 있어서 다음에는 큰화면ㅠㅠ 으로 바꿔야 겠다고 생각하고 있었지요.
전 아몰레드는 싫어 하기때문에(아직 시기 상조인 기술을 억지로 내고 있다고 생각합니다.) 넥서스 4나 옵티머스 g 정도를 생각하고 있었는데 가격적인 면에서 옵티머스lte2가 그나마 적당하더군요.</description>
    </item>
    
    <item>
      <title>아키에이지를 보며 (mmorpg 에 대한 단상)</title>
      <link>https://kasworld.github.io/posts/2013-01-14-%EC%95%84%ED%82%A4%EC%97%90%EC%9D%B4%EC%A7%80%EB%A5%BC%EB%B3%B4%EB%A9%B0mmorpg%EC%97%90%EB%8C%80%ED%95%9C%EB%8B%A8%EC%83%81/</link>
      <pubDate>Mon, 14 Jan 2013 16:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-14-%EC%95%84%ED%82%A4%EC%97%90%EC%9D%B4%EC%A7%80%EB%A5%BC%EB%B3%B4%EB%A9%B0mmorpg%EC%97%90%EB%8C%80%ED%95%9C%EB%8B%A8%EC%83%81/</guid>
      <description>요즘 흥하는(?) 게임인 아키에이지를 옆에서 보며 든 생각들입니다. 와이프가 하고 있기 때문에 정말 옆에서 보고 있습니다. ^^;; 일단 저는 0시간 정도( 한자리수 시간) 해 보았는데 재미 없더군요. 인터페이스는 불편하고 불친절하며 반응은 느리고 키보드 조작은 짜증납니다. 퀘스트, 사냥은 낡았으며 그래픽 비주얼도 그저 그랬습니다. 그런데 제 처는 재미있다고 열심히 합니다. 아마 유료화된 이후도 계속할듯 합니다. ( 테라는 하다 말더니 ;;; ) 그래서 와이프랑 수다를 떨면서 이런저런 생각이 들었습니다. 1. 아키에이지가 mmorpg는 월드 시뮬레이션이라는 근본으로 제대로 돌아가서 어쩌면 원시시대?</description>
    </item>
    
    <item>
      <title>에이서 a500에 젤리빈 올리기.</title>
      <link>https://kasworld.github.io/posts/2013-01-06-%EC%97%90%EC%9D%B4%EC%84%9Ca500%EC%97%90%EC%A0%A4%EB%A6%AC%EB%B9%88%EC%98%AC%EB%A6%AC%EA%B8%B0/</link>
      <pubDate>Sun, 06 Jan 2013 19:39:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-01-06-%EC%97%90%EC%9D%B4%EC%84%9Ca500%EC%97%90%EC%A0%A4%EB%A6%AC%EB%B9%88%EC%98%AC%EB%A6%AC%EA%B8%B0/</guid>
      <description>뱀띠 새해를 맞이하여 오랫만에 a500에 커펌질을 했습니다.
기존에 쓰던 ics 4.0.3 lightspeed 커펌이 슬슬 지져워 지기도 했고 해서
우리의 호프 xda 포럼을 뒤적 뒤적 해서 http://forum.xda-developers.com/forumdisplay.php?f=1136
적당한 커펌을 선정 했습니다. http://forum.xda-developers.com/showthread.php?t=1935582
엄청나게 긴 이름을 가진 CM10-FLEX_V6Supercharged_Rev2.3_GappsIncl_Public 을 사용 하기로 합니다. 젤리빈 4.1.2 버전입니다. 아무 생각없이 ( 워낙 오랫만이라 뭐를 어떻게 했었는지 기억도 안나고 해서 ) 위 커펌을 받아서 sd 카드에 넣고 리커버리 모드를 들어가서 install zip file을 해봅니다.
업데이트가 시작하는 척 하더니 먹통이 됩니다.</description>
    </item>
    
    <item>
      <title>자전거로 돌아보는 서울</title>
      <link>https://kasworld.github.io/posts/2012-10-31-%EC%9E%90%EC%A0%84%EA%B1%B0%EB%A1%9C%EB%8F%8C%EC%95%84%EB%B3%B4%EB%8A%94%EC%84%9C%EC%9A%B8/</link>
      <pubDate>Wed, 31 Oct 2012 20:10:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-10-31-%EC%9E%90%EC%A0%84%EA%B1%B0%EB%A1%9C%EB%8F%8C%EC%95%84%EB%B3%B4%EB%8A%94%EC%84%9C%EC%9A%B8/</guid>
      <description>드디어 그 동안의 집주변 라이딩 튜토리얼^^ 을 끝내고 오늘은 과천 경마 공원(근처)까지 자전거로 왕복30km 주파했습니다. ( 정확히는 28.8km 지만 뭐 ^^) 두시간 동안 쉬지않고 달려서 피곤하긴 했지만 자전거로 갈수 있는 곳이 생각보다 많다는 것에 기뻐하고 있습니다.
게다가 이 계절에 양재천 가를 따라 자전거를 타고가면 정말 꿈같은 광경이 지나갑니다. 마침 추워져서 날벌래들도 별로 없고 공기는 맑고 차가우며 하늘은 높고 길 바로 옆의 물가에는 갈대와 이름모를 들풀들이 너울거리거든요. 물론 춥기 때문에 중무장하고 타야 합니다.</description>
    </item>
    
    <item>
      <title>구글 go 언어를 공부하면서 몇몇 중요 포인트를 메모중입니다. (4/N) </title>
      <link>https://kasworld.github.io/posts/2012-10-18-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A44n/</link>
      <pubDate>Thu, 18 Oct 2012 22:08:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-10-18-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A44n/</guid>
      <description>금방 끝날줄 알았는데 남은것이 많더군요.
이제부터는 좀 두서없는 내용이 이어집니다.
reflection package 를 사용해서 func TypeOf(i interface{}) Type func ValueOf(i interface{}) Value 를 사용할수 있습니다. 이런게 얻어진 Value object에 대해서 struct object 였다면 Method( 2 ).Call( some args ) 형태로 실행을 시킬수도 있습니다.
os.Stdin : 표준 입력입니다. os.Open 을 사용해서 파일을 열수 있습니다. io/ioutil 패키지에 ReadFile 을 사용하면 파일을 한번에 읽고, WriteFile로 한번에 씁니다. fmt.Fscanln을 사용하면 space separated file 을 편하게 읽을수 있습니다.</description>
    </item>
    
    <item>
      <title>하라는 일은 안하고 쓰는 일기 2;;;</title>
      <link>https://kasworld.github.io/posts/2012-10-16-%ED%95%98%EB%9D%BC%EB%8A%94%EC%9D%BC%EC%9D%80%EC%95%88%ED%95%98%EA%B3%A0%EC%93%B0%EB%8A%94%EC%9D%BC%EA%B8%B02/</link>
      <pubDate>Tue, 16 Oct 2012 18:03:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-10-16-%ED%95%98%EB%9D%BC%EB%8A%94%EC%9D%BC%EC%9D%80%EC%95%88%ED%95%98%EA%B3%A0%EC%93%B0%EB%8A%94%EC%9D%BC%EA%B8%B02/</guid>
      <description>요즘 (싸구려?) 자전거 하나를 사서 이리저리 동내 주변을 타고 다니고 있습니다만..
이 자전거를 이리 저리 조금씩 손보는 재미 ( 뭐 엔지니어 engineer 니까요. ) 를 배워 가고 있는 중입니다.
그런 의미에서 이리 저리 흩어져 있는 제 자전거의 spec에 대한 정리 글입니다. ( 이게 의외로 판매사 홈페이지에도 정리가 되어 있지 않더라구요. )
**삼천리 hound hd200 plus 규격 정리 - 제가 산모델입니다. ** ** ** **보통 쇼핑몰에는 ** **삼천리자전거 하운드(HOUND) HD200 PLUS (2012년형 / 바퀴20형 / 기어7단)** **처럼 올라와 있구요.</description>
    </item>
    
    <item>
      <title>사회 간접 자본의 혜택 </title>
      <link>https://kasworld.github.io/posts/2012-10-11-%EC%82%AC%ED%9A%8C%EA%B0%84%EC%A0%91%EC%9E%90%EB%B3%B8%EC%9D%98%ED%98%9C%ED%83%9D/</link>
      <pubDate>Thu, 11 Oct 2012 22:08:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-10-11-%EC%82%AC%ED%9A%8C%EA%B0%84%EC%A0%91%EC%9E%90%EB%B3%B8%EC%9D%98%ED%98%9C%ED%83%9D/</guid>
      <description>하라는 일? 은 안하고 쓰는 일기. ;;;;
얼마전 자전거(싸구려지만 ^^)를 사서 동네(단지 내)를 돌다가 조금씩 돌아다니는 범위를 넖혀가고 있는 중입니다만&amp;hellip;
동네가 조금 익숙해져서 이번주초에는 올릭픽공원까지 자전거로 가서 한바퀴를 돌고 왔고 오늘은 늘 걷기로만 돌던 석촌호수주변 자전거 도로를 따라서 돌아 봤습니다.
서울에서 나서 지금까지 꽤 오랜 시간을 살아 왔지만 요즘처럼 사회 간접자본의 혜택을 보고 산적이 없는 것 같습니다.
잠실에 이사와서 5년 만에 집에서 5분 거리에 호수를 따라 산책할수 있는 곳이 있다는 곳을 깨달은게 바로 얼마 전인데&amp;hellip;</description>
    </item>
    
    <item>
      <title>구글 go 언어를 공부하면서 몇몇 중요 포인트를 메모중입니다. (3/N) </title>
      <link>https://kasworld.github.io/posts/2012-09-26-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A43n/</link>
      <pubDate>Wed, 26 Sep 2012 17:07:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-09-26-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A43n/</guid>
      <description>그 세번째 입니다.
이전글은 http://kasw.blogspot.com/2012/09/go-2n.html
Interface Interface는 object의 behavior 를 규정한다. ( 수행 가능한 method 들의 signature 를 정의한다. ) type InterfaceNamer interface { Method1( params ) returns Method2( params ) returns } 관용적으로 er로 끝나는 이름을 사용한다. ( Printer, Reader, Logger 등등 ) 가능한 짦게 만든다 ( primitive 하게 만든다 ) var interfaceReference InterFaceNamer = someObject struct를 정의할때 어떤 interface를 구현하는지 지정할 필요가 없다. interface에 정의된 method가 구현되어 있다면 자동으로 사용가능하다.</description>
    </item>
    
    <item>
      <title>구글 go 언어를 공부하면서 몇몇 중요 포인트를 메모중입니다. (2/N) </title>
      <link>https://kasworld.github.io/posts/2012-09-26-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A42n/</link>
      <pubDate>Wed, 26 Sep 2012 11:40:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-09-26-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A42n/</guid>
      <description>그 두번째 입니다. ( 총 몇회가 될지 모르니 2/N 입니다. ^^ )
첫 글은 http://kasw.blogspot.com/2012/09/go.html 를 보시면 됩니다.
Maps key 로 사용 가능한 것은 == , != 이 정의 된 type string,int,float 는 가능 array,slice,struct 는 불가능 pointer, interface 는 가능 struct 를 key로 쓰고 싶으면 Key() 나 Hash() method 를 만들고 그 결과를 키로 사용할것. value 는 아무거나 사용 가능 var map1 map[keytype]valuetype = make( map[keytype]valuetype , capacity ) map1 := map[keytype]valuetype{} map is reference type len(map1) map1[notInMapKey] is zero-value of value type not error val1,isPresent = map1[key1] 형태로 존재하는지 확인 가능 delete(map1, key1) 로 항목을 삭제 가능하면 없는 항목이어도 에러는 없다.</description>
    </item>
    
    <item>
      <title>구글 go 언어를 공부하면서 몇몇 중요 포인트를 메모중입니다. (1/N)</title>
      <link>https://kasworld.github.io/posts/2012-09-25-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A41n/</link>
      <pubDate>Tue, 25 Sep 2012 16:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-09-25-%EA%B5%AC%EA%B8%80go%EC%96%B8%EC%96%B4%EB%A5%BC%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%EB%AA%87%EB%AA%87%EC%A4%91%EC%9A%94%ED%8F%AC%EC%9D%B8%ED%8A%B8%EB%A5%BC%EB%A9%94%EB%AA%A8%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A41n/</guid>
      <description>다음 프로젝트에 go 언어를 쓸 생각이어서 공부하는 김에 몇가지 중요 포인트들을 메모 하고 있습니다. 원래는 다 끝나면 한꺼번에 블로그에 올리려고 했는데 적다보니 양이 많아져서 일단 앞부분만 먼저 정리합니다.
주의 할 것은 제가 보기 위해 적은 것이라 기본적으로 C/C++/java/C# 에대한 지식과 추가로 python 같은 스크립트언어도 안다고 가정한 상태에서 적은 것입니다. 게다가 go 언어의 구체적인 syntax 에 대해서도 http://golang.org/ref/spec 같은 곳에서 한번 정도 읽어 봤다고 가정합니다. ( 조건이 너무 까다롭군요. ;; )</description>
    </item>
    
    <item>
      <title> GVIM으로 IDE 처럼 사용하기 </title>
      <link>https://kasworld.github.io/posts/2012-08-30-gvim%EC%9C%BC%EB%A1%9Cide%EC%B2%98%EB%9F%BC%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 30 Aug 2012 12:02:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-08-30-gvim%EC%9C%BC%EB%A1%9Cide%EC%B2%98%EB%9F%BC%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>요즘 하고 있는 일이 많은 파일과 폴더들을 돌아다니면서 소스를 분석하고 수정해야 하는 일이라 (rails 프로젝트가 그렇더군요. ) 기존에 사용하고 있던 vim에 NERDtree plugin을 추가하여 사용하고 있습니다 http://www.vim.org/scripts/script.php?script_id=1658 taglist plugin과 조합아면 위와같은 화면을 보며 작업할수 있게 되더군요. ^^ http://www.vim.org/scripts/script.php?script_id=273 추가로 vim-rails 를 추천 받아서 사용중인데 취향을 타는 건지 그렇게 엄청 좋은지는 잘모르겠습니다. https://github.com/tpope/vim-rails
참고로 스크린샷은 web2py 작업 화면 예 입니다.</description>
    </item>
    
    <item>
      <title>windows의 vim에서 python 활성화 하기 </title>
      <link>https://kasworld.github.io/posts/2012-08-14-windows%EC%9D%98vim%EC%97%90%EC%84%9Cpython%ED%99%9C%EC%84%B1%ED%99%94%ED%95%98%EA%B8%B0/</link>
      <pubDate>Tue, 14 Aug 2012 16:52:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-08-14-windows%EC%9D%98vim%EC%97%90%EC%84%9Cpython%ED%99%9C%EC%84%B1%ED%99%94%ED%95%98%EA%B8%B0/</guid>
      <description>간단한 팁입니다만 기록을 위해서 적습니다.
전 윈도우건 리눅스건 환경을 거의 통일 시켜놓고 작업을 하는 편입니다.
이 환경의 통일에서 상당히 중요한 역할을 하는 것이 gvim 인데 http://www.vim.org/download.php 주 에디터/뷰어로 항상 gvim을 사용하도록 세팅해 놓으면 chrome/firefox와 더불어 종종 &amp;ldquo;내가 지금 윈도로 부팅한 상태인가?&amp;rdquo; 를 헷갈릴 정도로 일관된 환경을 유지 할수 있습니다. ( 과장이 좀 많이 있지만요. ^^)
아무튼 vim을 쓰고 있는 시간이 많아지니 이런저런 플러그인 들도 설치하게 되고 http://kldp.org/node/125263 설정들도 이렇게 저렇게 하곤 합니다.</description>
    </item>
    
    <item>
      <title>ruby 삽질기</title>
      <link>https://kasworld.github.io/posts/2012-08-13-ruby%EC%82%BD%EC%A7%88%EA%B8%B0/</link>
      <pubDate>Mon, 13 Aug 2012 20:54:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-08-13-ruby%EC%82%BD%EC%A7%88%EA%B8%B0/</guid>
      <description>어쩌다 팔자에 없는 Ruby on rails 작업을 하게 되었습니다. ( 새 프로젝트를 하는게 아니고 넘들이 만든 프로젝트의 customizing , 문서화 , 유지보수 입니다. )
하게된 사유야 구구절절하지만 생략하고. ( 깊이 알면 다칩니다. ^^)
루비야 예전에 조금 공부해둔게 있는 관계로 뭐 별거 있겠어 하고 생각한데다가 rails 역시 python 에 있는 web framework 들이 대놓고 저희는 rails를 베꼈어요! 하는 것들을 여럿 써 본 관계로 오오 드디어 원조 를 써보는건가 하고 딩가딩가한 마인드로 시작을 했습니다.</description>
    </item>
    
    <item>
      <title>wine 설치시 노틸러스의 짜증나는 notepad 연결 제거하기</title>
      <link>https://kasworld.github.io/posts/2012-07-30-wine%EC%84%A4%EC%B9%98%EC%8B%9C%EB%85%B8%ED%8B%B8%EB%9F%AC%EC%8A%A4%EC%9D%98%EC%A7%9C%EC%A6%9D%EB%82%98%EB%8A%94notepad%EC%97%B0%EA%B2%B0%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 30 Jul 2012 14:25:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-07-30-wine%EC%84%A4%EC%B9%98%EC%8B%9C%EB%85%B8%ED%8B%B8%EB%9F%AC%EC%8A%A4%EC%9D%98%EC%A7%9C%EC%A6%9D%EB%82%98%EB%8A%94notepad%EC%97%B0%EA%B2%B0%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</guid>
      <description>http://ubuntuforums.org/showthread.php?t=1654415
항상짜증나던것인데 검색하다 발견해서 적어 놓습니다. 우분투에서 와인을 설치하면 와인과 같이 notepad.exe 가 설치되고 노틸러스 등의 파일 관리자에서 이 notepad로 열기가 활성화 됩니다.
이 notepad는 윈도용 실행파일이라 우분투에선 사용할 필요도 이유도 없어 신경에 거슬렸는데 아래와 같이 하면 파일 관리자와의 연결을 제거 할수 있군요.
rm ~/.local/share/applications/wine-extension-txt.desktop sudo update-desktop-database #this updates mimeinfo.cache
같은 방법으로 다른 연결들도 삭제/수정할 수 있을 것 같습니다.</description>
    </item>
    
    <item>
      <title>기다리다 지쳐서 엑스페리아 레이에 커펌을 올렸습니다.</title>
      <link>https://kasworld.github.io/posts/2012-07-25-%EA%B8%B0%EB%8B%A4%EB%A6%AC%EB%8B%A4%EC%A7%80%EC%B3%90%EC%84%9C%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EC%97%90%EC%BB%A4%ED%8E%8C%EC%9D%84%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 25 Jul 2012 13:17:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-07-25-%EA%B8%B0%EB%8B%A4%EB%A6%AC%EB%8B%A4%EC%A7%80%EC%B3%90%EC%84%9C%EC%97%91%EC%8A%A4%ED%8E%98%EB%A6%AC%EC%95%84%EB%A0%88%EC%9D%B4%EC%97%90%EC%BB%A4%ED%8E%8C%EC%9D%84%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>소니에서 아이스크림 샌드위치를 올려준다고 약속한 날짜가 5월달에서 7월로 밀리더니 아직도 소식이 없어서 포기하고 XDA 를 뒤적뒤적 해서 ICS 커펌을 올려버렸습니다.
이 글은 그 기록입니다.
소니 안드로이드 폰은 모두(?) 부트로더 락이 걸려 있는 관계로 커펌을 올리려면 언락 과정을 거쳐야 합니다. http://optimistsc.tistory.com/22 위 링크 내용을 간단 요약하면 소니 언락 홈페이지 가서 내 폰의 IMEI 를 입력 언락 코드를 받는다. ( 이과정에서 AS 보장 포기등을 동의 해야 합니다 ) 이 코드를 사용해서 fastboot 틀로 언락을 한다.</description>
    </item>
    
    <item>
      <title>현재 까지 언어별 투자시간</title>
      <link>https://kasworld.github.io/posts/2012-07-11-%ED%98%84%EC%9E%AC%EA%B9%8C%EC%A7%80%EC%96%B8%EC%96%B4%EB%B3%84%ED%88%AC%EC%9E%90%EC%8B%9C%EA%B0%84/</link>
      <pubDate>Wed, 11 Jul 2012 22:02:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2012-07-11-%ED%98%84%EC%9E%AC%EA%B9%8C%EC%A7%80%EC%96%B8%EC%96%B4%EB%B3%84%ED%88%AC%EC%9E%90%EC%8B%9C%EA%B0%84/</guid>
      <description>세월이 하수상하지만 ( 정치건 it 판이건 ) 곰곰히 생각해보니 python을 실무에 적용해서 써 온지도 어느덧 10000시간이 넘어간듯 합니다.
얼마전 아는 후배가 첫 8bit kid들이 아직 프로그래밍을 하고 있으면 대충 30년이 되었다고 하는글을 올렸는데 그 글을 보면서 만감이 교차 하더군요.
정말로 30년이 된겁니다. ㅠㅠ 살아온 시간의 3/4 이상을 컴퓨터와 함께 지낸거지요.
그래서 생각해본 언어별 투자? 시간입니다. ( 중복 시간이 있으니 총합은 30년이 넘을수 있습니다 ) basic ( apple soft ) : 5년 Assembly : ( 6502 ) : 3년 ?</description>
    </item>
    
    <item>
      <title>허니컴에 적용할만한 팁, 유용한 프로그램</title>
      <link>https://kasworld.github.io/posts/2011-11-07-%ED%97%88%EB%8B%88%EC%BB%B4%EC%97%90%EC%A0%81%EC%9A%A9%ED%95%A0%EB%A7%8C%ED%95%9C%ED%8C%81%EC%9C%A0%EC%9A%A9%ED%95%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/</link>
      <pubDate>Mon, 07 Nov 2011 20:46:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-11-07-%ED%97%88%EB%8B%88%EC%BB%B4%EC%97%90%EC%A0%81%EC%9A%A9%ED%95%A0%EB%A7%8C%ED%95%9C%ED%8C%81%EC%9C%A0%EC%9A%A9%ED%95%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/</guid>
      <description>허니컴이 되면서 H/W 버튼이 없어진대신 화면 아래의 일정공간을 항상 S/W 버튼 및 상태 표시영역으로 확보하고 있어서 화면이 조금 좁아 지고 있는데요.
이게 맘에 안드시는 분을 위한 프로그램 입니다.
아래 링크의 프로그램을 설치하면 (당연히 루팅되어 있어야 합니다.)
이 S/W 버튼 + 상태표시 영역을 숨기거나 표시 할수 있게 됩니다.
숨기는것은 상태 표시공간의 프로그램 아이콘을 선택하면 되고 다시 표시하는 것은 화면의 아래쪽을 터치하면 됩니다.
http://ppareit.github.com/HideBar/
그리고 모든 스마트 폰이면 당연히 가능해야 하는 카메라 셔터소리 를 없애는 법입니다.</description>
    </item>
    
    <item>
      <title>에이서 a500에 설치해본 rom들 간단 평가 및 기록.</title>
      <link>https://kasworld.github.io/posts/2011-11-06-%EC%97%90%EC%9D%B4%EC%84%9Ca500%EC%97%90%EC%84%A4%EC%B9%98%ED%95%B4%EB%B3%B8rom%EB%93%A4%EA%B0%84%EB%8B%A8%ED%8F%89%EA%B0%80%EB%B0%8F%EA%B8%B0%EB%A1%9D/</link>
      <pubDate>Sun, 06 Nov 2011 15:35:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-11-06-%EC%97%90%EC%9D%B4%EC%84%9Ca500%EC%97%90%EC%84%A4%EC%B9%98%ED%95%B4%EB%B3%B8rom%EB%93%A4%EA%B0%84%EB%8B%A8%ED%8F%89%EA%B0%80%EB%B0%8F%EA%B8%B0%EB%A1%9D/</guid>
      <description>정식 롬 3개 ( honeycomb 3.0 , 3.1 3.2 ) 와 커스텀 롬 3개 를 써 봤습니다.
최초로 설치한것은 표준 3.2 에 rooting 만 한것 http://forum.xda-developers.com/showthread.php?t=1290318
상당히 커스터마이징 한 taboonay 2.2 http://forum.xda-developers.com/showthread.php?t=1138051
그리고 거기에 추가로 커스텀 커널을 설치하는것. Taboonay V3.7 kernel http://forum.xda-developers.com/showthread.php?t=1170319
처음엔 무섭기도 하고 잘모르니까 가장 최소로 수정한 것을 설치해서 사용했으며 이 rom은 정말로 아무런 차이가 없는 느낌입니다. ( 설치해보고 뭐가 달라졌지? 하고 고민할정도. )
두번째로 설치한것은 기본 어플리케이션이 많이 달라 집니다.</description>
    </item>
    
    <item>
      <title>에이서 아이코니아 탭 a500을 루팅 했습니다.</title>
      <link>https://kasworld.github.io/posts/2011-10-22-%EC%97%90%EC%9D%B4%EC%84%9C%EC%95%84%EC%9D%B4%EC%BD%94%EB%8B%88%EC%95%84%ED%83%ADa500%EC%9D%84%EB%A3%A8%ED%8C%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 22 Oct 2011 18:36:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-10-22-%EC%97%90%EC%9D%B4%EC%84%9C%EC%95%84%EC%9D%B4%EC%BD%94%EB%8B%88%EC%95%84%ED%83%ADa500%EC%9D%84%EB%A3%A8%ED%8C%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>리눅스를 쓰는 사람들의 로망? 자존심? 과 같은 것이 있다면 &amp;ldquo;적어도 내가 사용하는 기계의 완전한 제어권은 내게 있다&amp;rdquo; ( 또는 있어야 한다 ) 는 점 일 것입니다. 이는 오픈 소스에서만 가능한 것으로 내가 마음대로 소스/설정 을 보고 수정할수 있는 가능성과 권한이 없는 윈도우 같은 클로우즈드 소스 에서는 불가능 한 것이지요.
서론이 긴~~~~ 이유는 ^^ 이런 이유로 필요도 없는 a500 루팅을 한 것에 대해 스스로 에게 한 변명입니다. ^^;;;
안드로이드든 오픈소스임에도 불구하고 컨슈머 용 디바이스로 쓰인 다는 이유만으로 사용자에게 전체 권한을 주고 있지 않습니다.</description>
    </item>
    
    <item>
      <title>방금 발견? 한 blogger 의 버그?</title>
      <link>https://kasworld.github.io/posts/2011-10-16-%EB%B0%A9%EA%B8%88%EB%B0%9C%EA%B2%AC%ED%95%9Cblogger%EC%9D%98%EB%B2%84%EA%B7%B8/</link>
      <pubDate>Sun, 16 Oct 2011 14:58:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-10-16-%EB%B0%A9%EA%B8%88%EB%B0%9C%EA%B2%AC%ED%95%9Cblogger%EC%9D%98%EB%B2%84%EA%B7%B8/</guid>
      <description>새로 바뀐 blogger 인터페이스를 사용해서 구글 크롬(14.0.835.202 (Developer Build 103287 Linux) Ubuntu 11.10)에서 새글 작성시 제목을 입력해도 적용 되지 않습니다.
firefox에선 잘되더군요.
덕분에 글작성 하다가 열좀 받았습니다.;;;
결국 blogger의 예전 인터페이스를 쓰도록 설정을 바꿔 버렸습니다. ( 이젠 잘되겠지요.. )</description>
    </item>
    
    <item>
      <title>우분투 11.10 으로 업그레이드</title>
      <link>https://kasworld.github.io/posts/2011-10-16-%EC%9A%B0%EB%B6%84%ED%88%AC1110%EC%9C%BC%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C/</link>
      <pubDate>Sun, 16 Oct 2011 12:47:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-10-16-%EC%9A%B0%EB%B6%84%ED%88%AC1110%EC%9C%BC%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C/</guid>
      <description>이번에 우분투 11.10이 나왔습니다. 서둘러 설치 해봤자 다운 속도 느리고 초기 버그 로 고생( 그것이 또 재미지만 ^^ )할께 뻔해서 느긋하게 있다가 주말을 맞이해서 집기계를 업그레이드 했습니다. 회사 테스트 용 기계는 금요일 퇴근 전에 업그레이드를 걸어 두었구요.
결론만 말씀드리면 유니티는 원래부터 맘에 안들어 gnome-classic 으로 사용하고 있었는데 . 이번 업그레이ㄷ로 들어간 gnome-shell역시 맘에 안들어서 xfce로 전환 했습니다.
데스크탑에서 꼭 넷북이나 태블릿 같은 인터페이스 + 가능한 사용자 설정을 숨기는 형태로의 변화가 과연 정말로 필요한건지 정말 궁금합니다.</description>
    </item>
    
    <item>
      <title>Dennis Ritchie 가 돌아가셨다고 합니다.</title>
      <link>https://kasworld.github.io/posts/2011-10-13-dennisritchie%EA%B0%80%EB%8F%8C%EC%95%84%EA%B0%80%EC%85%A8%EB%8B%A4%EA%B3%A0%ED%95%A9%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Thu, 13 Oct 2011 23:56:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-10-13-dennisritchie%EA%B0%80%EB%8F%8C%EC%95%84%EA%B0%80%EC%85%A8%EB%8B%A4%EA%B3%A0%ED%95%A9%EB%8B%88%EB%8B%A4/</guid>
      <description>구글+에 쓴글입니다. https://plus.google.com/117693677442315302416/posts/WpBRKwdBPQg
대중적인 임팩트는 잡스보다 약할지 모르지만.
IT에 끼친 영향으로(만) 생각한다면 훠~~~ㄹ씬 큰 Dennis Ritchie 가 돌아가셨다고 합니다.
잡스의 죽음이 . 아~~ 앞으로 재미난 일이 줄겠구나 란 아쉬움 이라면 리치의 죽음은 아. 이제 정말 세대가 바뀌는 구나.. 란 아쉬움 입니다. ( 전 후자 쪽.. ^^ ) 아시는 분은 아시는 K&amp;amp;R 의 R 이셨으며 .. ^^ unix의 아버지십니다&amp;hellip; (따라서 linux의 할아버지 ^^ )</description>
    </item>
    
    <item>
      <title>에이서 아이코니아 탭 a500을 사용하면서</title>
      <link>https://kasworld.github.io/posts/2011-10-11-%EC%97%90%EC%9D%B4%EC%84%9C%EC%95%84%EC%9D%B4%EC%BD%94%EB%8B%88%EC%95%84%ED%83%ADa500%EC%9D%84%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C/</link>
      <pubDate>Tue, 11 Oct 2011 22:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-10-11-%EC%97%90%EC%9D%B4%EC%84%9C%EC%95%84%EC%9D%B4%EC%BD%94%EB%8B%88%EC%95%84%ED%83%ADa500%EC%9D%84%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C/</guid>
      <description>사용기라긴 좀 뭐하고 사용하면서 느끼는 점들을 기록하는 포스트.
지난달 24일에 택배를 받았으니 이제 20일 정도 지났습니다.
원래 사용하던 4년 반정도된 x61t고해상도 버전을 대치 할수 있을까? 하는 생각에 반신 반의 하면서 지른 a500입니다만 현재까지는 아주 만족스럽게 사용중입니다.
다만 이 만족스럽게란 부분은 다른 사용자들에게도 적용되기는 좀 문제가 있는 기준이란걸 미리 말씀드립니다.
전 원래부터 x61t에 우분투 리눅스를 설치해 사용중이었으며 대부분의 데이터는 구글 클라우드 ( 구글 메일 , 구글 캘린더, 구글 독스, 구글 테스크 , 구글 주소록, 구글 크롬 , 구글 rss 리더 )에 넣어 두고 사용하는 패턴 이었습니다.</description>
    </item>
    
    <item>
      <title>이번 iphone 4s 발표회에서 많은 사람들이 간과했던 siri에 대한 기대와 이런 저런 생각 .</title>
      <link>https://kasworld.github.io/posts/2011-10-07-%EC%9D%B4%EB%B2%88iphone4s%EB%B0%9C%ED%91%9C%ED%9A%8C%EC%97%90%EC%84%9C%EB%A7%8E%EC%9D%80%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%B4%EA%B0%84%EA%B3%BC%ED%96%88%EB%8D%98siri%EC%97%90%EB%8C%80%ED%95%9C%EA%B8%B0%EB%8C%80%EC%99%80%EC%9D%B4%EB%9F%B0%EC%A0%80%EB%9F%B0%EC%83%9D%EA%B0%81/</link>
      <pubDate>Fri, 07 Oct 2011 22:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-10-07-%EC%9D%B4%EB%B2%88iphone4s%EB%B0%9C%ED%91%9C%ED%9A%8C%EC%97%90%EC%84%9C%EB%A7%8E%EC%9D%80%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%B4%EA%B0%84%EA%B3%BC%ED%96%88%EB%8D%98siri%EC%97%90%EB%8C%80%ED%95%9C%EA%B8%B0%EB%8C%80%EC%99%80%EC%9D%B4%EB%9F%B0%EC%A0%80%EB%9F%B0%EC%83%9D%EA%B0%81/</guid>
      <description>이번 iphone 4s 발표회에서 많은 사람들이 간과했던 siri에 대한 기대와 이런 저런 생각 . http://hanury.net/wp/archives/2998
http://www.appleforum.com/mac-column/60912-%EC%9D%B4%EC%A0%9C%EA%B9%8C%EC%A7%80%EC%9D%98-%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5%EA%B3%BC%EB%8A%94-%EB%8B%A4%EB%A5%B8-siri.html
만일 정말 apple 이 광고한 대로라면 신세계가 열리는 것일 텐데.. 라고 생각하다가..
얼마전 IBM supercomputer가 퀴즈쇼에서 인간(들)과 싸워 최종우승했다는 기사가 기억났다.. http://leejangsuk.tistory.com/49
그래 이정돈 해줘야 21세기 답지.. ^^;; G+에 올린걸 블로그로 가져왔습니다. </description>
    </item>
    
    <item>
      <title>이해 할수 없는 페이스 북의 UI</title>
      <link>https://kasworld.github.io/posts/2011-10-04-%EC%9D%B4%ED%95%B4%ED%95%A0%EC%88%98%EC%97%86%EB%8A%94%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B6%81%EC%9D%98ui/</link>
      <pubDate>Tue, 04 Oct 2011 15:25:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-10-04-%EC%9D%B4%ED%95%B4%ED%95%A0%EC%88%98%EC%97%86%EB%8A%94%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B6%81%EC%9D%98ui/</guid>
      <description>20년 가까이 해왔던 D&amp;amp;D 를 최근? 그만둔 이후로 약간의 금단? 증상에 시달리다가. facebook에 소셜 게임으로 D&amp;amp;D가 나온다는 첩보를 입수하고 오랫만에 페이스북에 가봤다. 페이스북에서 D&amp;amp;D게임을 찾다가 5분만에 깨닳은 사실은 . 난 페이스북의 인터페이스를 도저히 이해할수 없으며 그때문에 페이스북을 사용하지 않기로 했었다는 기억.. 그리고 최근에 많이 수정됬다는데 어디가 수정된것인지 전혀 모르겠다는 것..
어떻게하면 페이스북에 있는 모든 게임들을 목록으로 차근차근 볼수 있는지 과연 그런 UI가 존재하긴 하는것인지 정말 궁금해 하면서 페이지를 닫았다. 생각해 보면 난 비슷한 이유로 위키를 별로 좋아 하지 않으며 사람들이 왜 위키에 열광하는지 전혀 이해 못하는 구세대일지도 모르겠다.</description>
    </item>
    
    <item>
      <title>전에 부터 생각하고 있었는데.</title>
      <link>https://kasworld.github.io/posts/2011-09-29-%EC%A0%84%EC%97%90%EB%B6%80%ED%84%B0%EC%83%9D%EA%B0%81%ED%95%98%EA%B3%A0%EC%9E%88%EC%97%88%EB%8A%94%EB%8D%B0/</link>
      <pubDate>Thu, 29 Sep 2011 22:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-09-29-%EC%A0%84%EC%97%90%EB%B6%80%ED%84%B0%EC%83%9D%EA%B0%81%ED%95%98%EA%B3%A0%EC%9E%88%EC%97%88%EB%8A%94%EB%8D%B0/</guid>
      <description>전 이상하게도 애플을 좋아하면서도 애플 제품은 한개도 사지 않고 있었습니다. ( 사지 않으니 쓰지도 않지요. )
그래서 곰곰히 생각해보니 제가 좋아한 애플은
스티븐 잡스의 애플이 아니고 스티브 위즈니악의 애플이었더군요. ;;;
그러니 잡스의 제품은 제 취향이 아니었고 위즈니악의 애플을 잡스의 애플과 혼동하고 있었던거지요.
객관적으로 애플의 제품은 훌륭하다고 평가하지만 내취향은 아니야.라고 생각하고 있었던 이유가 이거 였나 봅니다.
하지만 이미 잡스도 물러났고 ..
시대가 흐르고 있나봅니다.</description>
    </item>
    
    <item>
      <title>에이서 a500 안드로이드 패드를 구입했습니다.</title>
      <link>https://kasworld.github.io/posts/2011-09-28-%EC%97%90%EC%9D%B4%EC%84%9Ca500%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%ED%8C%A8%EB%93%9C%EB%A5%BC%EA%B5%AC%EC%9E%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 28 Sep 2011 12:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-09-28-%EC%97%90%EC%9D%B4%EC%84%9Ca500%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%ED%8C%A8%EB%93%9C%EB%A5%BC%EA%B5%AC%EC%9E%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>지난주 토요일에 택배가 도착했으니 이제 5일되었군요.
에이서에서 1000대 한정으로 가격을 내려서 판매한다고 하는 이벤트( 아마도 안팔려서 내린거라고 생각하긴 하지만 ) 에 낚여서? 어부인의 허가를 받고 구입할 수 있었습니다.
구매당시에 설치되어 있는 안드로이드 버전은 3.0 이며 켜자마자 네트웍을 연결해주면 바로 3.1로 업데이트 됩니다. 그리고 어제 3.2로 업데이트 하더군요. ;;; ( 즉 이제부터 새로 사시는 분은 사서 켜면 바로 3.2로 업데이트 될것입니다. )
3.1을 딱 4일 써본 관계로 자세히는 모르지만 3.1과 3.2의 차이가 미묘하게 있습니다.</description>
    </item>
    
    <item>
      <title>윈도우 가격에 대한 잡소리.</title>
      <link>https://kasworld.github.io/posts/2011-08-19-%EC%9C%88%EB%8F%84%EC%9A%B0%EA%B0%80%EA%B2%A9%EC%97%90%EB%8C%80%ED%95%9C%EC%9E%A1%EC%86%8C%EB%A6%AC/</link>
      <pubDate>Fri, 19 Aug 2011 10:17:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-08-19-%EC%9C%88%EB%8F%84%EC%9A%B0%EA%B0%80%EA%B2%A9%EC%97%90%EB%8C%80%ED%95%9C%EC%9E%A1%EC%86%8C%EB%A6%AC/</guid>
      <description>이전에 셋팅 해드린 친척 어르신의 윈도우xp 상태가 메롱하다는 이야기 를 듣고 팀뷰어를 설치해서 상태를 보니 v3와 윈도우 방화벽의 철통 방어를 뚫고 알집,알약,등의 바이러스 프로그램과 쓰지도 않을 게 분명한 emule!! 등 이 설치되어 있을 뿐만 아니라 V3는 시작하자 마자 죽어 버리는 등 트로이얀과 바이러스 세상이 된 윈도우의 복구는 불가능하다고 판단되었다.
그래서 시간도 지났고 하니 집에 퇴역시킨 core2duo , ram 6G, HDD 1T 머신에 windows7을 설치해서 전달해 드리기로 결정.
정품 윈도우를 구매하기 위해 늘가는 온라인 쇼핑몰게 가서 가격을 보니 올 초에 처 기계에 설치하기 위해 산 가격과 달라진것 같아 구매내역을 들여다 보았다.</description>
    </item>
    
    <item>
      <title>완전히 쓸데 없는 지식? ( 계산)</title>
      <link>https://kasworld.github.io/posts/2011-08-06-%EC%99%84%EC%A0%84%ED%9E%88%EC%93%B8%EB%8D%B0%EC%97%86%EB%8A%94%EC%A7%80%EC%8B%9D%EA%B3%84%EC%82%B0/</link>
      <pubDate>Sat, 06 Aug 2011 17:57:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-08-06-%EC%99%84%EC%A0%84%ED%9E%88%EC%93%B8%EB%8D%B0%EC%97%86%EB%8A%94%EC%A7%80%EC%8B%9D%EA%B3%84%EC%82%B0/</guid>
      <description>날도 덥고 해서 잉여짓 한가지.
요즘 세상에 500원 크기만한 금화를 만들면 한개에 얼마짜리가 될까?
오늘(11.08.06) 금시세는 3.75g : 204000원 1g : 54400원
금의 비중은 19.3
500원 동전의 부피는 http://blog.naver.com/PostView.nhn?blogId=mabaks7&amp;amp;logNo=90096773617 에 의하면 약 1.103 ml
54400x19.3x1.103 = 1158061원 정도
그러니까 약 116만원 정도
그럼 TRPG에 나오던 1gp는 100만원?</description>
    </item>
    
    <item>
      <title>google&#43; 를 쓰다보니.</title>
      <link>https://kasworld.github.io/posts/2011-08-06-google%EB%A5%BC%EC%93%B0%EB%8B%A4%EB%B3%B4%EB%8B%88/</link>
      <pubDate>Sat, 06 Aug 2011 12:26:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-08-06-google%EB%A5%BC%EC%93%B0%EB%8B%A4%EB%B3%B4%EB%8B%88/</guid>
      <description>네이버 펌질 블로그가 낳은 슬픈 현실이 느껴지는 것이 SNS에서도 자신의 의견,해석을 전혀 추가하지 않은 단순 펌질 포스트들이 넘쳐난다. ;; 한줄이라도 자신을 드러내는 글을 추가하지도 않은 포스팅들은 글쓴자(즉 펌질한자)의 얄팍함을 드러낼 뿐이다. ( 원문을 Google+에 올렸다가 기록용으로 blog에도 올립니다. ) 그런의미에서 twitter의 retweet ( old share 말고 )는 딱 취향에 맞는 ( 그리고 인정할수 있는 ) 펌질의 형태다. </description>
    </item>
    
    <item>
      <title>open /dev/dsp failed 에러가 나는 경우</title>
      <link>https://kasworld.github.io/posts/2011-07-27-opendevdspfailed%EC%97%90%EB%9F%AC%EA%B0%80%EB%82%98%EB%8A%94%EA%B2%BD%EC%9A%B0/</link>
      <pubDate>Wed, 27 Jul 2011 19:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-07-27-opendevdspfailed%EC%97%90%EB%9F%AC%EA%B0%80%EB%82%98%EB%8A%94%EA%B2%BD%EC%9A%B0/</guid>
      <description>까먹기 전에 기록하기위한 포스트 입니다. ^^ 이런 저런 이유로 예전 리눅스 프로그램을 실행할때 open /dev/dsp failed 에러가 나는 경우가 발생하면 고민하지 말고 padsp 원실행파일 형태로 실행하면 깔끔하게 실행됩니다.
대충 찾아보면 linux의 복잡한? sound system 간의 에뮬레이션을 해주는 프로그램인듯 합니다만.. 열심히 읽어봐도 잘 이해가 안되는 관계로 그냥 이렇게 만 적어 둡니다.
^^=33=333 ( 도망치기 )</description>
    </item>
    
    <item>
      <title>uwsgi 사용시 주의점</title>
      <link>https://kasworld.github.io/posts/2011-07-08-uwsgi%EC%82%AC%EC%9A%A9%EC%8B%9C%EC%A3%BC%EC%9D%98%EC%A0%90/</link>
      <pubDate>Fri, 08 Jul 2011 11:25:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-07-08-uwsgi%EC%82%AC%EC%9A%A9%EC%8B%9C%EC%A3%BC%EC%9D%98%EC%A0%90/</guid>
      <description>uwsgi 사용시 (http://projects.unbit.it/uwsgi/wiki)
post data를 처리 하고 싶으면 결과 return/yield 를 내보내기 전에 읽어 와야 한다.
그렇지 않으면 메롱한 에러를 내는 경우가 왕왕 생긴다. ( 검색해보니 알려진 버그인듯. )
이것때문에 오늘 시간좀 소비 했음.
아 그리고 web service 개발할때 curl 이 정말 편하다. command line으로 http post를 할수 있으니 코드 테스트가 정말 편하게 이루어지더라. ;;;
역시 인간은 검색을 생활화 해야 하는 것이었다 ;;;</description>
    </item>
    
    <item>
      <title>python으로 웹 서비스 만들어보기.</title>
      <link>https://kasworld.github.io/posts/2011-07-07-python%EC%9C%BC%EB%A1%9C%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Thu, 07 Jul 2011 15:20:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-07-07-python%EC%9C%BC%EB%A1%9C%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</guid>
      <description>를 하기전에 ^^;;;
web server : apache , lighttpd, nginx , cherokee, cherrypy, simplehttpserver(python) web app protocol : static file, wsgi , uwsgi web app frame work : node, cherrypy, django , web2py, 중 어떤 조합을 사용할지를 결정해야 해서
그동안 써왔던 것을 모두 점검하는 의미로 간단/대충 벤치마크를 해봤음. 즉 이글은 그 기록을 남기기 위한 글. ^^
기본적으로 다 hello world 를 리턴하는 static file 또는 print 코드 를 사용 해서 테스트 했습니다.</description>
    </item>
    
    <item>
      <title>좋은 AI 만들기?</title>
      <link>https://kasworld.github.io/posts/2011-07-03-%EC%A2%8B%EC%9D%80ai%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Sun, 03 Jul 2011 19:30:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-07-03-%EC%A2%8B%EC%9D%80ai%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>시간 날때마다 집에서 간단한 슈팅 게임? 을 만들고 있습니다만.. ( 엄밀히 말하면 2D 게임을 위한 프레임웍 )
전 게임을 하는 것보다 구경하는 것을 더 좋아하는 편이기 때문에 대신 플레이해줄 AI들을 몇가지 만들고 있습니다.
몇종의 AI를 만들고(허접하지만) 각각의 AI끼리 대전을 시켜보며 구경을 하고 있는데..
만든 입장에서 더 실력이 좋을 거라고 생각하면 만든 AI 보다 대충 머리수 채우기로만든 AI가 더 점수가 좋은 경우가 꽤 있군요.
그러면 다시 코드를 보면서 이유를 생각하고 그 결과를 다시 반영해보고 하면서 즐기고 있습니다.</description>
    </item>
    
    <item>
      <title>두개의 우분투 머신사이에서 설치된 패키지를 일치 시키는 법.</title>
      <link>https://kasworld.github.io/posts/2011-03-07-%EB%91%90%EA%B0%9C%EC%9D%98%EC%9A%B0%EB%B6%84%ED%88%AC%EB%A8%B8%EC%8B%A0%EC%82%AC%EC%9D%B4%EC%97%90%EC%84%9C%EC%84%A4%EC%B9%98%EB%90%9C%ED%8C%A8%ED%82%A4%EC%A7%80%EB%A5%BC%EC%9D%BC%EC%B9%98%EC%8B%9C%ED%82%A4%EB%8A%94%EB%B2%95/</link>
      <pubDate>Mon, 07 Mar 2011 15:44:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-03-07-%EB%91%90%EA%B0%9C%EC%9D%98%EC%9A%B0%EB%B6%84%ED%88%AC%EB%A8%B8%EC%8B%A0%EC%82%AC%EC%9D%B4%EC%97%90%EC%84%9C%EC%84%A4%EC%B9%98%EB%90%9C%ED%8C%A8%ED%82%A4%EC%A7%80%EB%A5%BC%EC%9D%BC%EC%B9%98%EC%8B%9C%ED%82%A4%EB%8A%94%EB%B2%95/</guid>
      <description>회사 우분투 머신들을 오랫만에 ( 3년? ) 새로 밀고 설치를 하는 중인데 3개!!! 의 머신을 모두 세팅하려니 귀찮아서 한머신에 설치된 우분투 패키지들을 다른 머신에도 똑같이 설치하는 법이 없을까? 찾아 봤습니다. 역시 구글님께서 답해주셨습니다. 울랄라.. ^^
링크는 여기 http://ubuntuforums.org/showthread.php?t=261366
설명하면 패키지들이 설치된 소스 머신에서 dpkg &amp;ndash;get-selections &amp;gt; installed-software 를 하시고 ( installed-software 은 원하는 파일 이름으로 ) 동일한 패키지를 설치 하고 싶은 타겟 머신에서 dpkg &amp;ndash;set-selections &amp;lt; installed-software 을 한후에 타겟 머신에 dselect 패키지가 설치 되어 있지 않으면 설치하시고 ( sudo apt-get install dselect ) 관리자 권한으로 dselect 를 실행 (sudo dselect ) 메뉴에서 3번 (Install )을 선택해주면 됩니다.</description>
    </item>
    
    <item>
      <title>갤럭시탭 지못미;;;</title>
      <link>https://kasworld.github.io/posts/2010-09-10-%EA%B0%A4%EB%9F%AD%EC%8B%9C%ED%83%AD%EC%A7%80%EB%AA%BB%EB%AF%B8/</link>
      <pubDate>Fri, 10 Sep 2010 16:57:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-09-10-%EA%B0%A4%EB%9F%AD%EC%8B%9C%ED%83%AD%EC%A7%80%EB%AA%BB%EB%AF%B8/</guid>
      <description>일단 링크 부터 http://www.techradar.com/news/phone-and-communications/mobile-phones/google-android-not-optimised-for-tablets--715550?src=rss&amp;amp;attr=all
제목이 Google: &amp;lsquo;Android not optimised for tablets&amp;rsquo; 한글로 다시 쓰면 &amp;ldquo;안드로이드는 아직 태블릿 용이 아니다. &amp;ldquo;
전에 &amp;ldquo;안드로이드가 가야 할길&amp;rdquo; 에서 지적 했듯이 현재의 안드로이드 표준 프로파일에선 태블릿을 만들어 내기가 애매하다. 최대 해상도가 800x480인 표준 프로파일로는 해상도가 너무 낮고 비표준 해상도로 만들자니 앱간 호환성이 문제가 될것이고.. 이번 갤럭시 탭은 삼성으로서는 나름 야심적인 도전이었겠지만 브랜드 인지도도 떨어지는 후발주자인 주제에 겨우 1024x600 해상도로 ipad의 1024x768보다 스펙마저 낮으면서 대항마 타령을 하고 있으면 우스울 뿐이다.</description>
    </item>
    
    <item>
      <title>기술 발전에 대한 신화(myth)들</title>
      <link>https://kasworld.github.io/posts/2010-09-06-%EA%B8%B0%EC%88%A0%EB%B0%9C%EC%A0%84%EC%97%90%EB%8C%80%ED%95%9C%EC%8B%A0%ED%99%94myth%EB%93%A4/</link>
      <pubDate>Mon, 06 Sep 2010 14:58:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-09-06-%EA%B8%B0%EC%88%A0%EB%B0%9C%EC%A0%84%EC%97%90%EB%8C%80%ED%95%9C%EC%8B%A0%ED%99%94myth%EB%93%A4/</guid>
      <description>기술의 발전으로 언젠가는 ***이 이루어 질것이다. 란 이상한 믿음.. ( 뭐 언젠가는 이라면 될지도 모르지만 ^^)
3Ghz가 넘는 x86 CPU는 2002년에 나왔다. ( 2002년 8월 인텔 노스우드 발표 3.06Ghz ) 8년이 지난 2010년 지금도 대부분의 CPU는 3Ghz 내외의 클럭을 가진다.
2001년에 산 노트북의 6셀 배터리 용량은 40Wh 였다 2010년 현재에 팔리는 노트북들의 6셀 배터리 용량은 56Wh 내외이다. 9년간 40%만이 증가 했다.
2001년에 산 12인치 노트북의 무게는 1.65kg이였다. 2010년 현재 대부분의 12인치 노트북의 무게는 아직도 1.</description>
    </item>
    
    <item>
      <title>apple google ibm ms intel 들의 주가 총액.</title>
      <link>https://kasworld.github.io/posts/2010-09-03-applegoogleibmmsintel%EB%93%A4%EC%9D%98%EC%A3%BC%EA%B0%80%EC%B4%9D%EC%95%A1/</link>
      <pubDate>Fri, 03 Sep 2010 13:28:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-09-03-applegoogleibmmsintel%EB%93%A4%EC%9D%98%EC%A3%BC%EA%B0%80%EC%B4%9D%EC%95%A1/</guid>
      <description>2010년 9월 3일 시점의 주요 관심 IT 기업들의 주가 총액 ms 207.17b intel 101.78b apple 230.37b ibm 157.71b google 147.62b
MS가 IBM을 넘었다고 떠들썩 했던 때가 얼마 전인듯 한데 apple이 MS를 넘었군요.
nvidia나 AMD는 단위가 다릅니다. AMD 가 4b Nvidia가 5.48b 정도 입니다. 이런이야기나오면 항상 나오는 삼성은 찾을 수가 없군요.
http://www.google.com/finance/stockscreener#c0=MarketCap&amp;amp;c1=PE&amp;amp;c2=DividendYield&amp;amp;c3=Price52WeekPercChange&amp;amp;region=us&amp;amp;sector=REUTERS_10&amp;amp;sort=MarketCap&amp;amp;sortOrder=1 를 보니 일목요연 하군요.;;;</description>
    </item>
    
    <item>
      <title>지금 안드로이드가 가야 할길</title>
      <link>https://kasworld.github.io/posts/2010-08-27-%EC%A7%80%EA%B8%88%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EA%B0%80%EA%B0%80%EC%95%BC%ED%95%A0%EA%B8%B8/</link>
      <pubDate>Fri, 27 Aug 2010 14:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-08-27-%EC%A7%80%EA%B8%88%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EA%B0%80%EA%B0%80%EC%95%BC%ED%95%A0%EA%B8%B8/</guid>
      <description>비슷한 내용의 글을 몇번 썼던것 같지만 ^^ ( 안드로이드를 기다렸지만 모토로이를 사지 않은이유 ) iphone 4가 나오면서 안드로이드 진영이 더 빨리 움직이길 기대 했으나 예상보다 너무 반응이 느립니다.
지금 시점 정도가 됐으면 4.3인치 스크린에 720x1280 화면 ( 즉 720p 동영상을 제대로 보여줄수 있는 해상도) 1G ram 에 8G flash disk 달린 모델들이 발표되고 있어야 한다고 생각합니다.
물론 여기에는 구글이 만든 디바이스 프로파일에 854x480 이상의 화면에 대한 규정이 없고 (비어 있는겁니다. ) 안드로이드 내부 구조에 문제점이라던지 ( 대충 들리는 소리에 의하면 어플리케이션 설치용 flash disk는 2G 제한 이라거나 , 주 메모리의 뱅크 하나를 phone modem용으로 설정하고 이곳에는 OS접근이 불가 하다 던지 하는 ) 여러 문제가 있겠지만 지금 상황이라면 apple 진영에 1년 이상 뒤 떨어질것이 거의 확실합니다.</description>
    </item>
    
    <item>
      <title>회사에 새로 세팅한 트리플 모니터</title>
      <link>https://kasworld.github.io/posts/2010-08-09-%ED%9A%8C%EC%82%AC%EC%97%90%EC%83%88%EB%A1%9C%EC%84%B8%ED%8C%85%ED%95%9C%ED%8A%B8%EB%A6%AC%ED%94%8C%EB%AA%A8%EB%8B%88%ED%84%B0/</link>
      <pubDate>Mon, 09 Aug 2010 17:43:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-08-09-%ED%9A%8C%EC%82%AC%EC%97%90%EC%83%88%EB%A1%9C%EC%84%B8%ED%8C%85%ED%95%9C%ED%8A%B8%EB%A6%AC%ED%94%8C%EB%AA%A8%EB%8B%88%ED%84%B0/</guid>
      <description>24인치 1920x1200 18인치 1280x1024 20인치 1600x1200 에 두대의 우분투를 synergy로 엮어서 작업 환경으로 사용중..
전에 쓰던 15인치 1920x1200 모니터( 픽셀이 정말 작은)는 일단 집으로 복귀
총 픽셀수는 줄었지만 총 화면 면적은 늘어서 뭐 작업 하는데는 큰 상관 없는듯..
역시 작업환경은 넓은게 장땡이다.</description>
    </item>
    
    <item>
      <title>우분투 10.04가 나왔습니다.</title>
      <link>https://kasworld.github.io/posts/2010-05-02-%EC%9A%B0%EB%B6%84%ED%88%AC1004%EA%B0%80%EB%82%98%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 02 May 2010 10:43:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-05-02-%EC%9A%B0%EB%B6%84%ED%88%AC1004%EA%B0%80%EB%82%98%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>여러가지가 바뀌고 또 좋아 졌지만 바뀌어서 헷갈리는 점이 하나 생겼는데요. 창의 최소/최대/닫기 버튼의 위치가 바뀌어 매번 마우스커서가 헤메다니게 됩다. ^^
이걸 예전처럼 바꾸는 방법은 gconf-editor를 실행해서 /apps/metacity/general/button_layout 으 내용을 menu:minimize,maximize,close 와 같이 바꾸면 됩니다.
추가로 /apps/metacity/general/action_middle_click_titlebar 의 내용을 toggle_shade 로 바꾸면타이틀 바에서 마우스휠버튼을 눌러서 세이드 모드로 바꿀수도 있네요. 이것도 꽤 유용하게쓸수 있습니다.</description>
    </item>
    
    <item>
      <title>내가 꿈꾸는 키보드</title>
      <link>https://kasworld.github.io/posts/2010-03-26-%EB%82%B4%EA%B0%80%EA%BF%88%EA%BE%B8%EB%8A%94%ED%82%A4%EB%B3%B4%EB%93%9C/</link>
      <pubDate>Fri, 26 Mar 2010 15:49:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-03-26-%EB%82%B4%EA%B0%80%EA%BF%88%EA%BE%B8%EB%8A%94%ED%82%A4%EB%B3%B4%EB%93%9C/</guid>
      <description>아무래도 키보드로 밥 벌어 먹고 사는 직업이다보니 나도 그렇고 주변 사람들도 그렇고 키보드, 특히 좋은 ( 취향이야 가지 가지 겠지만 ) 키보드에 대한 관심이 각별하기 마련이다.
특히나 우리 또래처럼 8bit apple ][ 나 PC-XT 시절 83key 키보드들을 써본 좀 낡은 IT 세대(^^) 들은 초반에 접했던 (비싼)컴퓨터를 사면 따라오던 키보드에 대한 첫사랑? 들을 잊지 못하는 경우가 많은데
초반 비싸던 시절의 컴퓨터들은 신기하게도 덤으로 따라온 키보드들의 품질이 무지하게 좋은 경우가 많았다.
보통 (요즘엔 기계식이라고 부르는 ) 알프스/체리 스위치 키보드 거나 아니면 (전설의 ^^) IBM type M키보드 들이 따라오곤 했으니 말이다.</description>
    </item>
    
    <item>
      <title>네트웍은 아무리해도 어렵군요.</title>
      <link>https://kasworld.github.io/posts/2010-03-25-%EB%84%A4%ED%8A%B8%EC%9B%8D%EC%9D%80%EC%95%84%EB%AC%B4%EB%A6%AC%ED%95%B4%EB%8F%84%EC%96%B4%EB%A0%B5%EA%B5%B0%EC%9A%94/</link>
      <pubDate>Thu, 25 Mar 2010 11:10:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-03-25-%EB%84%A4%ED%8A%B8%EC%9B%8D%EC%9D%80%EC%95%84%EB%AC%B4%EB%A6%AC%ED%95%B4%EB%8F%84%EC%96%B4%EB%A0%B5%EA%B5%B0%EC%9A%94/</guid>
      <description>몇 주 전부터 집에 있는 공유기가 이상한 반응을 보여서 고민을 하고 있었습니다.
이상하게도 제가 사용하고 있는 리눅스기계를 끄면 조금 있다가 제 처가 사용하는 윈도우 머신의 인터넷이 끊기는 겁니다.
그래서 공유기가 맛이 갔나? 아니면 드디어 isp에서 공유기 단속을 시작했나? 아니면 설치한지 좀 된 윈도우 xp가 밀고 새로 설치할때가 됬나? 아냐 최근에 새로 설치한 samba서버 설정을 잘못했나? 아님 바이러스?
등등 이런 저런 고민을 하고 있었습니다.
게다가 어떨때는 공유기에서 ip address 를 못받아 오는 경우도 생겨서 이건 짤없이 공유기가 맛 간거다 ( dhcp 서버가 작동 않네.</description>
    </item>
    
    <item>
      <title>파폭을 배신하고 크롬으로 왔습니다. 사용중인 확장들입니다. ^^</title>
      <link>https://kasworld.github.io/posts/2010-03-15-%ED%8C%8C%ED%8F%AD%EC%9D%84%EB%B0%B0%EC%8B%A0%ED%95%98%EA%B3%A0%ED%81%AC%EB%A1%AC%EC%9C%BC%EB%A1%9C%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4%EC%82%AC%EC%9A%A9%EC%A4%91%EC%9D%B8%ED%99%95%EC%9E%A5%EB%93%A4%EC%9E%85%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Mon, 15 Mar 2010 12:12:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-03-15-%ED%8C%8C%ED%8F%AD%EC%9D%84%EB%B0%B0%EC%8B%A0%ED%95%98%EA%B3%A0%ED%81%AC%EB%A1%AC%EC%9C%BC%EB%A1%9C%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4%EC%82%AC%EC%9A%A9%EC%A4%91%EC%9D%B8%ED%99%95%EC%9E%A5%EB%93%A4%EC%9E%85%EB%8B%88%EB%8B%A4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>내가 원하던 진정한 리눅스폰은</title>
      <link>https://kasworld.github.io/posts/2010-02-24-%EB%82%B4%EA%B0%80%EC%9B%90%ED%95%98%EB%8D%98%EC%A7%84%EC%A0%95%ED%95%9C%EB%A6%AC%EB%88%85%EC%8A%A4%ED%8F%B0%EC%9D%80/</link>
      <pubDate>Wed, 24 Feb 2010 08:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-02-24-%EB%82%B4%EA%B0%80%EC%9B%90%ED%95%98%EB%8D%98%EC%A7%84%EC%A0%95%ED%95%9C%EB%A6%AC%EB%88%85%EC%8A%A4%ED%8F%B0%EC%9D%80/</guid>
      <description>Heaven&amp;rsquo;s Door :: N900 짧막한 사용기
이게 아닐까 하는 생각이 들기도 하네요.
하지만 전 돈이 없다는거 ㅎㅎ
국내에 정발 되면 지를것 같다는거 ..;;;</description>
    </item>
    
    <item>
      <title>5800용 인코딩을 위해서 우분투 9.10에서 추가해줘야 하는 일.</title>
      <link>https://kasworld.github.io/posts/2010-02-23-5800%EC%9A%A9%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84%EC%9C%84%ED%95%B4%EC%84%9C%EC%9A%B0%EB%B6%84%ED%88%AC910%EC%97%90%EC%84%9C%EC%B6%94%EA%B0%80%ED%95%B4%EC%A4%98%EC%95%BC%ED%95%98%EB%8A%94%EC%9D%BC/</link>
      <pubDate>Tue, 23 Feb 2010 21:01:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-02-23-5800%EC%9A%A9%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84%EC%9C%84%ED%95%B4%EC%84%9C%EC%9A%B0%EB%B6%84%ED%88%AC910%EC%97%90%EC%84%9C%EC%B6%94%EA%B0%80%ED%95%B4%EC%A4%98%EC%95%BC%ED%95%98%EB%8A%94%EC%9D%BC/</guid>
      <description>HOWTO: Easily enable MP3, MPEG4, AAC, and other restricted encoding in FFmpeg - Ubuntu Forums
sudo wget http://www.medibuntu.org/sources.list.d/`lsb_release -cs`.list &amp;ndash;output-document=/etc/apt/sources.list.d/medibuntu.list &amp;amp;&amp;amp; sudo apt-get -q update &amp;amp;&amp;amp; sudo apt-get &amp;ndash;yes -q &amp;ndash;allow-unauthenticated install medibuntu-keyring &amp;amp;&amp;amp; sudo apt-get -q update
sudo apt-get install ffmpeg libavcodec-extra-52
요는
faac 지원이 법적인 문제로 9.10의 ffmpeg에서 빠졌기때문에 추가 레포지토리를 등록해서 설치해야 한다는거.
변환 스크립트는
mencoder -of lavf -lavfopts format=mp4 -oac lavc -ovc lavc -lavcopts aglobal=1:vglobal=1:acodec=libfaac:abitrate=128:vcodec=mpeg4:keyint=25 -af lavcresample=44100 -vf harddup,scale=640:360 -mc 0 -noskip &amp;ldquo;$FILE&amp;rdquo; -o &amp;ldquo;${FILE}_5800.</description>
    </item>
    
    <item>
      <title>안드로이드를 기다렸지만 모토로이를 사지 않은이유</title>
      <link>https://kasworld.github.io/posts/2010-02-23-%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EB%A5%BC%EA%B8%B0%EB%8B%A4%EB%A0%B8%EC%A7%80%EB%A7%8C%EB%AA%A8%ED%86%A0%EB%A1%9C%EC%9D%B4%EB%A5%BC%EC%82%AC%EC%A7%80%EC%95%8A%EC%9D%80%EC%9D%B4%EC%9C%A0/</link>
      <pubDate>Tue, 23 Feb 2010 11:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-02-23-%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EB%A5%BC%EA%B8%B0%EB%8B%A4%EB%A0%B8%EC%A7%80%EB%A7%8C%EB%AA%A8%ED%86%A0%EB%A1%9C%EC%9D%B4%EB%A5%BC%EC%82%AC%EC%A7%80%EC%95%8A%EC%9D%80%EC%9D%B4%EC%9C%A0/</guid>
      <description>안드로이드에 대한 오해와 실패의 그림자
안드로이드 폰을 사고 싶었던 가장 큰 이유는
데스크탑/노트북에서 쓰고 있는 리눅스를 폰에서도 사용하면서 그 자유로움을 즐기고 싶었기 때문입니다.
하지만 아직 때가 아니라고 판단하고 심비안으로 전향한 이유는
오픈소스는 그 특성상 사용성의 최적화에있어서 원밴더 소프트웨어(윈도+오피스, 아이폰)에 비해
약점을 가질수 밖에 없지요.
특히나 꼼꼼한 마무리와 정성이 필요한 hw 최적화나 사용성 강화같은 부분은 약할수 밖에 없는데
이걸 보완할수있는 좋은 방법은 보다 더 강력한 하드웨어를 사용하는 것입니다.
그래서 제가 사용하는 노트북은 2년이 넘은 모델임에도 불구하고</description>
    </item>
    
    <item>
      <title>우분투에서 플래시가 클릭이 되지 않는 버그를 해결하는 법</title>
      <link>https://kasworld.github.io/posts/2010-02-22-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%ED%94%8C%EB%9E%98%EC%8B%9C%EA%B0%80%ED%81%B4%EB%A6%AD%EC%9D%B4%EB%90%98%EC%A7%80%EC%95%8A%EB%8A%94%EB%B2%84%EA%B7%B8%EB%A5%BC%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94%EB%B2%95/</link>
      <pubDate>Mon, 22 Feb 2010 15:08:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-02-22-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%ED%94%8C%EB%9E%98%EC%8B%9C%EA%B0%80%ED%81%B4%EB%A6%AD%EC%9D%B4%EB%90%98%EC%A7%80%EC%95%8A%EB%8A%94%EB%B2%84%EA%B7%B8%EB%A5%BC%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94%EB%B2%95/</guid>
      <description>Help For Linux: I Cannot Click On Flash In Ubuntu : Solved
파이어 폭스/구글 크롬 가리지 않고 일어나는 문제입니다.
핵심은
export GDK_NATIVE_WINDOWS=1
을 해주는것인데
gksudo gedit /usr/lib/nspluginwrapper/i386/linux/npviewer
에 마지막줄 전에 써주는 것으로 해결되는 군요.
재미있는것은 eclipse의 다이얼로그 버튼이 눌리지 않는 문제도 같은 방법으로
(eclipse 를 실행하기 전에 export 를 해주면 됩니다. )
해결된다는 거..</description>
    </item>
    
    <item>
      <title>모두가 아이폰을 외칠때..</title>
      <link>https://kasworld.github.io/posts/2010-02-11-%EB%AA%A8%EB%91%90%EA%B0%80%EC%95%84%EC%9D%B4%ED%8F%B0%EC%9D%84%EC%99%B8%EC%B9%A0%EB%95%8C/</link>
      <pubDate>Thu, 11 Feb 2010 22:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-02-11-%EB%AA%A8%EB%91%90%EA%B0%80%EC%95%84%EC%9D%B4%ED%8F%B0%EC%9D%84%EC%99%B8%EC%B9%A0%EB%95%8C/</guid>
      <description>홀로 안드로이드를 외치다..
노키아 5800을 샀습니다. (참고로 심비안폰입니다. ^^;;; )
심지어 작년에 산 전화기의 약정이 남아 있음에도. 단지 이젠 나도 스마트 폰을 써보고 싶어 + 아 저건 버스 폰이 아닌가?
란 이유로. ;;;
간단한 소감은..
딱 내취향이야!!!!!
입니다.
디자인/뽀대 관심없고
기능/가격에 관심 있는 사람이라면 최고의 폰일것이고..
뭔가 신기하고 재미있는 주어진 컨텐츠를 즐기고 싶은 사람이라면 최악의 폰일 것입니다.
뭔가 즐길 꺼리는 아무것도 없지만..
필요한 것은 모두 할수 있는 신기한폰입니다.
기존에 노트북과 연계해 쓰던 에그(와이브로)와 연계하면 환상의 궁합을 보여 줍니다.</description>
    </item>
    
    <item>
      <title>노키아 n5800 의 카메라 화질(압축율) 올리기.</title>
      <link>https://kasworld.github.io/posts/2010-02-11-%EB%85%B8%ED%82%A4%EC%95%84n5800%EC%9D%98%EC%B9%B4%EB%A9%94%EB%9D%BC%ED%99%94%EC%A7%88%EC%95%95%EC%B6%95%EC%9C%A8%EC%98%AC%EB%A6%AC%EA%B8%B0/</link>
      <pubDate>Thu, 11 Feb 2010 13:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2010-02-11-%EB%85%B8%ED%82%A4%EC%95%84n5800%EC%9D%98%EC%B9%B4%EB%A9%94%EB%9D%BC%ED%99%94%EC%A7%88%EC%95%95%EC%B6%95%EC%9C%A8%EC%98%AC%EB%A6%AC%EA%B8%B0/</guid>
      <description>Nokia 5800 Tips and Tricks Thread:
1- Copy z:\private\10202BE9\10282EDC.txt to c:\private\10202BE9
2- Edit the file and change the following line : 0x3001A string &amp;lsquo;QualitySetLevel=306,ImageFileMimeType=image/jpeg,ImageWidth=2592,ImageHeight=1944,ImageFileExtension=.jpg,ImageEncoderUID=0x00000000,CompressionQuality=85,EstimatedSize=650000,CameraDisplayId=2,CamcorderVisible=350&amp;rsquo; 0 cap_rd=alwayspass cap_wr=alwaysfail
to: 0x3001A string &amp;lsquo;QualitySetLevel=306,ImageFileMimeType=image/jpeg,ImageWidth=2592,ImageHeight=1944,ImageFileExtension=.jpg,ImageEncoderUID=0x00000000,CompressionQuality=100,EstimatedSize=890000,CameraDisplayId=2,CamcorderVisible=350&amp;rsquo; 0 cap_rd=alwayspass cap_wr=alwaysfail
3- Save and restart.
The photos (at the 5MP settings) now are an average of 900KB instead of 600KB, which means less JPEG compression, which means theoretically better quality.&amp;quot;</description>
    </item>
    
    <item>
      <title>노트북의 가속센서를 활성화 시키기.</title>
      <link>https://kasworld.github.io/posts/2009-12-09-%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%98%EA%B0%80%EC%86%8D%EC%84%BC%EC%84%9C%EB%A5%BC%ED%99%9C%EC%84%B1%ED%99%94%EC%8B%9C%ED%82%A4%EA%B8%B0/</link>
      <pubDate>Wed, 09 Dec 2009 18:28:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2009-12-09-%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%98%EA%B0%80%EC%86%8D%EC%84%BC%EC%84%9C%EB%A5%BC%ED%99%9C%EC%84%B1%ED%99%94%EC%8B%9C%ED%82%A4%EA%B8%B0/</guid>
      <description>오랫만에 노트북 설정을 손보는 김에 전부터 미뤄 두었던 가속센서 설정을 했습니다.
언제나 그렇듯 원본글 링크입니다. http://www.krizka.net/2009/11/01/thinkpad-x61-tablet-tilt-detection-and-ubuntu-karmic-koala/
저도 전에는 thinkpad의 가속센서(하드보호용)을 활성화 하려면 커널 컴파일을 해야한다고 알고 있어서 귀찮아 안하고 있었습니다만.. 우분투 9.10 에서는 sudo aptitude install tp-smapi-source sudo module-assistant build tp-smapi-source sudo module-assistant install tp-smapi-source sudo modprobe hdaps 단 4줄로 해결 되는 군요. ( 세상 참 좋아 졌네요. ㅎㅎ )
마지막 줄에서 에러가 나면 재시작하시고 다시 하시면 잘됩니다. 아마도 이전 hdaps 모듈이 메모리에 올라와 있어서 에러가 나는 것 같더군요.</description>
    </item>
    
    <item>
      <title>모두가 아이폰을 이야기할때</title>
      <link>https://kasworld.github.io/posts/2009-12-09-%EB%AA%A8%EB%91%90%EA%B0%80%EC%95%84%EC%9D%B4%ED%8F%B0%EC%9D%84%EC%9D%B4%EC%95%BC%EA%B8%B0%ED%95%A0%EB%95%8C/</link>
      <pubDate>Wed, 09 Dec 2009 13:09:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2009-12-09-%EB%AA%A8%EB%91%90%EA%B0%80%EC%95%84%EC%9D%B4%ED%8F%B0%EC%9D%84%EC%9D%B4%EC%95%BC%EA%B8%B0%ED%95%A0%EB%95%8C/</guid>
      <description>전 와이브로 에그를 신청했습니다. ;;;
주 모바일? 디바이스로 thinkpad x61t에 우분투 리눅스를 사용하는관계로 모바일 인터넷 환경에 선택지가 별로 없습니다. ;;;
그나마 에그는 wifi로 wibro를 연결해주니 리눅스에서 아무 문제가 없지요.
덤으로 지르는 김에 bluetooth gps 와 웹캠도 질렀습니다. gps역시 usb 타입을 사면 드라이버가 있을리가 없으니 bluetooth gps를 선택한것이구요.
어제 물건이 도착해서 테스트 해보니 에그와 웹캠은 한방에 잡히고 (당연한가? ) gps는 약간의 삽질끝에 오늘 오전에 성공했습니다.
http://ubuntuforums.org/showthread.php?t=200142 를 참고하면 됩니다.
gps야 원래 좀 고생할 각오를 했지만 웹캠쪽도 리눅스에서 어느정도 지원 될지 걱정을 좀 했는데 디바이스는 기본적으로 그냥 인식되고 synaptic 관리자에서 Cheese를 설치하면 프로그램도 쓸만한 수준입니다.</description>
    </item>
    
    <item>
      <title>The Go Programming Language</title>
      <link>https://kasworld.github.io/posts/2009-11-15-thegoprogramminglanguage/</link>
      <pubDate>Sun, 15 Nov 2009 21:29:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2009-11-15-thegoprogramminglanguage/</guid>
      <description>구글에서 만든 언어랩니다. ^^ http://golang.org/ 구글정도되면 이미 충분한 파워와 실력이 있으니 궁금해서 조금(^^) 공부해 봤습니다. 블럭으로 {}를 써서 마치 C/C++/java/C# 유사품 처럼 보이지만 ^^ 내용은 pascal/modula 2의 후계자에 더 가까운듯 합니다.
coroutine의 강화(?)판인 goroutine이 있는것도 재미있고, 컴파일이 빠르다고 주장(표준 라이브러리를 풀빌드하는데 10초가 안걸립니다.)하는것도 turbo pascal 생각이 나구 말이죠. 덤으로 대입 연산이 := 입니다. ㅋㅋㅋ native binary를 만들면서 garbage collection이 되는 점은 D language가 생각 나기도 하고 말이죠. ^^ 무어보다 맘에 드는건 생성된 바이너리의 속도가 C의 80~90%속도가 난다는 점입니다.</description>
    </item>
    
    <item>
      <title>무자게 오랫만에 올리는 리눅스 포스팅 ^^</title>
      <link>https://kasworld.github.io/posts/2009-11-04-%EB%AC%B4%EC%9E%90%EA%B2%8C%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90%EC%98%AC%EB%A6%AC%EB%8A%94%EB%A6%AC%EB%88%85%EC%8A%A4%ED%8F%AC%EC%8A%A4%ED%8C%85/</link>
      <pubDate>Wed, 04 Nov 2009 13:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2009-11-04-%EB%AC%B4%EC%9E%90%EA%B2%8C%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90%EC%98%AC%EB%A6%AC%EB%8A%94%EB%A6%AC%EB%88%85%EC%8A%A4%ED%8F%AC%EC%8A%A4%ED%8C%85/</guid>
      <description>새로 나온 9.10을 깔다가 오랫만에 다시 xmodmap 질을 했습니다.
이놈의 xmodmap은 이상하게 사용법이 메롱해서 잘 이해가 안되는데 암튼 성공한 기록을 합니다.
remove Lock = Caps_Lock remove Control = Control_L keysym Caps_Lock = Control_L keycode 0x25 = Super_L add Control = Control_L add mod4 = Super_L
제가 쓰는 키보드는 win키가 없으며 저는 취향상 ctrl이 tab과 shift사이에 있는 것을 선호 합니다. 즉 cap키는 ctrl로 왼 ctrl은 win 키로의 매핑이 필요 했습니다. cap 키는 전혀 사용하지 않으므로 없어집니다.</description>
    </item>
    
    <item>
      <title>이게다  evolution 탓이다.</title>
      <link>https://kasworld.github.io/posts/2009-06-24-%EC%9D%B4%EA%B2%8C%EB%8B%A4evolution%ED%83%93%EC%9D%B4%EB%8B%A4/</link>
      <pubDate>Wed, 24 Jun 2009 16:55:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2009-06-24-%EC%9D%B4%EA%B2%8C%EB%8B%A4evolution%ED%83%93%EC%9D%B4%EB%8B%A4/</guid>
      <description>thunderbird 에 lightnning 으로 바꾸니까 해결되는 군요.
설명..
이상하게 네트웍이 로밍 되면 - 유선랜을 쓰다가 회의 가느라 무선랜이 되었다가 다시 유선랜으로 오는등 - 종종 시스템이 메롱 해지는 상황이 꽤나 많았습니다.
주로 evolution-alram-notify 가 먹통이 되는 거였는데 구글님께 여쭤보니 evolution이 여러 문제의 대마왕 정도 위치를 차지 하더군요. 그래서 바꿔 봤더니 간단하게 해결 되는 것 처럼 보이더라 - 아직 충분한 시간동안 써본건 아니니 - 이겁니다.
또 한 1주일 정도 써봐야 확신 할수 있겠지만.</description>
    </item>
    
    <item>
      <title>grub 이 날아 갔을경우 복구</title>
      <link>https://kasworld.github.io/posts/2008-12-06-grub%EC%9D%B4%EB%82%A0%EC%95%84%EA%B0%94%EC%9D%84%EA%B2%BD%EC%9A%B0%EB%B3%B5%EA%B5%AC/</link>
      <pubDate>Sat, 06 Dec 2008 14:55:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-12-06-grub%EC%9D%B4%EB%82%A0%EC%95%84%EA%B0%94%EC%9D%84%EA%B2%BD%EC%9A%B0%EB%B3%B5%EA%B5%AC/</guid>
      <description>삽질의 기록입니다.
라이브 CD로 부팅후 터미널을 실행후
sudo grub find /boot/grub/stage1의 결과를 root (hd0,0) 형태로 입력 setup (hd0)quit 재시작</description>
    </item>
    
    <item>
      <title>x61t 에서 태블릿 활성화 하기</title>
      <link>https://kasworld.github.io/posts/2008-12-06-x61t%EC%97%90%EC%84%9C%ED%83%9C%EB%B8%94%EB%A6%BF%ED%99%9C%EC%84%B1%ED%99%94%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sat, 06 Dec 2008 14:51:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-12-06-x61t%EC%97%90%EC%84%9C%ED%83%9C%EB%B8%94%EB%A6%BF%ED%99%9C%EC%84%B1%ED%99%94%ED%95%98%EA%B8%B0/</guid>
      <description>우분투 8.10을 설치/업그레이드 했더니 애써(?) 잡아둔 테블릿 설정이 지워졌습니다.
1 # xorg.conf (X.Org X Window System server configuration file) 2 # 3 # This file was generated by dexconf, the Debian X Configuration tool, using 4 # values from the debconf database. 5 # 6 # Edit this file with caution, and see the xorg.conf manual page. 7 # (Type &amp;ldquo;man xorg.conf&amp;rdquo; at the shell prompt.) 8 # 9 # This file is automatically updated on xserver-xorg package upgrades *only* 10 # if it has not been modified since the last upgrade of the xserver-xorg 11 # package.</description>
    </item>
    
    <item>
      <title>우분투에서 로컬에 설치된 문서를 편하게 보기.</title>
      <link>https://kasworld.github.io/posts/2008-11-30-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%A4%EC%B9%98%EB%90%9C%EB%AC%B8%EC%84%9C%EB%A5%BC%ED%8E%B8%ED%95%98%EA%B2%8C%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Sun, 30 Nov 2008 19:33:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-11-30-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%A4%EC%B9%98%EB%90%9C%EB%AC%B8%EC%84%9C%EB%A5%BC%ED%8E%B8%ED%95%98%EA%B2%8C%EB%B3%B4%EA%B8%B0/</guid>
      <description>우분투를 설치하고 아파치를 설치하면 http://localhost/doc/ 으로 들어가서 로컬 기계에 설치되어 있는 패키지의 문서를 볼수 있습니다. 만.. 이게 들어가보면 엄청나게 많은 디렉토리가 있어서 원하는 문서 디렉토리로 찾아 가는게 귀찮더군요. ( 제기계에는 1400여개의 디렉토리가 있습니다. ) 너무 많은 정보는 없는것과 같기에 *-doc 디렉토리만 목록에 나오도록 조그만 프로그램을 만들어 봤습니다.
1 &amp;lt;?php 2 **$dir = &amp;ldquo;/usr/share/doc/&amp;rdquo;; 3 $urlbase = &amp;ldquo;http://localhost/doc/&amp;rdquo;; 4 5 // Open a known directory, and proceed to read its contents 6 if (is_dir($dir)) { 7 if ($dh = opendir($**dir)) { 8 echo &amp;lsquo;&amp;lt;table&amp;gt;&amp;rsquo;; 9 **$**i = 0; 10 **$dirlist = array(); 11 while (($f = readdir($**dh)) !</description>
    </item>
    
    <item>
      <title>오랫만에 노트북을 포멧하고 새로 설치 했습니다.</title>
      <link>https://kasworld.github.io/posts/2008-11-12-%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%84%ED%8F%AC%EB%A9%A7%ED%95%98%EA%B3%A0%EC%83%88%EB%A1%9C%EC%84%A4%EC%B9%98%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 12 Nov 2008 07:54:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-11-12-%EC%98%A4%EB%9E%AB%EB%A7%8C%EC%97%90%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%84%ED%8F%AC%EB%A9%A7%ED%95%98%EA%B3%A0%EC%83%88%EB%A1%9C%EC%84%A4%EC%B9%98%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>우분투가 설치 되어 있는 노트북을 계속 업그레이드 해가며 살았더니 좀 꼬인것 같아서 8.10으로 깔끔하게 새로 설치했습니다. 기존에 버벅이던 문제들 ( virtualbox가 시작이 안되는 문제, suspend/resume 이 느린 문제등 )이 해결 되어 좋긴 한데 새로 설정하려니 기억이 나질 않네요. 그래서 하나 하나 할때마다 적어야 겠습니다.
suspend resume 할때 화면이 잠긴채로 resume되어 암호를 물어 보는데 이걸 끄려면 . http://ubuntuforums.org/showpost.php?p=2416854&amp;amp;postcount=7 /etc/default/acpi-support 파일의 LOCK_SCREEN=true 을 커맨트 아웃 합니다.
추가로 gconf-editor에서 app/gnome-powermanager-lock에가서 suspend 체크를 끄면 됩니다.</description>
    </item>
    
    <item>
      <title>아래 벤치에 추가로</title>
      <link>https://kasworld.github.io/posts/2008-10-29-%EC%95%84%EB%9E%98%EB%B2%A4%EC%B9%98%EC%97%90%EC%B6%94%EA%B0%80%EB%A1%9C/</link>
      <pubDate>Wed, 29 Oct 2008 10:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-10-29-%EC%95%84%EB%9E%98%EB%B2%A4%EC%B9%98%EC%97%90%EC%B6%94%EA%B0%80%EB%A1%9C/</guid>
      <description>이 7zip 벤치는 재미 있는게 32bit/64bit windows/linux 가리지 않고 다 네이티브 실행파일이 존재한다는 점입니다.
추가로 회사에서 사용하고 있는 p4 3.0G + ht 에서는 2000점이 core2duo 2.4g 에선 4200 정도가 나옵니다.</description>
    </item>
    
    <item>
      <title>요즘 cpu 의 성능</title>
      <link>https://kasworld.github.io/posts/2008-10-23-%EC%9A%94%EC%A6%98cpu%EC%9D%98%EC%84%B1%EB%8A%A5/</link>
      <pubDate>Thu, 23 Oct 2008 13:46:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-10-23-%EC%9A%94%EC%A6%98cpu%EC%9D%98%EC%84%B1%EB%8A%A5/</guid>
      <description>예전엔 벤치 프로그램을 직접 짜서 테스트 하기도 했지만 요즘은 귀찮아서 안합니다만..
그래도 궁금한 경우에는 7z의 벤치 마크를 사용합니다.
소위 전문벤치 프로그램들은 인텔의 입김이 들어가서 다들 sse 를 포함한 속도만을 보여줍니다만 . 이놈의 sse 란놈은 특정 경우에만 효과가 있는 놈이라 대부분의 경우에선 벤치 결과를 호도 하기 위해서만 쓰입니다.
암튼 옆자리에 계신 분이 새로 아톰 넷북을 사셨기에 부탁 드려 7z b 를 실행한 결과를 봤습니다. 1000점 내외로 나오더군요. 제 core2duo 1.8 노트북에선 3000점 정도가 나옵니다.</description>
    </item>
    
    <item>
      <title>집에 파일서버를 셋팅 했습니다.</title>
      <link>https://kasworld.github.io/posts/2008-09-06-%EC%A7%91%EC%97%90%ED%8C%8C%EC%9D%BC%EC%84%9C%EB%B2%84%EB%A5%BC%EC%85%8B%ED%8C%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 06 Sep 2008 21:00:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-09-06-%EC%A7%91%EC%97%90%ED%8C%8C%EC%9D%BC%EC%84%9C%EB%B2%84%EB%A5%BC%EC%85%8B%ED%8C%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>여름이라고 더워서 켜지도 않고 처박아 뒀던 데스크탑을 ( 여름내낸 노트북만 썼습니다. - 전기도 적게 먹고 조용하고 좋더군요. - 게임만 포기하면.. ) 다시 셋팅 했습니다.
꼴보기 싫은 윈도를 깔지는 않고 콘솔로 우분투 서버를 깔아 봤는데.. ( 처음엔 TV에 연결헤서 우분투 데스크 탑을 깔아 봤는데.. TV 해상도를 못잡아 내더군요. ) 설치가 다 끊난후 혹시나 해서 VGA를 뽑고 부팅을 하니
아무 문제 없이 부팅이 잘되는 겁니다. 만세!!!
ssh 로 리모트로 들어 가서 설정 하면 되니 기쁜 마음에 전원과 네트웍만 연결하고 베란다로 쫒아 냈습니다.</description>
    </item>
    
    <item>
      <title>C&#43;&#43;로 돌아가는 자바, 자바의 바람직한 진화를 이야기한다.</title>
      <link>https://kasworld.github.io/posts/2008-05-08-c%EB%A1%9C%EB%8F%8C%EC%95%84%EA%B0%80%EB%8A%94%EC%9E%90%EB%B0%94%EC%9E%90%EB%B0%94%EC%9D%98%EB%B0%94%EB%9E%8C%EC%A7%81%ED%95%9C%EC%A7%84%ED%99%94%EB%A5%BC%EC%9D%B4%EC%95%BC%EA%B8%B0%ED%95%9C%EB%8B%A4/</link>
      <pubDate>Thu, 08 May 2008 08:33:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-05-08-c%EB%A1%9C%EB%8F%8C%EC%95%84%EA%B0%80%EB%8A%94%EC%9E%90%EB%B0%94%EC%9E%90%EB%B0%94%EC%9D%98%EB%B0%94%EB%9E%8C%EC%A7%81%ED%95%9C%EC%A7%84%ED%99%94%EB%A5%BC%EC%9D%B4%EC%95%BC%EA%B8%B0%ED%95%9C%EB%8B%A4/</guid>
      <description>웹을 돌아다니다 맘에 드는 글이있어 링크 합니다.
C++로 돌아가는 자바 자바의 바람직한 진화를 이야기한다.
전 상당히 초기에 자바를 접하고 맘에 들어 했다가 위글처럼 SUN 에서 하는 삽질에 질려서 자바를 싫어하게 된 사람입니다. ^^
이제는 C++이나 자바나 이미지 메이킹에 성공해서 ( 우리 - C++/java - 를 써야 제대로된 일을 할수 있다는 ) 대세로 자리 잡긴 했지만 전 둘다 실속은 없고 겉멋만 든 언어란 생각을 떨칠수가 없습니다. ( 암튼 뭐든 다되니까 참고 써라 - 라는.</description>
    </item>
    
    <item>
      <title>단정한 python , 자유분방한 perl</title>
      <link>https://kasworld.github.io/posts/2008-04-29-%EB%8B%A8%EC%A0%95%ED%95%9Cpython%EC%9E%90%EC%9C%A0%EB%B6%84%EB%B0%A9%ED%95%9Cperl/</link>
      <pubDate>Tue, 29 Apr 2008 08:59:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-04-29-%EB%8B%A8%EC%A0%95%ED%95%9Cpython%EC%9E%90%EC%9C%A0%EB%B6%84%EB%B0%A9%ED%95%9Cperl/</guid>
      <description>개인 취향에 따라 언어 취향도 갈리는지.. php,python,perl,ruby를 공부 하다보면 기능의 강력함과 별도로 언어의 철학이 취향에 맞는지가 신경쓰이더군요.
전 C의 단순함과 강력함은 좋아 하지만 perl의 자유분방함은 적응이 안되었고 pascal의 딱딱함은 싫어 하지만 python의 단정함은 매우 맘에 들었습니다. ;;;
smalltalk의 순수성은 이해를 못해도 ruby의 oo에 대한 고집은 공감하게 됩니다.</description>
    </item>
    
    <item>
      <title>우분투에서 설치된 문서들을 보려면</title>
      <link>https://kasworld.github.io/posts/2008-04-04-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%EC%84%A4%EC%B9%98%EB%90%9C%EB%AC%B8%EC%84%9C%EB%93%A4%EC%9D%84%EB%B3%B4%EB%A0%A4%EB%A9%B4/</link>
      <pubDate>Fri, 04 Apr 2008 12:12:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-04-04-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%97%90%EC%84%9C%EC%84%A4%EC%B9%98%EB%90%9C%EB%AC%B8%EC%84%9C%EB%93%A4%EC%9D%84%EB%B3%B4%EB%A0%A4%EB%A9%B4/</guid>
      <description>우분투 패키지 관리자를 보면 &amp;ldquo;-doc&amp;rdquo; 으로 끝나는 패키지 들이 많이 있습니다. 전 프로그램 패키지 설치는 않하더라도 가능하면 이 -doc 패키지들은 다 설치하는 편인데요.
이 설치된 문서들을 어떻게 볼수 있을까 찾아보니 /usr/share/doc 밑으로 설치 되더군요. 그래서 html 문서들을 일일이 열어서 파폭에 북마크를 걸어 놓고 보곤 했습니다. 속으로 왜이리 불편하게 만들어 놨을까 투덜 대면서요.
그런데 찾아보니 아파치를 설치하면 ( 전 심지어 설치 되어 있었습니다. ㅠㅠ ) 웹브라우저에서 http://localhost/doc/ 으로 열어 설치된 모든 문서를 브라우징 할수 있게 되어 있는 겁니다.</description>
    </item>
    
    <item>
      <title>우분투 8.04 로 업그레이드를 성공적으로 끝냈습니다.</title>
      <link>https://kasworld.github.io/posts/2008-03-28-%EC%9A%B0%EB%B6%84%ED%88%AC804%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%EB%A5%BC%EC%84%B1%EA%B3%B5%EC%A0%81%EC%9C%BC%EB%A1%9C%EB%81%9D%EB%83%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Fri, 28 Mar 2008 08:52:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-03-28-%EC%9A%B0%EB%B6%84%ED%88%AC804%EB%A1%9C%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%EB%A5%BC%EC%84%B1%EA%B3%B5%EC%A0%81%EC%9C%BC%EB%A1%9C%EB%81%9D%EB%83%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>아직 베타긴 하지만 제가 사용하는 4대의 PC모두 성공적으로 업그레이드를 했습니다. 한번에 하기엔 불안해서 한대씩(가장 중요도가 떨어지는 PC부터 ) 해서 자신이 붙은 뒤에 마지막으로 x61t의 업그레이드 까지 성공했습니다.
이젠 intel gma3100에서도 compiz가 잘되는군요. 전체적으로 약간 불안정한 감이 있지만 ( 베타니까 ) 금방 안정화 될것으로 믿고 있습니다. 파이어폭스 3.0 b4 도 전체적으로 별문제 없이 잘돌아 갑니다. ( 그놈의 플래시플레이가 잠깐 말썽을 피우긴 했지만 금방 해결 했고.. ) 하지만 기대했던 802.11n 지원은 아직 인가 봅니다.</description>
    </item>
    
    <item>
      <title>과연 컴퓨터 가격은 내려 가고 있는가?</title>
      <link>https://kasworld.github.io/posts/2008-03-20-%EA%B3%BC%EC%97%B0%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B0%80%EA%B2%A9%EC%9D%80%EB%82%B4%EB%A0%A4%EA%B0%80%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B0%80/</link>
      <pubDate>Thu, 20 Mar 2008 15:32:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-03-20-%EA%B3%BC%EC%97%B0%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B0%80%EA%B2%A9%EC%9D%80%EB%82%B4%EB%A0%A4%EA%B0%80%EA%B3%A0%EC%9E%88%EB%8A%94%EA%B0%80/</guid>
      <description>오늘 점심 먹다가 기술의 발전이 컴퓨터의 가격을 내리고 있다는 이야기가 나왔는데.. 과연 그런가 하는 이야기 입니다.
컴퓨터라는 것이 장식용이 아니고 무엇인가 하기 위한 도구라는 측면을 생각해 볼때 하드웨어의 각격만을 놓고 생각하는 것은 오류겠지요. 위의 표를 보시면 금방 이해 되실겁니다.
과거에 비해서 소프트웨어 가격은 오르고 있었던겁니다. 결국 총 비용(TCO = h/w + s/w )는 줄기는 커녕 늘고 있는 셈입니다. ( 60만원 짜리 하드웨어에 280만원 어치 소프트웨어가 필요한거지요. ) ( 여기서 불법 복사니.</description>
    </item>
    
    <item>
      <title>제가 산 첫 노트북은..</title>
      <link>https://kasworld.github.io/posts/2008-02-28-%EC%A0%9C%EA%B0%80%EC%82%B0%EC%B2%AB%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%80/</link>
      <pubDate>Thu, 28 Feb 2008 00:23:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-02-28-%EC%A0%9C%EA%B0%80%EC%82%B0%EC%B2%AB%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%80/</guid>
      <description>인 리브레토 ff1100v 였습니다. 지금 생각해도 작고 가벼운 머신이었지요. 생각해보면 다음에 산 x22 이 1.65kg 이었고 이번에 산 x61t가 1.92 kg 이니 제가 쓰는 노트북은 점점 무거워지고 있는 셈입니다. ^^;;;</description>
    </item>
    
    <item>
      <title>지름은 지름을 낳는다.^^</title>
      <link>https://kasworld.github.io/posts/2008-02-27-%EC%A7%80%EB%A6%84%EC%9D%80%EC%A7%80%EB%A6%84%EC%9D%84%EB%82%B3%EB%8A%94%EB%8B%A4/</link>
      <pubDate>Wed, 27 Feb 2008 10:46:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-02-27-%EC%A7%80%EB%A6%84%EC%9D%80%EC%A7%80%EB%A6%84%EC%9D%84%EB%82%B3%EB%8A%94%EB%8B%A4/</guid>
      <description>집에 무선랜 장비가 2대 , 기가 비트 랜 지원 머신이 3대가 되서 ( 합이 4대 ^^ ) 마침 새로산 노트북도 802.11n 을 지원한다고 하니 5년된 &amp;ldquo;유선&amp;quot;공유기를 업그레이드 하기로 했습니다. 시중에서 위 조건 ( 기가비트 이더넷 지원 , 802.11n 지원 ) 을 만족하는 유무선 공유기는 1종밖에 없으니 고민 할꺼리는 없었읍니다만 약간 비싼듯 하여 (12만원) 잠시 고민하다..
질렀습니다. D-Link DIR-655 를 ^^ 큰거 한번 지르고 나니 그담부턴 지르는 데 고민도 적게 하게 되는군요.</description>
    </item>
    
    <item>
      <title>새노트북을 구입했습니다.</title>
      <link>https://kasworld.github.io/posts/2008-02-20-%EC%83%88%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%84%EA%B5%AC%EC%9E%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 20 Feb 2008 21:50:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-02-20-%EC%83%88%EB%85%B8%ED%8A%B8%EB%B6%81%EC%9D%84%EA%B5%AC%EC%9E%85%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>5년 전에 산 노트북과 이번에 산 노트북 을 비교해본 테이블입니다. 5년 사이에 기술이 얼마나 발전했는지 보면.. 배터리는 5년간 단 65% 만이 발전한데 비해 메모리는 10배가 늘어났군요. ( 무게도 18%나 발전? 했습니다. 쳇.. )
물론 3일만에 비스타에게 항복하고 (이걸 쓰라고만든 겁니까?) 우분투를 설치했습니다. ^^ 역시 thinkpad 답게 태블릿을 포함 모든 디바이스가 별문제 없이 잡히더군요. ^^</description>
    </item>
    
    <item>
      <title>허걱</title>
      <link>https://kasworld.github.io/posts/2008-01-01-%ED%97%88%EA%B1%B1/</link>
      <pubDate>Tue, 01 Jan 2008 09:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2008-01-01-%ED%97%88%EA%B1%B1/</guid>
      <description>바로 아래 글에 덧글이 붙었는데 습관적으로 스팸으로 착각하고 지워 버렸습니다. &amp;ndash;;;
곰곰히 살펴보니 스팸이 아니더군요. 내용이 짧고 링크가 달려있기에 ㅠㅠ
제가 다시 덧글을 다는건 의미가 없는것 같고해서 이렇게 사죄 및 내용 기록 포스트를 답니다.
리눅스용 가상CD 정보 - 랜덤여신 - CDEMU 공식사이트 내용을 요약하면 표준 iso이미지만이 아니고 다른 여러 이미지도 지원 하는 프로그램입니다.</description>
    </item>
    
    <item>
      <title>리눅스에도 가상 시디롬 프로그램이 있나요?</title>
      <link>https://kasworld.github.io/posts/2007-12-31-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EB%8F%84%EA%B0%80%EC%83%81%EC%8B%9C%EB%94%94%EB%A1%AC%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%B4%EC%9E%88%EB%82%98%EC%9A%94/</link>
      <pubDate>Mon, 31 Dec 2007 20:57:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2007-12-31-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EB%8F%84%EA%B0%80%EC%83%81%EC%8B%9C%EB%94%94%EB%A1%AC%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%B4%EC%9E%88%EB%82%98%EC%9A%94/</guid>
      <description>^^;;; 아시는 분은 다 비웃을 제목이긴 합니다만;;;
네 있습니다. 있는 정도가 아니고 그냥 기본으로 되는 기능입니다. ^^ 전 예전에 리눅스를 쓰던 사람이라 iso 이미지를 열어 사용하려면 복잡한 mount명령을 사용해서 쓰고 했는데.. 이젠 그냥 GUI 프로그램이 존재 하더군요. ( 이거 있는줄 모르고 권한 설정에 스크립트에 난리 처서 사용 하고 있었습니다. ㅠㅠ ) 우분투 추가/제거 메뉴에서 gmount 를 찾아 설치 하시면 됩니다 실행하시면 ( 메뉴 -&amp;gt; 시스템도구 -&amp;gt; gmount-iso 를 실행하면 됩니다. ) 이미지 선택과 마운트위치(드라이브이름정하는것 같은거)지정하면 됩니다.</description>
    </item>
    
    <item>
      <title>리눅스에서 윈도우 프로그램이 필요한 경우</title>
      <link>https://kasworld.github.io/posts/2007-12-30-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C%EC%9C%88%EB%8F%84%EC%9A%B0%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%B4%ED%95%84%EC%9A%94%ED%95%9C%EA%B2%BD%EC%9A%B0/</link>
      <pubDate>Sun, 30 Dec 2007 16:46:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2007-12-30-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C%EC%9C%88%EB%8F%84%EC%9A%B0%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%B4%ED%95%84%EC%9A%94%ED%95%9C%EA%B2%BD%EC%9A%B0/</guid>
      <description>리눅스를 사용하더라도 어쩔수 없이 윈도우가 필요한 경우가 가끔 있을수 있습니다. 저같은 경우는 이에 대처하기 위해 여러가지 방법을 사용했는데요.
윈도우/리눅스간 멀티 부팅을 한다. 가장 일반적으로 많이 사용하는 방법이고 대부분의 경우에 처음 리눅스를 설치하면 택하는 옵션입니다. 저같은 경우는 새로 하드를 포멧하면서 파티션을 windows xp 32bit, winows xp 64bit , linux 64bit, linux swap , 데이타 저장및 교환용 파티션 이런 형태로 포멧을 했습니다. 데이터 교환용 파티션 같은 경우는 리눅스에선 윈도우 파티션을 읽고 쓸수 있기 때문에 없어도 대충 살만합니다만 정작 윈도우에선 리눅스 파티션을 읽고 쓸수 없기때문에 공용 데이타를 넣기 위한 공간으로 준비 했습니다.</description>
    </item>
    
    <item>
      <title>우분투 부팅이 이상하게 느린경우</title>
      <link>https://kasworld.github.io/posts/2007-12-30-%EC%9A%B0%EB%B6%84%ED%88%AC%EB%B6%80%ED%8C%85%EC%9D%B4%EC%9D%B4%EC%83%81%ED%95%98%EA%B2%8C%EB%8A%90%EB%A6%B0%EA%B2%BD%EC%9A%B0/</link>
      <pubDate>Sun, 30 Dec 2007 12:06:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2007-12-30-%EC%9A%B0%EB%B6%84%ED%88%AC%EB%B6%80%ED%8C%85%EC%9D%B4%EC%9D%B4%EC%83%81%ED%95%98%EA%B2%8C%EB%8A%90%EB%A6%B0%EA%B2%BD%EC%9A%B0/</guid>
      <description>우분투 포럼을 뒤져서 알아낸 노우 하우를 기록 합니다.
이상하게 7.10이되면서 부팅하면서 나오던 이쁜 splash화면이 더이상 안나와서 그냥 그러러니 했었는데. 이렇게 화면이 나오지 않는 경우 스플래쉬 화면을 찾느라 부팅까지 느리게 만드는것 같습니다. ( 아마 계속 재시도 하느라 시간을 잡아 먹는듯. ) 그냥 스플래쉬 화면을 포기하고 예전처럼 부팅과정을 보는것을 감수 할생각이 있다면 ( 그리고 더이상 부팅시 필요없는 딜레이를 없애려면. ) sudo apt-get install sysv-rc-conf 하고 ( 부팅시 자동실행되는 서비스나 자동 실행 프로그램을 변경하는 프로그램입니다.</description>
    </item>
    
    <item>
      <title>프로그래밍 언어 선호도 등수</title>
      <link>https://kasworld.github.io/posts/2007-12-17-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%96%B8%EC%96%B4%EC%84%A0%ED%98%B8%EB%8F%84%EB%93%B1%EC%88%98/</link>
      <pubDate>Mon, 17 Dec 2007 14:16:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2007-12-17-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%96%B8%EC%96%B4%EC%84%A0%ED%98%B8%EB%8F%84%EB%93%B1%EC%88%98/</guid>
      <description>조사 방법이 약간 다를수도 있겠지만 참고하기는 충분히 의미있는 자료로 보입니다. http://www.tiobe.com/tpci.htm 부제가 사상 최초로 python이 perl을 넘어섰다. 입니다. ^^
대부분 아는 언이이고 써보기도 했는데.. &amp;ldquo;D&amp;rdquo; 란 언어가 눈에 들어 오는군요. ^^</description>
    </item>
    
    <item>
      <title>리눅스를 메인으로 사용해보기</title>
      <link>https://kasworld.github.io/posts/2007-12-16-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%A5%BC%EB%A9%94%EC%9D%B8%EC%9C%BC%EB%A1%9C%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Sun, 16 Dec 2007 18:15:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2007-12-16-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%A5%BC%EB%A9%94%EC%9D%B8%EC%9C%BC%EB%A1%9C%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0/</guid>
      <description>지난주에 갑자기 바람이 불어서 ( 실은 윈도우에 싫증이나서) 하드를 포멧하고 윈도우와 우분투7.10 64it를 멀티 부트로 설치 했습니다.
지난 1주간 윈도우로 부팅할 일이 없더군요. ^^
나중에 혹시 게임을 할지도 몰라서 윈도우 파티션을 남겨 두고 있긴 합니다만..
리눅스도 많이 좋아 졌습니다.
아! 이 글을 보고 혹시 나도 한번? 이라고 생각하시면 조금 더 생각하시길 .. 저는 윈도우를 쓰던 시절부터 오픈 오피스/파이어 폭스/GIMP/AMP 등을 사용하며 조금씩 준비해온 상태에서 리눅스로 이전한겁니다. 그냥 한번 설치해 볼까 라고 생각하고 설치하시면 구글에서 grub uninstall 을 치고 계시는 자신을 발견하실 겁니다.</description>
    </item>
    
    <item>
      <title>python 새버전이 나왔습니다.</title>
      <link>https://kasworld.github.io/posts/2006-04-03-python%EC%83%88%EB%B2%84%EC%A0%84%EC%9D%B4%EB%82%98%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Mon, 03 Apr 2006 14:51:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2006-04-03-python%EC%83%88%EB%B2%84%EC%A0%84%EC%9D%B4%EB%82%98%EC%99%94%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>어느새 2.4.3 이 나왔군요. http://www.python.org/ 시간 참 잘~~갑니다. 그러고 보면 vim 도 버전 7의 베타 테스트 중이고. http://vim.sourceforge.net/ 다들 열심히 살고 있는거겠죠?</description>
    </item>
    
    <item>
      <title>파이썬에서 유니코드 문서를 읽고 쓰는법</title>
      <link>https://kasworld.github.io/posts/2006-01-22-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%97%90%EC%84%9C%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C%EB%AC%B8%EC%84%9C%EB%A5%BC%EC%9D%BD%EA%B3%A0%EC%93%B0%EB%8A%94%EB%B2%95/</link>
      <pubDate>Sun, 22 Jan 2006 13:51:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2006-01-22-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%97%90%EC%84%9C%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C%EB%AC%B8%EC%84%9C%EB%A5%BC%EC%9D%BD%EA%B3%A0%EC%93%B0%EB%8A%94%EB%B2%95/</guid>
      <description>1 import os,sys,string 2 import codecs 3 4 5 fncodec = codecs.getdecoder(&amp;ldquo;utf_16&amp;rdquo;) 6 7 fd = codecs.open( &amp;ldquo;unicode file.txt&amp;rdquo; , &amp;ldquo;r&amp;rdquo; , &amp;ldquo;utf_16&amp;rdquo; ) 8 utext = fd.readlines() 9 fd.close() 10 11 utext2 = [] 12 13 for i in utext : 14 if &amp;ldquo;Search String&amp;rdquo; in i: 15 utext2.append(i) 16 17 print len(utext),len(utext2) 18 19 fd = codecs.open( &amp;ldquo;unicode out.txt&amp;rdquo; , &amp;ldquo;w&amp;rdquo;,&amp;ldquo;utf_16&amp;rdquo; ) 20 fd.writelines(utext2) 21 fd.close()
별거 아니지만 자주 쓸 일이 있을것 같아서.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>개발 on 취미로 프로그래밍을 하는 사람입니다.</title>
    <link>https://kasworld.github.io/tags/%EA%B0%9C%EB%B0%9C/</link>
    <description>Recent content in 개발 on 취미로 프로그래밍을 하는 사람입니다.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 09 May 2017 11:14:00 +0900</lastBuildDate><atom:link href="https://kasworld.github.io/tags/%EA%B0%9C%EB%B0%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>어떤 질문지의 답변문서</title>
      <link>https://kasworld.github.io/posts/2017-05-09-%EC%96%B4%EB%96%A4%EC%A7%88%EB%AC%B8%EC%A7%80%EC%9D%98%EB%8B%B5%EB%B3%80%EB%AC%B8%EC%84%9C/</link>
      <pubDate>Tue, 09 May 2017 11:14:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-05-09-%EC%96%B4%EB%96%A4%EC%A7%88%EB%AC%B8%EC%A7%80%EC%9D%98%EB%8B%B5%EB%B3%80%EB%AC%B8%EC%84%9C/</guid>
      <description>어쩌다 쓰게된 질문지의 답변을 적다보니 재밌어서 (허락을 얻은후) 블로그에도 공유해봅니다. 1. 자기 소개를 해주세요. – 경력이어도 좋고 그냥 자신이 생각하는 자기 얘기여도 좋습니다.
** **
프로그래밍이란걸 시작한지 30년이 좀 넘은 낡은 프로그래머로 유부남 - SINK 족 ( single income no kid ) 이며 돈많이 벌어서 은퇴해서 프로그램 짜며 여생을 보내고 싶어하는 사람 입니다. ** **
2. 지금 무슨 일을 하고 계신가요?
조그마한 게임 회사(40명정도?) 에서 모바일 게임 서버 개발을 하고 있습니다.</description>
    </item>
    
    <item>
      <title>wxgame2를 개선 하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2014-03-22-wxgame2%EB%A5%BC%EA%B0%9C%EC%84%A0%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 22 Mar 2014 17:13:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-03-22-wxgame2%EB%A5%BC%EA%B0%9C%EC%84%A0%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>새로 바뀐 스크린 샷
client/server 실행법
서버는 인자없이 그냥 실행하면 됩니다. python wxgame2server.py 또는 이번 C/S 분리의 목적중 하나인 wxpython 코드 제거로 wxpython코드가 서버에는 없기 때문에 pypy를 사용할 수도 있습니다.
클라이언트 실행 python wxgame2client.py -s serverip -t teamname -s 는 접속할 서버의 주소, port는 고정입니다. -t 는 클라이언트 AI의 팀 이름 -t 옵션이 생략되면 서버에 observer mode로 접속합니다. ( 서버가 보내주는 정보를 화면에 표시만 하는 모드 ) 각 팀은 랜덤한 teamcolor를 가지며 그 color대로 표시됩니다.</description>
    </item>
    
    <item>
      <title>wxgame2 의 네트웍 버전이 거의 완료 되었습니다. </title>
      <link>https://kasworld.github.io/posts/2014-03-15-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%B4%EA%B1%B0%EC%9D%98%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sat, 15 Mar 2014 18:48:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-03-15-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%B4%EA%B1%B0%EC%9D%98%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>사진 설명 - 서버에 네개의 네트웍 클라이언트를 접속하여 실행 중인 화면.
이전 글들 이후로 개인적 여유 시간을 대부분 투자하여 ( 아직 버그가 좀 남아있긴 하지만;) wxgame2 의 네트웍 버전을 거의다 만들었습니다.
github의 코드 를 보시면 알게 되겠지만 기존 wxgame2 코드의 상당부분이 재 작성 되었으며 네트웍 쪽 코드도 수차례 재 작성하였습니다.
정식 MMORPG처럼 모든 판단은 서버에서 이루어지며 각 클라이언트는 시각화와 클라이언트 AI 만 작동하는 형태 입니다. 서버 사이드 AI도 존재 하는데 이것은 서버의 NPC를 시뮬레이션 하는 것입니다.</description>
    </item>
    
    <item>
      <title>wxgame2의 네트웍버전을 위한 기반 작업을 진행하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2014-03-02-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%84%EC%9C%84%ED%95%9C%EA%B8%B0%EB%B0%98%EC%9E%91%EC%97%85%EC%9D%84%EC%A7%84%ED%96%89%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 02 Mar 2014 14:41:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-03-02-wxgame2%EC%9D%98%EB%84%A4%ED%8A%B8%EC%9B%8D%EB%B2%84%EC%A0%84%EC%9D%84%EC%9C%84%ED%95%9C%EA%B8%B0%EB%B0%98%EC%9E%91%EC%97%85%EC%9D%84%EC%A7%84%ED%96%89%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>이전 글 이후에 강의 준비를 하면서 코드를 보니 코드가 오래 되기도 했고 또 설계상의 결정들이 맘에 들지 않아 전체적인 재 정리를 해야겠다고 생각하고 있었습니다.
지난 주부터 시간 되는 대로 작업을 진행해서 로직을 수행하는 wxgame2server.py와 서버로 부터 받은 정보를 시각화하는 뷰어인 wxgame2client.py 로 만드는 것을 일정부분 끝냈습니다.
현재까지는 네트웍으로 데이터를 주고 받는 것은 안되어 있으며 간단하게 file/pickle 을 상용해서 서버-&amp;gt; 클라이언트간 정보를 전달하고 있습니다.
코드를 작성하다 보니 구조가 맘에 들지 않아 거의 뜯어 고치게 되었습니다.</description>
    </item>
    
    <item>
      <title>게임 프로그래밍 이란 주제로 결국 강의를 했습니다.</title>
      <link>https://kasworld.github.io/posts/2014-02-19-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9E%80%EC%A3%BC%EC%A0%9C%EB%A1%9C%EA%B2%B0%EA%B5%AD%EA%B0%95%EC%9D%98%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Wed, 19 Feb 2014 21:31:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-02-19-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9E%80%EC%A3%BC%EC%A0%9C%EB%A1%9C%EA%B2%B0%EA%B5%AD%EA%B0%95%EC%9D%98%EB%A5%BC%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>고려 대학교 고공 겨울학기의 한 꼭지로 게임 프로그래밍 이란 주제로 2시간 짜리 강의를 진행했습니다.
원래는 4일간 2시간씩 총 8시간 짜리 강의지만 첫날 2시간만 제가 하고 이후는 능력 좋고 경험 많은 후배가 강의를 진행하고 있습니다.
이전에 썼던 글 게임프로그래밍이라는 주제로
과 예전에 파이썬으로 만들었던 게임프레임웍을 github에 올렸습니다. 을 사용해서 강의를 진행 했으며
강의에 사용했던 프리젠테이션은 https://docs.google.com/presentation/d/1fNa2hY5qGE_bGnsT0NhmnVQQC6kjLuUb4i3HtQATJCI/edit#slide=id.p 에서 볼 수 있습니다.
전산 실습실에서 진행해서 실습과 병행하여 진행할 생각으로 실습 준비를 해갔으나 생각만큼 잘 되지는 않은 것 같습니다.</description>
    </item>
    
    <item>
      <title>예전에 파이썬으로 만들었던 게임프레임웍을 github에 올렸습니다. </title>
      <link>https://kasworld.github.io/posts/2014-01-19-%EC%98%88%EC%A0%84%EC%97%90%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%A4%EC%97%88%EB%8D%98%EA%B2%8C%EC%9E%84%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8D%EC%9D%84github%EC%97%90%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 19 Jan 2014 17:03:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-01-19-%EC%98%88%EC%A0%84%EC%97%90%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C%EB%A7%8C%EB%93%A4%EC%97%88%EB%8D%98%EA%B2%8C%EC%9E%84%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8D%EC%9D%84github%EC%97%90%EC%98%AC%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>파이썬과 wxpython을 사용해서 간단한! 2d 슈팅게임을 만들 수 있는 프레임웍과 예제 삼아 만들어본 AI만 있는 게임?을 github에 올렸습니다.
코드 내부의 주석을 보니 2011년에 만들어둔 것이군요.
그 동안 python홍보용으로 잘 써먹었던 프로젝트입니다. ( 파이썬으로 이런 게임도 만들 수 있어. 너도 배워 보지 않을래? 등 ^^ )
원래는 더 일찍 공개하려고 했으나 코드 정리등이 귀찮아서 미루다가 모 후배의 압박으로 대충 정리해서 올립니다.
관심 있으신 분은 https://github.com/kasworld/wxgame2 에서 받으면 됩니다.
원래 코드는 제가 개인적으로 만들어 사용하고 있는 kaswlib이란 것을 사용하도록 되어 있는데 github에 올리려니 서로다른 두개의 프로젝트가 되고 또 참조를 하려면 import path를 설정하는 것도 해야 해서 쓰기 불편할 듯 하여 아예 프로젝트 내부에 wxgamelib 파일에 사용하는 코드만 복사해 넣었습니다.</description>
    </item>
    
    <item>
      <title>게임프로그래밍이라는 주제로 </title>
      <link>https://kasworld.github.io/posts/2014-01-08-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9D%BC%EB%8A%94%EC%A3%BC%EC%A0%9C%EB%A1%9C/</link>
      <pubDate>Wed, 08 Jan 2014 10:42:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2014-01-08-%EA%B2%8C%EC%9E%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9D%BC%EB%8A%94%EC%A3%BC%EC%A0%9C%EB%A1%9C/</guid>
      <description>지인으로 부터 뜬금 없이 &amp;ldquo;게임프로그래밍&amp;quot;라는 주제로 특강을 해달라는 부탁을 받아서 ( 아직 할지 말지는 미정이긴 하지만 ) 이런 저런 생각이 들어 적어보고 있는( 즉 아직 작성중인 ) 문서입니다.
&amp;ldquo;게임을 만든다는 것은 무엇일까?&amp;rdquo; 게임이란 무엇일까? 게임의 정의를 논하는 것은 프로그래머 입장에선 쓸데없는 것일 테니 무시하기로 하고 ^^;;; 게임을 만드는 회사를 10년 넘게 다녔던 프로그래머로서 게임을 만든다는 것을 생각해보면 게임을 만들기 위한 직능을 준비하고 그 실무를 진행하는 것으로 정의해볼 수 있을 것 같습니다.</description>
    </item>
    
    <item>
      <title>제품/서비스 개발의 단계</title>
      <link>https://kasworld.github.io/posts/2013-12-26-%EC%A0%9C%ED%92%88%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%9C%EB%B0%9C%EC%9D%98%EB%8B%A8%EA%B3%84/</link>
      <pubDate>Thu, 26 Dec 2013 20:37:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-12-26-%EC%A0%9C%ED%92%88%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%9C%EB%B0%9C%EC%9D%98%EB%8B%A8%EA%B3%84/</guid>
      <description>일을 하다 보니 (회사에서 교육용으로) 필요해서 작성한 문서인데 나름 쓸만해 보여서 블로그에 올려 봅니다.
전과정을 간략히(세상에 좋은 , 잘 정리된 책들 많으니 ) 정리
각 단계에는 그에 어울리는 문서가 나와야 한다. 1. 프로덕트 초기 기획 단계 - concept design을 정리한다. product define을 하는 단계, 그래서 만드려는 것은 무엇인가?
간단히 설명할수 있을 정도로 개념을 잘 정리한다. 2. 프로덕트 기획 단계 - 만들고자 하는 것을 자세히 기획/design 한다. 그래서 자세히 말하면 뭔데? 뭐가 왜 좋은/재밌는 데?</description>
    </item>
    
    <item>
      <title>web2py access control(접근 제어) 정리.</title>
      <link>https://kasworld.github.io/posts/2013-12-10-web2pyaccesscontrol%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Tue, 10 Dec 2013 11:57:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-12-10-web2pyaccesscontrol%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%A0%95%EB%A6%AC/</guid>
      <description>회사 세미나용으로 http://web2py.com/books/default/chapter/29/09/access-control 을 요약한 내용 입니다.
접근제어 access control web2py 는 Role Based Access Control 제공 (RBAC)역할을 기반으로하는 접근제어로 context-based access control (CBAC) 과는 다르다. ( message의 context에 따라 달라지지 않는다, 상태, 혹은 데이터 ) user - role - job function 형태web2py 에서는 Auth class를 통해서 구현된다. 아래와 같은 테이블이 필요한데 프로젝트를 만들때 자동으로 코드가 생성된다. auth_user : 유저이름 , email , 암호 , 상태 (등록 대기, 완료, 블럭됨 )auth_group : 유저의 그룹(롤) 정보 , 이게 role ( 사용자 역할 ) auth_membership : group - user link table , user - group의 다대 다 연결.</description>
    </item>
    
    <item>
      <title>web2py 소개 </title>
      <link>https://kasworld.github.io/posts/2013-04-13-web2py%EC%86%8C%EA%B0%9C/</link>
      <pubDate>Sat, 13 Apr 2013 20:31:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2013-04-13-web2py%EC%86%8C%EA%B0%9C/</guid>
      <description>회사에서 세미나 용으로 작성한 글인데 쓰고 보니 이것 만으로도 web2py의 소개 용으로는 충분 할 것 같아서 그리고 블로그에 올려도 좋을 듯한 내용이어서 올려 봅니다.
원문은 http://web2py.com/books/default/chapter/29/03 이며 번역을 한 것이 아니고 업무에 필요한/필요할 것 같은 것들을 정리한 글이라 원문과 같이 놓고 보셔야 이해가 될 듯 합니다. 제가 맡은 부분인 Overview 부분 만 입니다. ^^
web2py 개요 - overview
** **
시작하기 - startup web2py는 윈도우와 맥에선 실행 프로그램으로도 제공되기 때문에 따로 python 이 필요하지 않다.</description>
    </item>
    
    <item>
      <title>uwsgi 사용시 주의점</title>
      <link>https://kasworld.github.io/posts/2011-07-08-uwsgi%EC%82%AC%EC%9A%A9%EC%8B%9C%EC%A3%BC%EC%9D%98%EC%A0%90/</link>
      <pubDate>Fri, 08 Jul 2011 11:25:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-07-08-uwsgi%EC%82%AC%EC%9A%A9%EC%8B%9C%EC%A3%BC%EC%9D%98%EC%A0%90/</guid>
      <description>uwsgi 사용시 (http://projects.unbit.it/uwsgi/wiki)
post data를 처리 하고 싶으면 결과 return/yield 를 내보내기 전에 읽어 와야 한다.
그렇지 않으면 메롱한 에러를 내는 경우가 왕왕 생긴다. ( 검색해보니 알려진 버그인듯. )
이것때문에 오늘 시간좀 소비 했음.
아 그리고 web service 개발할때 curl 이 정말 편하다. command line으로 http post를 할수 있으니 코드 테스트가 정말 편하게 이루어지더라. ;;;
역시 인간은 검색을 생활화 해야 하는 것이었다 ;;;</description>
    </item>
    
    <item>
      <title>python으로 웹 서비스 만들어보기.</title>
      <link>https://kasworld.github.io/posts/2011-07-07-python%EC%9C%BC%EB%A1%9C%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Thu, 07 Jul 2011 15:20:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-07-07-python%EC%9C%BC%EB%A1%9C%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0/</guid>
      <description>를 하기전에 ^^;;;
web server : apache , lighttpd, nginx , cherokee, cherrypy, simplehttpserver(python) web app protocol : static file, wsgi , uwsgi web app frame work : node, cherrypy, django , web2py, 중 어떤 조합을 사용할지를 결정해야 해서
그동안 써왔던 것을 모두 점검하는 의미로 간단/대충 벤치마크를 해봤음. 즉 이글은 그 기록을 남기기 위한 글. ^^
기본적으로 다 hello world 를 리턴하는 static file 또는 print 코드 를 사용 해서 테스트 했습니다.</description>
    </item>
    
    <item>
      <title>좋은 AI 만들기?</title>
      <link>https://kasworld.github.io/posts/2011-07-03-%EC%A2%8B%EC%9D%80ai%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Sun, 03 Jul 2011 19:30:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2011-07-03-%EC%A2%8B%EC%9D%80ai%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>시간 날때마다 집에서 간단한 슈팅 게임? 을 만들고 있습니다만.. ( 엄밀히 말하면 2D 게임을 위한 프레임웍 )
전 게임을 하는 것보다 구경하는 것을 더 좋아하는 편이기 때문에 대신 플레이해줄 AI들을 몇가지 만들고 있습니다.
몇종의 AI를 만들고(허접하지만) 각각의 AI끼리 대전을 시켜보며 구경을 하고 있는데..
만든 입장에서 더 실력이 좋을 거라고 생각하면 만든 AI 보다 대충 머리수 채우기로만든 AI가 더 점수가 좋은 경우가 꽤 있군요.
그러면 다시 코드를 보면서 이유를 생각하고 그 결과를 다시 반영해보고 하면서 즐기고 있습니다.</description>
    </item>
    
  </channel>
</rss>

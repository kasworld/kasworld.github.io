<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GUI on 취미로 프로그래밍을 하는 사람입니다.</title>
    <link>https://kasworld.github.io/tags/gui/</link>
    <description>Recent content in GUI on 취미로 프로그래밍을 하는 사람입니다.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Sun, 28 May 2017 14:40:00 +0900</lastBuildDate><atom:link href="https://kasworld.github.io/tags/gui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go sdl gui 의 새버전을 작업하고 있습니다. </title>
      <link>https://kasworld.github.io/posts/2017-05-28-gosdlgui%EC%9D%98%EC%83%88%EB%B2%84%EC%A0%84%EC%9D%84%EC%9E%91%EC%97%85%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</link>
      <pubDate>Sun, 28 May 2017 14:40:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2017-05-28-gosdlgui%EC%9D%98%EC%83%88%EB%B2%84%EC%A0%84%EC%9D%84%EC%9E%91%EC%97%85%ED%95%98%EA%B3%A0%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4/</guid>
      <description>오류가 발생했습니다. www.youtube.com에서 동영상을 시청하거나 브라우저에서 자바스크립트가 사용 중지된 경우 사용 설정하세요.
https://github.com/veandco/go-sdl2 를 기반으로 만들었던
https://github.com/kasworld/go-sdlgui 가 별로 맘에 안들어서 아예 새로 작업을 조금씩 해보고 있습니다.
go-sdlgui 와는 기반이 되는 design decision 이 달라서 아예 다른 형태의 구현이 될것 같습니다.</description>
    </item>
    
    <item>
      <title>go 언어로 GUI 프로그램을 만들기.</title>
      <link>https://kasworld.github.io/posts/2015-02-20-go%EC%96%B8%EC%96%B4%EB%A1%9Cgui%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Fri, 20 Feb 2015 16:02:00 +0900</pubDate>
      
      <guid>https://kasworld.github.io/posts/2015-02-20-go%EC%96%B8%EC%96%B4%EB%A1%9Cgui%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>goguelike는 애초 목표가 필요한것은 찾아 쓰고 없으면 만들어 사용한다. 였고 필요한 기능은 다중 client를 지원하는 TCP server GUI client with mouse and keyboard input server info by web auto generated terrain server and client side AI 그외 system의 contents에 해당하는 부분들 정도였습니다.
대부분의 기능은 구현이 가능했는데 go 언어용 GUI 라이브러리 만은 잘 보이지 않더군요.
실제로 검색해 보면 대부분의 GUI 라이브러리들이 만들다 만것들이거나 아니면 더이상 관리되지 않는 것들, 시험삼아 만들어 본것들 이었습니다.</description>
    </item>
    
  </channel>
</rss>
